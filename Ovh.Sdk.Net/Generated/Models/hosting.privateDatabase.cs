//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _hosting_privateDatabase {
    
    
    // Id: AvailableRamSizeEnum Namespace: hosting.privateDatabase
    public enum AvailableRamSizeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("1024")]
        _1024,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2048")]
        _2048,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("4096")]
        _4096,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("512")]
        _512,
    }
    
    // Id: AvailableVersionEnum Namespace: hosting.privateDatabase
    public enum AvailableVersionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.11")]
        mariadb_10_11,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.5")]
        mariadb_10_5,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.6")]
        mariadb_10_6,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mysql_8.0")]
        mysql_8_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_12")]
        postgresql_12,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_13")]
        postgresql_13,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_14")]
        postgresql_14,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_15")]
        postgresql_15,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis_6.0")]
        redis_6_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis_7.0")]
        redis_7_0,
    }
    
    // Id: Capability Namespace: hosting.privateDatabase
    public class Capability {
        
        // Key: create Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("create")]
        public bool Create { get; set; }//;
        
        // Key: delete Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delete")]
        public bool Delete { get; set; }//;
        
        // Key: object Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("object")]
        public string @object { get; set; }//;
        
        // Key: update Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("update")]
        public bool Update { get; set; }//;
    }
    
    // Id: ChangeFtpPasswordPayload Namespace: hosting.privateDatabase
    public class ChangeFtpPasswordPayload {
        
        // Key: password Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("password")]
        public string Password { get; set; }//;
    }
    
    // Id: ChangeVersionPayload Namespace: hosting.privateDatabase
    public class ChangeVersionPayload {
        
        // Key: version Type: hosting.privateDatabase.AvailableVersionEnum FullType: hosting.privateDatabase.AvailableVersionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public _hosting_privateDatabase.AvailableVersionEnum Version { get; set; }//;
    }
    
    // Id: ConfigDetail Namespace: hosting.privateDatabase
    public class ConfigDetail {
        
        // Key: availableValues Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("availableValues")]
        public string[] AvailableValues { get; set; }//;
        
        // Key: defaultValue Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("defaultValue")]
        public string DefaultValue { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: key Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("key")]
        public string Key { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: type Type: hosting.privateDatabase.config.TypeEnum FullType: hosting.privateDatabase.config.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _hosting_privateDatabase_config.TypeEnum Type { get; set; }//;
        
        // Key: unit Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unit")]
        public System.String? Unit { get; set; }//;
        
        // Key: value Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public string Value { get; set; }//;
    }
    
    // Id: ConfigKeyValue Namespace: hosting.privateDatabase
    public class ConfigKeyValue {
        
        // Key: key Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("key")]
        public string Key { get; set; }//;
        
        // Key: value Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public string Value { get; set; }//;
    }
    
    // Id: ConfigUpdatePayload Namespace: hosting.privateDatabase
    public class ConfigUpdatePayload {
        
        // Key: parameters Type: hosting.privateDatabase.ConfigKeyValue[] FullType: hosting.privateDatabase.ConfigKeyValue[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parameters")]
        public _hosting_privateDatabase.ConfigKeyValue[] Parameters { get; set; }//;
    }
    
    // Id: Configs Namespace: hosting.privateDatabase
    public class Configs {
        
        // Key: details Type: hosting.privateDatabase.ConfigDetail[] FullType: hosting.privateDatabase.ConfigDetail[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("details")]
        public _hosting_privateDatabase.ConfigDetail[] Details { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: status Type: hosting.privateDatabase.config.StatusEnum FullType: hosting.privateDatabase.config.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _hosting_privateDatabase_config.StatusEnum Status { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public System.Int64? TaskId { get; set; }//;
    }
    
    // Id: CpuThrottle Namespace: hosting.privateDatabase
    public class CpuThrottle {
        
        // Key: endDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endDate")]
        public System.DateTime? EndDate { get; set; }//;
        
        // Key: startDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startDate")]
        public System.DateTime StartDate { get; set; }//;
    }
    
    // Id: Database Namespace: hosting.privateDatabase
    public class Database {
        
        // Key: backupTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupTime")]
        public System.TimeOnly? BackupTime { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: databaseName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("databaseName")]
        public string DatabaseName { get; set; }//;
        
        // Key: quotaUsed Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quotaUsed")]
        public _complexType.UnitAndValue<long> QuotaUsed { get; set; }//;
        
        // Key: users Type: hosting.privateDatabase.Database.User[] FullType: hosting.privateDatabase.Database.User[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("users")]
        public _hosting_privateDatabase_Database.User[] Users { get; set; }//;
    }
    
    // Id: DatabaseWizardPayload Namespace: hosting.privateDatabase
    public class DatabaseWizardPayload {
        
        // Key: databaseName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("databaseName")]
        public string DatabaseName { get; set; }//;
        
        // Key: grant Type: hosting.privateDatabase.grant.GrantEnum FullType: hosting.privateDatabase.grant.GrantEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("grant")]
        public _hosting_privateDatabase_grant.GrantEnum Grant { get; set; }//;
        
        // Key: password Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("password")]
        public string Password { get; set; }//;
        
        // Key: userName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userName")]
        public string UserName { get; set; }//;
    }
    
    // Id: DatacenterEnum Namespace: hosting.privateDatabase
    public enum DatacenterEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bhs1")]
        bhs1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gra1")]
        gra1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gra2")]
        gra2,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gra3")]
        gra3,
    }
    
    // Id: Dump Namespace: hosting.privateDatabase
    public class Dump {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: databaseName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("databaseName")]
        public string DatabaseName { get; set; }//;
        
        // Key: deletionDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deletionDate")]
        public System.DateTime DeletionDate { get; set; }//;
        
        // Key: dumpId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dumpId")]
        public long DumpId { get; set; }//;
        
        // Key: orphan Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("orphan")]
        public bool Orphan { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public string Url { get; set; }//;
    }
    
    // Id: Extension Namespace: hosting.privateDatabase
    public class Extension {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: extensionName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extensionName")]
        public string ExtensionName { get; set; }//;
        
        // Key: requiredExtensions Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("requiredExtensions")]
        public string[] RequiredExtensions { get; set; }//;
        
        // Key: status Type: hosting.privateDatabase.extension.StatusEnum FullType: hosting.privateDatabase.extension.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _hosting_privateDatabase_extension.StatusEnum Status { get; set; }//;
    }
    
    // Id: GraphEndpoint Namespace: hosting.privateDatabase
    public class GraphEndpoint {
        
        // Key: host Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("host")]
        public string Host { get; set; }//;
        
        // Key: readToken Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readToken")]
        public string ReadToken { get; set; }//;
        
        // Key: readTokenId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readTokenId")]
        public string ReadTokenId { get; set; }//;
    }
    
    // Id: InfrastructureEnum Namespace: hosting.privateDatabase
    public enum InfrastructureEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("docker")]
        docker,
    }
    
    // Id: MetricsToken Namespace: hosting.privateDatabase
    public class MetricsToken {
        
        // Key: endpoint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endpoint")]
        public string Endpoint { get; set; }//;
        
        // Key: token Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("token")]
        public string Token { get; set; }//;
    }
    
    // Id: OfferEnum Namespace: hosting.privateDatabase
    public enum OfferEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("classic")]
        classic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("public")]
        @public,
    }
    
    // Id: Oom Namespace: hosting.privateDatabase
    public class Oom {
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public System.DateTime Date { get; set; }//;
        
        // Key: sizeReached Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sizeReached")]
        public long SizeReached { get; set; }//;
    }
    
    // Id: Service Namespace: hosting.privateDatabase
    public class Service {
        
        // Key: capabilities Type: hosting.privateDatabase.Capability[] FullType: hosting.privateDatabase.Capability[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capabilities")]
        public _hosting_privateDatabase.Capability[] Capabilities { get; set; }//;
        
        // Key: cpu Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu")]
        public long Cpu { get; set; }//;
        
        // Key: datacenter Type: hosting.privateDatabase.DatacenterEnum FullType: hosting.privateDatabase.DatacenterEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public _hosting_privateDatabase.DatacenterEnum Datacenter { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: graphEndpoint Type: hosting.privateDatabase.GraphEndpoint FullType: hosting.privateDatabase.GraphEndpoint
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("graphEndpoint")]
        public _hosting_privateDatabase.GraphEndpoint? GraphEndpoint { get; set; }//;
        
        // Key: guiURL Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("guiURL")]
        public System.String? GuiURL { get; set; }//;
        
        // Key: hostname Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostname")]
        public string Hostname { get; set; }//;
        
        // Key: hostnameFtp Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostnameFtp")]
        public System.String? HostnameFtp { get; set; }//;
        
        // Key: infrastructure Type: hosting.privateDatabase.InfrastructureEnum FullType: hosting.privateDatabase.InfrastructureEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("infrastructure")]
        public _hosting_privateDatabase.InfrastructureEnum Infrastructure { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public System.String? Ip { get; set; }//;
        
        // Key: lastCheck Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastCheck")]
        public System.DateTime LastCheck { get; set; }//;
        
        // Key: offer Type: hosting.privateDatabase.OfferEnum FullType: hosting.privateDatabase.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public _hosting_privateDatabase.OfferEnum Offer { get; set; }//;
        
        // Key: port Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("port")]
        public long Port { get; set; }//;
        
        // Key: portFtp Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portFtp")]
        public System.Int64? PortFtp { get; set; }//;
        
        // Key: quotaSize Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quotaSize")]
        public _complexType.UnitAndValue<long> QuotaSize { get; set; }//;
        
        // Key: quotaUsed Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quotaUsed")]
        public _complexType.UnitAndValue<long> QuotaUsed { get; set; }//;
        
        // Key: ram Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ram")]
        public _complexType.UnitAndValue<long> Ram { get; set; }//;
        
        // Key: server Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("server")]
        public string Server { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
        
        // Key: state Type: hosting.privateDatabase.StateEnum FullType: hosting.privateDatabase.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _hosting_privateDatabase.StateEnum State { get; set; }//;
        
        // Key: tlsCa Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("tlsCa")]
        public System.String? TlsCa { get; set; }//;
        
        // Key: type Type: hosting.privateDatabase.TypeEnum FullType: hosting.privateDatabase.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _hosting_privateDatabase.TypeEnum Type { get; set; }//;
        
        // Key: version Type: hosting.privateDatabase.VersionEnum FullType: hosting.privateDatabase.VersionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public _hosting_privateDatabase.VersionEnum Version { get; set; }//;
        
        // Key: versionLabel Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("versionLabel")]
        public string VersionLabel { get; set; }//;
        
        // Key: versionNumber Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("versionNumber")]
        public double VersionNumber { get; set; }//;
    }
    
    // Id: Service Namespace: hosting.privateDatabase
    public class ServiceWithIAM {
        
        // Key: capabilities Type: hosting.privateDatabase.Capability[] FullType: hosting.privateDatabase.Capability[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capabilities")]
        public _hosting_privateDatabase.Capability[] Capabilities { get; set; }//;
        
        // Key: cpu Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu")]
        public long Cpu { get; set; }//;
        
        // Key: datacenter Type: hosting.privateDatabase.DatacenterEnum FullType: hosting.privateDatabase.DatacenterEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public _hosting_privateDatabase.DatacenterEnum Datacenter { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: graphEndpoint Type: hosting.privateDatabase.GraphEndpoint FullType: hosting.privateDatabase.GraphEndpoint
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("graphEndpoint")]
        public _hosting_privateDatabase.GraphEndpoint? GraphEndpoint { get; set; }//;
        
        // Key: guiURL Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("guiURL")]
        public System.String? GuiURL { get; set; }//;
        
        // Key: hostname Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostname")]
        public string Hostname { get; set; }//;
        
        // Key: hostnameFtp Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostnameFtp")]
        public System.String? HostnameFtp { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: infrastructure Type: hosting.privateDatabase.InfrastructureEnum FullType: hosting.privateDatabase.InfrastructureEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("infrastructure")]
        public _hosting_privateDatabase.InfrastructureEnum Infrastructure { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public System.String? Ip { get; set; }//;
        
        // Key: lastCheck Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastCheck")]
        public System.DateTime LastCheck { get; set; }//;
        
        // Key: offer Type: hosting.privateDatabase.OfferEnum FullType: hosting.privateDatabase.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public _hosting_privateDatabase.OfferEnum Offer { get; set; }//;
        
        // Key: port Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("port")]
        public long Port { get; set; }//;
        
        // Key: portFtp Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portFtp")]
        public System.Int64? PortFtp { get; set; }//;
        
        // Key: quotaSize Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quotaSize")]
        public _complexType.UnitAndValue<long> QuotaSize { get; set; }//;
        
        // Key: quotaUsed Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quotaUsed")]
        public _complexType.UnitAndValue<long> QuotaUsed { get; set; }//;
        
        // Key: ram Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ram")]
        public _complexType.UnitAndValue<long> Ram { get; set; }//;
        
        // Key: server Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("server")]
        public string Server { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
        
        // Key: state Type: hosting.privateDatabase.StateEnum FullType: hosting.privateDatabase.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _hosting_privateDatabase.StateEnum State { get; set; }//;
        
        // Key: tlsCa Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("tlsCa")]
        public System.String? TlsCa { get; set; }//;
        
        // Key: type Type: hosting.privateDatabase.TypeEnum FullType: hosting.privateDatabase.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _hosting_privateDatabase.TypeEnum Type { get; set; }//;
        
        // Key: version Type: hosting.privateDatabase.VersionEnum FullType: hosting.privateDatabase.VersionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public _hosting_privateDatabase.VersionEnum Version { get; set; }//;
        
        // Key: versionLabel Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("versionLabel")]
        public string VersionLabel { get; set; }//;
        
        // Key: versionNumber Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("versionNumber")]
        public double VersionNumber { get; set; }//;
    }
    
    // Id: StateEnum Namespace: hosting.privateDatabase
    public enum StateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("detached")]
        detached,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restartPending")]
        restartPending,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startPending")]
        startPending,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("started")]
        started,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopPending")]
        stopPending,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopped")]
        stopped,
    }
    
    // Id: Task Namespace: hosting.privateDatabase
    public class Task {
        
        // Key: databaseName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("databaseName")]
        public System.String? DatabaseName { get; set; }//;
        
        // Key: doneDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doneDate")]
        public System.DateTime? DoneDate { get; set; }//;
        
        // Key: dumpId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dumpId")]
        public System.Int64? DumpId { get; set; }//;
        
        // Key: function Type: hosting.privateDatabase.task.FunctionEnum FullType: hosting.privateDatabase.task.FunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public _hosting_privateDatabase_task.FunctionEnum Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime? LastUpdate { get; set; }//;
        
        // Key: startDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startDate")]
        public System.DateTime StartDate { get; set; }//;
        
        // Key: status Type: hosting.privateDatabase.task.StatusEnum FullType: hosting.privateDatabase.task.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _hosting_privateDatabase_task.StatusEnum Status { get; set; }//;
        
        // Key: userName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userName")]
        public System.String? UserName { get; set; }//;
    }
    
    // Id: TemporaryUrlInformations Namespace: hosting.privateDatabase
    public class TemporaryUrlInformations {
        
        // Key: expirationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public System.DateTime ExpirationDate { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public string Url { get; set; }//;
    }
    
    // Id: TypeEnum Namespace: hosting.privateDatabase
    public enum TypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb")]
        mariadb,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mysql")]
        mysql,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql")]
        postgresql,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis")]
        redis,
    }
    
    // Id: User Namespace: hosting.privateDatabase
    public class User {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: databases Type: hosting.privateDatabase.User.Database[] FullType: hosting.privateDatabase.User.Database[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("databases")]
        public _hosting_privateDatabase_User.Database[] Databases { get; set; }//;
        
        // Key: userName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userName")]
        public string UserName { get; set; }//;
    }
    
    // Id: VersionEnum Namespace: hosting.privateDatabase
    public enum VersionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.11")]
        mariadb_10_11,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.5")]
        mariadb_10_5,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mariadb_10.6")]
        mariadb_10_6,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mysql_8.0")]
        mysql_8_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_12")]
        postgresql_12,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_13")]
        postgresql_13,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_14")]
        postgresql_14,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql_15")]
        postgresql_15,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis_6.0")]
        redis_6_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis_7.0")]
        redis_7_0,
    }
    
    // Id: Whitelist Namespace: hosting.privateDatabase
    public class Whitelist {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: ip Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: service Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("service")]
        public bool Service { get; set; }//;
        
        // Key: sftp Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sftp")]
        public bool Sftp { get; set; }//;
        
        // Key: status Type: hosting.privateDatabase.whitelist.StatusEnum FullType: hosting.privateDatabase.whitelist.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _hosting_privateDatabase_whitelist.StatusEnum Status { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public System.Int64? TaskId { get; set; }//;
    }
    
    // Id: availableOrderCapacities Namespace: hosting.privateDatabase
    public class availableOrderCapacities {
        
        // Key: datacenter Type: hosting.privateDatabase.DatacenterEnum[] FullType: hosting.privateDatabase.DatacenterEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public _hosting_privateDatabase.DatacenterEnum[] Datacenter { get; set; }//;
        
        // Key: offer Type: hosting.privateDatabase.OfferEnum FullType: hosting.privateDatabase.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public _hosting_privateDatabase.OfferEnum Offer { get; set; }//;
        
        // Key: ram Type: hosting.privateDatabase.AvailableRamSizeEnum[] FullType: hosting.privateDatabase.AvailableRamSizeEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ram")]
        public _hosting_privateDatabase.AvailableRamSizeEnum[] Ram { get; set; }//;
        
        // Key: version Type: hosting.privateDatabase.AvailableVersionEnum[] FullType: hosting.privateDatabase.AvailableVersionEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public _hosting_privateDatabase.AvailableVersionEnum[] Version { get; set; }//;
    }
    
    // Id: webhostingNetwork Namespace: hosting.privateDatabase
    public class webhostingNetwork {
        
        // Key: status Type: hosting.privateDatabase.webhostingNetwork.StatusEnum FullType: hosting.privateDatabase.webhostingNetwork.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _hosting_privateDatabase_webhostingNetwork.StatusEnum Status { get; set; }//;
    }
}
