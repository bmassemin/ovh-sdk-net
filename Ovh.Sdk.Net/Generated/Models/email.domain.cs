//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _email_domain {
    
    
    // Id: Account Namespace: email.domain
    public class Account {
        
        // Key: accountName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accountName")]
        public required System.String AccountName { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: isBlocked Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isBlocked")]
        public required System.Boolean IsBlocked { get; set; }//;
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required System.Int64 Size { get; set; }//;
    }
    
    // Id: AccountDelegated Namespace: email.domain
    public class AccountDelegated {
        
        // Key: accountName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accountName")]
        public required System.String AccountName { get; set; }//;
        
        // Key: allowedAccountSize Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedAccountSize")]
        public System.Int64[]? AllowedAccountSize { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: isBlocked Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isBlocked")]
        public required System.Boolean IsBlocked { get; set; }//;
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required System.Int64 Size { get; set; }//;
    }
    
    // Id: Acl Namespace: email.domain
    public class Acl {
        
        // Key: accountId Type: string FullType: coreTypes.AccountId:string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accountId")]
        public required System.String AccountId { get; set; }//;
    }
    
    // Id: DKIMSelector Namespace: email.domain
    public class DKIMSelector {
        
        // Key: cname Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cname")]
        public required System.String Cname { get; set; }//;
        
        // Key: selectorName Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("selectorName")]
        public required System.String SelectorName { get; set; }//;
        
        // Key: status Type: email.domain.DKIMSelectorStatusEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _email_domain.DKIMSelectorStatusEnum Status { get; set; }//;
    }
    
    // Id: DKIMSelectorStatusEnum Namespace: email.domain
    public enum DKIMSelectorStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("set")]
        set,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toFix")]
        toFix,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toSet")]
        toSet,
    }
    
    // Id: DKIMStatusEnum Namespace: email.domain
    public enum DKIMStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("modifying")]
        modifying,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toConfigure")]
        toConfigure,
    }
    
    // Id: Delegation Namespace: email.domain
    public class Delegation {
        
        // Key: accountId Type: string FullType: coreTypes.AccountId:string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accountId")]
        public required System.String AccountId { get; set; }//;
    }
    
    // Id: Diagnose Namespace: email.domain
    public class Diagnose {
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public required System.DateTime Date { get; set; }//;
        
        // Key: function Type: email.domain.DomainDiagnoseFunctionEnum FullType: email.domain.DomainDiagnoseFunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public required _email_domain.DomainDiagnoseFunctionEnum Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: result Type: email.domain.DomainDiagnoseResultEnum FullType: email.domain.DomainDiagnoseResultEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("result")]
        public _email_domain.DomainDiagnoseResultEnum? Result { get; set; }//;
        
        // Key: trace Type: email.domain.DomainDiagnoseTraceStruct<email.domain.DomainDiagnoseResultEnum>[] FullType: email.domain.DomainDiagnoseTraceStruct<email.domain.DomainDiagnoseResultEnum>[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("trace")]
        public _email_domain.DomainDiagnoseTraceStruct<_email_domain.DomainDiagnoseResultEnum>[]? Trace { get; set; }//;
    }
    
    // Id: DiagnoseEnum Namespace: email.domain
    public enum DiagnoseEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checkFail")]
        checkFail,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("invalid")]
        invalid,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("none")]
        none,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("valid")]
        valid,
    }
    
    // Id: DomainDiagnoseFunctionEnum Namespace: email.domain
    public enum DomainDiagnoseFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MX")]
        MX,
    }
    
    // Id: DomainDiagnoseResultEnum Namespace: email.domain
    public enum DomainDiagnoseResultEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CUSTOM")]
        CUSTOM,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DEPRECATED")]
        DEPRECATED,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("KO")]
        KO,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("OK")]
        OK,
    }
    
    // Id: DomainDiagnoseTraceStruct Namespace: email.domain
    public class DomainDiagnoseTraceStruct<T> {
        
        // Key: result Type: T FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("result")]
        public required T Result { get; set; }//;
        
        // Key: test Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("test")]
        public required System.String Test { get; set; }//;
    }
    
    // Id: DomainService Namespace: email.domain
    public class DomainService {
        
        // Key: allowedAccountSize Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedAccountSize")]
        public System.Int64[]? AllowedAccountSize { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime? CreationDate { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: filerz Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filerz")]
        public System.Int64? Filerz { get; set; }//;
        
        // Key: isMXValid Type: email.domain.DiagnoseEnum FullType: email.domain.DiagnoseEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isMXValid")]
        public required _email_domain.DiagnoseEnum IsMXValid { get; set; }//;
        
        // Key: isSPFValid Type: email.domain.DiagnoseEnum FullType: email.domain.DiagnoseEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isSPFValid")]
        public required _email_domain.DiagnoseEnum IsSPFValid { get; set; }//;
        
        // Key: linkTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("linkTo")]
        public System.String? LinkTo { get; set; }//;
        
        // Key: migratedMXPlanServiceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migratedMXPlanServiceName")]
        public System.String? MigratedMXPlanServiceName { get; set; }//;
        
        // Key: offer Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public System.String? Offer { get; set; }//;
        
        // Key: status Type: domain.DomainStatusEnum FullType: domain.DomainStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _domain.DomainStatusEnum Status { get; set; }//;
    }
    
    // Id: DomainService Namespace: email.domain
    public class DomainServiceWithIAM {
        
        // Key: allowedAccountSize Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedAccountSize")]
        public System.Int64[]? AllowedAccountSize { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime? CreationDate { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: filerz Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filerz")]
        public System.Int64? Filerz { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: isMXValid Type: email.domain.DiagnoseEnum FullType: email.domain.DiagnoseEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isMXValid")]
        public required _email_domain.DiagnoseEnum IsMXValid { get; set; }//;
        
        // Key: isSPFValid Type: email.domain.DiagnoseEnum FullType: email.domain.DiagnoseEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isSPFValid")]
        public required _email_domain.DiagnoseEnum IsSPFValid { get; set; }//;
        
        // Key: linkTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("linkTo")]
        public System.String? LinkTo { get; set; }//;
        
        // Key: migratedMXPlanServiceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migratedMXPlanServiceName")]
        public System.String? MigratedMXPlanServiceName { get; set; }//;
        
        // Key: offer Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public System.String? Offer { get; set; }//;
        
        // Key: status Type: domain.DomainStatusEnum FullType: domain.DomainStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _domain.DomainStatusEnum Status { get; set; }//;
    }
    
    // Id: Filter Namespace: email.domain
    public class Filter {
        
        // Key: action Type: domain.DomainFilterActionEnum FullType: domain.DomainFilterActionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("action")]
        public _domain.DomainFilterActionEnum? Action { get; set; }//;
        
        // Key: actionParam Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("actionParam")]
        public System.String? ActionParam { get; set; }//;
        
        // Key: active Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        public required System.Boolean Active { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: pop Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pop")]
        public required System.String Pop { get; set; }//;
        
        // Key: priority Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("priority")]
        public required System.Int64 Priority { get; set; }//;
    }
    
    // Id: MailingList Namespace: email.domain
    public class MailingList {
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: language Type: domain.DomainMlLanguageEnum FullType: domain.DomainMlLanguageEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("language")]
        public _domain.DomainMlLanguageEnum? Language { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nbSubscribers Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nbSubscribers")]
        public System.Int64? NbSubscribers { get; set; }//;
        
        // Key: nbSubscribersUpdateDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nbSubscribersUpdateDate")]
        public System.DateTime? NbSubscribersUpdateDate { get; set; }//;
        
        // Key: options Type: domain.DomainMlOptionsStruct FullType: domain.DomainMlOptionsStruct
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("options")]
        public required _domain.DomainMlOptionsStruct Options { get; set; }//;
        
        // Key: ownerEmail Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ownerEmail")]
        public required System.String OwnerEmail { get; set; }//;
        
        // Key: replyTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replyTo")]
        public required System.String ReplyTo { get; set; }//;
    }
    
    // Id: MigrationAccount Namespace: email.domain
    public class MigrationAccount {
        
        // Key: destinationEmailAddress Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("destinationEmailAddress")]
        public required System.String DestinationEmailAddress { get; set; }//;
        
        // Key: quota Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public required System.Int64 Quota { get; set; }//;
    }
    
    // Id: MigrationCheckCodeEnum Namespace: email.domain
    public enum MigrationCheckCodeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ACCOUNT_EMPTY")]
        ACCOUNT_EMPTY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ACCOUNT_INPROGRESS")]
        ACCOUNT_INPROGRESS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DELEGATION_EXIST")]
        DELEGATION_EXIST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DOMAIN_EMPTY")]
        DOMAIN_EMPTY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("FILTER_EXIST")]
        FILTER_EXIST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("FORWARD_EXIST")]
        FORWARD_EXIST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("FORWARD_LOCAL")]
        FORWARD_LOCAL,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILINGLIST_EXIST")]
        MAILINGLIST_EXIST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILINGLIST_INPROGRESS")]
        MAILINGLIST_INPROGRESS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILPROXY_BAD_INFRA")]
        MAILPROXY_BAD_INFRA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILPROXY_EMPTY")]
        MAILPROXY_EMPTY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILPROXY_INPROGRESS")]
        MAILPROXY_INPROGRESS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MAILPROXY_RESERVATION")]
        MAILPROXY_RESERVATION,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("REDIRECTION_INPROGRESS")]
        REDIRECTION_INPROGRESS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("RESPONDER_EXIST")]
        RESPONDER_EXIST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("RESPONDER_INPROGRESS")]
        RESPONDER_INPROGRESS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOW")]
        UNKNOW,
    }
    
    // Id: MigrationCheckResultStruct Namespace: email.domain
    public class MigrationCheckResultStruct {
        
        // Key: code Type: email.domain.MigrationCheckCodeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("code")]
        public required _email_domain.MigrationCheckCodeEnum Code { get; set; }//;
        
        // Key: details Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("details")]
        public System.String? Details { get; set; }//;
    }
    
    // Id: MigrationCheckStruct Namespace: email.domain
    public class MigrationCheckStruct {
        
        // Key: alias Type: string[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("alias")]
        public System.String[]? Alias { get; set; }//;
        
        // Key: error Type: email.domain.MigrationCheckResultStruct[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        public _email_domain.MigrationCheckResultStruct[]? Error { get; set; }//;
        
        // Key: filter Type: string[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filter")]
        public System.String[]? Filter { get; set; }//;
        
        // Key: forward Type: string[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("forward")]
        public System.String[]? Forward { get; set; }//;
        
        // Key: warning Type: email.domain.MigrationCheckResultStruct[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("warning")]
        public _email_domain.MigrationCheckResultStruct[]? Warning { get; set; }//;
    }
    
    // Id: MigrationService Namespace: email.domain
    public class MigrationService {
        
        // Key: contactAdmin Type: string FullType: coreTypes.AccountId:string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactAdmin")]
        public required System.String ContactAdmin { get; set; }//;
        
        // Key: contactBilling Type: string FullType: coreTypes.AccountId:string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactBilling")]
        public required System.String ContactBilling { get; set; }//;
        
        // Key: contactTech Type: string FullType: coreTypes.AccountId:string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactTech")]
        public required System.String ContactTech { get; set; }//;
        
        // Key: creation Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creation")]
        public required System.DateOnly Creation { get; set; }//;
        
        // Key: destinationServiceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("destinationServiceName")]
        public required System.String DestinationServiceName { get; set; }//;
        
        // Key: expiration Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expiration")]
        public required System.DateOnly Expiration { get; set; }//;
        
        // Key: type Type: email.domain.MigrationServiceType FullType: email.domain.MigrationServiceType
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _email_domain.MigrationServiceType Type { get; set; }//;
    }
    
    // Id: MigrationServiceType Namespace: email.domain
    public enum MigrationServiceType {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("EMAIL PRO")]
        EMAIL_PRO,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("HOSTED EXCHANGE")]
        HOSTED_EXCHANGE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PRIVATE EXCHANGE")]
        PRIVATE_EXCHANGE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PROVIDER EXCHANGE")]
        PROVIDER_EXCHANGE,
    }
    
    // Id: Moderator Namespace: email.domain
    public class Moderator {
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: mailinglist Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailinglist")]
        public required System.String Mailinglist { get; set; }//;
    }
    
    // Id: RedirectionChangeRedirectionCreation Namespace: email.domain
    public class RedirectionChangeRedirectionCreation {
        
        // Key: to Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to")]
        public required System.String To { get; set; }//;
    }
    
    // Id: RedirectionCreation Namespace: email.domain
    public class RedirectionCreation {
        
        // Key: from Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("from")]
        public required System.String From { get; set; }//;
        
        // Key: localCopy Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("localCopy")]
        public required System.Boolean LocalCopy { get; set; }//;
        
        // Key: to Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to")]
        public required System.String To { get; set; }//;
    }
    
    // Id: RedirectionGlobal Namespace: email.domain
    public class RedirectionGlobal {
        
        // Key: from Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("from")]
        public required System.String From { get; set; }//;
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
        
        // Key: to Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to")]
        public required System.String To { get; set; }//;
    }
    
    // Id: Responder Namespace: email.domain
    public class Responder {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: content Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("content")]
        public required System.String Content { get; set; }//;
        
        // Key: copy Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("copy")]
        public required System.Boolean Copy { get; set; }//;
        
        // Key: copyTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("copyTo")]
        public System.String? CopyTo { get; set; }//;
        
        // Key: from Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("from")]
        public System.DateTime? From { get; set; }//;
        
        // Key: to Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to")]
        public System.DateTime? To { get; set; }//;
    }
    
    // Id: ResponderAccount Namespace: email.domain
    public class ResponderAccount {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: content Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("content")]
        public required System.String Content { get; set; }//;
        
        // Key: copy Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("copy")]
        public required System.Boolean Copy { get; set; }//;
        
        // Key: copyTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("copyTo")]
        public System.String? CopyTo { get; set; }//;
        
        // Key: from Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("from")]
        public System.DateTime? From { get; set; }//;
        
        // Key: to Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to")]
        public System.DateTime? To { get; set; }//;
    }
    
    // Id: Rule Namespace: email.domain
    public class Rule {
        
        // Key: header Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("header")]
        public required System.String Header { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: operand Type: domain.DomainFilterOperandEnum FullType: domain.DomainFilterOperandEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("operand")]
        public required _domain.DomainFilterOperandEnum Operand { get; set; }//;
        
        // Key: value Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public required System.String Value { get; set; }//;
    }
    
    // Id: Subscriber Namespace: email.domain
    public class Subscriber {
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: mailinglist Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailinglist")]
        public required System.String Mailinglist { get; set; }//;
    }
    
    // Id: TaskFilter Namespace: email.domain
    public class TaskFilter {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: action Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("action")]
        public required System.String Action { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: timestamp Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("timestamp")]
        public required System.DateTime Timestamp { get; set; }//;
    }
    
    // Id: TaskMl Namespace: email.domain
    public class TaskMl {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: action Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("action")]
        public required System.String Action { get; set; }//;
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public required System.DateTime Date { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: language Type: domain.DomainMlLanguageEnum FullType: domain.DomainMlLanguageEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("language")]
        public required _domain.DomainMlLanguageEnum Language { get; set; }//;
    }
    
    // Id: TaskPop Namespace: email.domain
    public class TaskPop {
        
        // Key: action Type: domain.DomainPopActionEnum FullType: domain.DomainPopActionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("action")]
        public required _domain.DomainPopActionEnum Action { get; set; }//;
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public required System.DateTime Date { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: TaskSpecialAccount Namespace: email.domain
    public class TaskSpecialAccount {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: action Type: domain.DomainSpecialAccountActionEnum FullType: domain.DomainSpecialAccountActionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("action")]
        public required _domain.DomainSpecialAccountActionEnum Action { get; set; }//;
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public required System.DateTime Date { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
        
        // Key: type Type: domain.DomainSpecialAccountTypeEnum FullType: domain.DomainSpecialAccountTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _domain.DomainSpecialAccountTypeEnum Type { get; set; }//;
    }
    
    // Id: TaskStatusEnum Namespace: email.domain
    public enum TaskStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerError")]
        customerError,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("init")]
        init,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ovhError")]
        ovhError,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
    
    // Id: dkim_simplified Namespace: email.domain
    public class dkim_simplified {
        
        // Key: activeSelector Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeSelector")]
        public System.String? ActiveSelector { get; set; }//;
        
        // Key: autoconfig Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("autoconfig")]
        public System.Boolean? Autoconfig { get; set; }//;
        
        // Key: selectors Type: email.domain.DKIMSelector[] FullType: email.domain.DKIMSelector[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("selectors")]
        public _email_domain.DKIMSelector[]? Selectors { get; set; }//;
        
        // Key: status Type: email.domain.DKIMStatusEnum FullType: email.domain.DKIMStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _email_domain.DKIMStatusEnum Status { get; set; }//;
    }
    
    // Id: task Namespace: email.domain
    public class task {
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: function Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public required System.String Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: status Type: email.domain.TaskStatusEnum FullType: email.domain.TaskStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _email_domain.TaskStatusEnum Status { get; set; }//;
    }
    
    // Id: OfferEnum Namespace: email.domain
    public enum OfferEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("100")]
        _100,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("25")]
        _25,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("5")]
        _5,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("FULL")]
        FULL,
    }
}
