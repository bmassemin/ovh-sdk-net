//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _domain {
    
    
    // Id: OfferEnum Namespace: domain
    public enum OfferEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("diamond")]
        diamond,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gold")]
        gold,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("platinum")]
        platinum,
    }
    
    // Id: ActionEnum Namespace: domain
    public enum ActionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("create")]
        create,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("trade")]
        trade,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transfer")]
        transfer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("update")]
        update,
    }
    
    // Id: ApproveTypeEnum Namespace: domain
    public enum ApproveTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accept")]
        accept,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reject")]
        reject,
    }
    
    // Id: Contact Namespace: domain
    public class Contact {
        
        // Key: accreditationCountry Type: nichandle.CountryEnum FullType: nichandle.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accreditationCountry")]
        public _nichandle.CountryEnum? AccreditationCountry { get; set; }//;
        
        // Key: accreditationId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accreditationId")]
        public System.String? AccreditationId { get; set; }//;
        
        // Key: accreditationOrganism Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accreditationOrganism")]
        public System.String? AccreditationOrganism { get; set; }//;
        
        // Key: accreditationYear Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accreditationYear")]
        public System.Int64? AccreditationYear { get; set; }//;
        
        // Key: address Type: domain.ContactAddress FullType: domain.ContactAddress
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("address")]
        public _domain.ContactAddress? Address { get; set; }//;
        
        // Key: birthCity Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("birthCity")]
        public System.String? BirthCity { get; set; }//;
        
        // Key: birthCountry Type: nichandle.CountryEnum FullType: nichandle.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("birthCountry")]
        public _nichandle.CountryEnum? BirthCountry { get; set; }//;
        
        // Key: birthDay Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("birthDay")]
        public System.DateOnly? BirthDay { get; set; }//;
        
        // Key: birthZip Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("birthZip")]
        public System.String? BirthZip { get; set; }//;
        
        // Key: cellPhone Type: phoneNumber FullType: phoneNumber
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cellPhone")]
        public System.String? CellPhone { get; set; }//;
        
        // Key: companyNationalIdentificationNumber Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("companyNationalIdentificationNumber")]
        public System.String? CompanyNationalIdentificationNumber { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public System.String? Email { get; set; }//;
        
        // Key: enterpriseId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enterpriseId")]
        public System.String? EnterpriseId { get; set; }//;
        
        // Key: fax Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fax")]
        public System.String? Fax { get; set; }//;
        
        // Key: firstName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("firstName")]
        public System.String? FirstName { get; set; }//;
        
        // Key: gender Type: nichandle.GenderEnum FullType: nichandle.GenderEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gender")]
        public _nichandle.GenderEnum? Gender { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: insee Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("insee")]
        public System.String? Insee { get; set; }//;
        
        // Key: language Type: nichandle.LanguageEnum FullType: nichandle.LanguageEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("language")]
        public _nichandle.LanguageEnum? Language { get; set; }//;
        
        // Key: lastName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastName")]
        public System.String? LastName { get; set; }//;
        
        // Key: legalForm Type: nichandle.LegalFormEnum FullType: nichandle.LegalFormEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("legalForm")]
        public _nichandle.LegalFormEnum? LegalForm { get; set; }//;
        
        // Key: legalFormCategory Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("legalFormCategory")]
        public System.String? LegalFormCategory { get; set; }//;
        
        // Key: nationalIdentificationNumber Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nationalIdentificationNumber")]
        public System.String? NationalIdentificationNumber { get; set; }//;
        
        // Key: nationality Type: nichandle.CountryEnum FullType: nichandle.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nationality")]
        public _nichandle.CountryEnum? Nationality { get; set; }//;
        
        // Key: organisationAccountable Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationAccountable")]
        public System.String? OrganisationAccountable { get; set; }//;
        
        // Key: organisationFunding Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationFunding")]
        public System.String? OrganisationFunding { get; set; }//;
        
        // Key: organisationFundingOther Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationFundingOther")]
        public System.String? OrganisationFundingOther { get; set; }//;
        
        // Key: organisationName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationName")]
        public System.String? OrganisationName { get; set; }//;
        
        // Key: organisationRole Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationRole")]
        public System.String? OrganisationRole { get; set; }//;
        
        // Key: organisationRoleOther Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationRoleOther")]
        public System.String? OrganisationRoleOther { get; set; }//;
        
        // Key: organisationStaffStatus Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationStaffStatus")]
        public System.String? OrganisationStaffStatus { get; set; }//;
        
        // Key: organisationStaffStatusOther Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationStaffStatusOther")]
        public System.String? OrganisationStaffStatusOther { get; set; }//;
        
        // Key: organisationType Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationType")]
        public System.String? OrganisationType { get; set; }//;
        
        // Key: organisationTypeOther Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisationTypeOther")]
        public System.String? OrganisationTypeOther { get; set; }//;
        
        // Key: phone Type: phoneNumber FullType: phoneNumber
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("phone")]
        public System.String? Phone { get; set; }//;
        
        // Key: registrantDocumentType Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("registrantDocumentType")]
        public System.String? RegistrantDocumentType { get; set; }//;
        
        // Key: registrantDocumentTypeOther Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("registrantDocumentTypeOther")]
        public System.String? RegistrantDocumentTypeOther { get; set; }//;
        
        // Key: roleInOrganisation Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("roleInOrganisation")]
        public System.String? RoleInOrganisation { get; set; }//;
        
        // Key: trademarkId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("trademarkId")]
        public System.String? TrademarkId { get; set; }//;
        
        // Key: vat Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vat")]
        public System.String? Vat { get; set; }//;
        
        // Key: website Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("website")]
        public System.String? Website { get; set; }//;
    }
    
    // Id: ContactAddress Namespace: domain
    public class ContactAddress {
        
        // Key: city Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("city")]
        public System.String? City { get; set; }//;
        
        // Key: country Type: nichandle.CountryEnum FullType: nichandle.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("country")]
        public _nichandle.CountryEnum? Country { get; set; }//;
        
        // Key: line1 Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("line1")]
        public System.String? Line1 { get; set; }//;
        
        // Key: line2 Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("line2")]
        public System.String? Line2 { get; set; }//;
        
        // Key: line3 Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("line3")]
        public System.String? Line3 { get; set; }//;
        
        // Key: otherDetails Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("otherDetails")]
        public System.String? OtherDetails { get; set; }//;
        
        // Key: province Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("province")]
        public System.String? Province { get; set; }//;
        
        // Key: zip Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zip")]
        public System.String? Zip { get; set; }//;
    }
    
    // Id: ContactSummary Namespace: domain
    public class ContactSummary {
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
    }
    
    // Id: Data Namespace: domain
    public class Data {
        
        // Key: audience Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("audience")]
        public System.String? Audience { get; set; }//;
        
        // Key: authInfo Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("authInfo")]
        public System.String? AuthInfo { get; set; }//;
        
        // Key: isFor Type: domain.IsForEnum[] FullType: domain.IsForEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isFor")]
        public _domain.IsForEnum[]? IsFor { get; set; }//;
        
        // Key: otherPurpose Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("otherPurpose")]
        public System.String? OtherPurpose { get; set; }//;
        
        // Key: reason Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reason")]
        public System.String? Reason { get; set; }//;
        
        // Key: represent Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("represent")]
        public System.String? Represent { get; set; }//;
    }
    
    // Id: DnssecStateEnum Namespace: domain
    public enum DnssecStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("not_supported")]
        not_supported,
    }
    
    // Id: DnssecStatusEnum Namespace: domain
    public enum DnssecStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disableInProgress")]
        disableInProgress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enableInProgress")]
        enableInProgress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
    }
    
    // Id: Domain Namespace: domain
    public class Domain {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String _Domain { get; set; }//;
        
        // Key: glueRecordIpv6Supported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordIpv6Supported")]
        public required System.Boolean GlueRecordIpv6Supported { get; set; }//;
        
        // Key: glueRecordMultiIpSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordMultiIpSupported")]
        public required System.Boolean GlueRecordMultiIpSupported { get; set; }//;
        
        // Key: hostSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostSupported")]
        public required System.Boolean HostSupported { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: nameServerType Type: domain.DomainNsTypeEnum FullType: domain.DomainNsTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServerType")]
        public required _domain.DomainNsTypeEnum NameServerType { get; set; }//;
        
        // Key: offer Type: domain.OfferEnum FullType: domain.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public required _domain.OfferEnum Offer { get; set; }//;
        
        // Key: owoSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("owoSupported")]
        public required System.Boolean OwoSupported { get; set; }//;
        
        // Key: parentService Type: domain.ParentService FullType: domain.ParentService
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentService")]
        public _domain.ParentService? ParentService { get; set; }//;
        
        // Key: state Type: domain.DomainStateEnum FullType: domain.DomainStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _domain.DomainStateEnum State { get; set; }//;
        
        // Key: suspensionState Type: domain.DomainSuspensionStateEnum FullType: domain.DomainSuspensionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspensionState")]
        public required _domain.DomainSuspensionStateEnum SuspensionState { get; set; }//;
        
        // Key: transferLockStatus Type: domain.DomainLockStatusEnum FullType: domain.DomainLockStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transferLockStatus")]
        public required _domain.DomainLockStatusEnum TransferLockStatus { get; set; }//;
        
        // Key: whoisOwner Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("whoisOwner")]
        public required System.String WhoisOwner { get; set; }//;
    }
    
    // Id: DomainLockStatusEnum Namespace: domain
    public enum DomainLockStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("locked")]
        locked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("locking")]
        locking,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unavailable")]
        unavailable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unlocked")]
        unlocked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unlocking")]
        unlocking,
    }
    
    // Id: DomainNsTypeEnum Namespace: domain
    public enum DomainNsTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("external")]
        external,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hosted")]
        hosted,
    }
    
    // Id: DomainOptionEnum Namespace: domain
    public enum DomainOptionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnsAnycast")]
        dnsAnycast,
    }
    
    // Id: DomainOptionStateEnum Namespace: domain
    public enum DomainOptionStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("released")]
        released,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subscribed")]
        subscribed,
    }
    
    // Id: DomainService Namespace: domain
    public class DomainService {
        
        // Key: contactAdmin Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactAdmin")]
        public required _domain.ContactSummary ContactAdmin { get; set; }//;
        
        // Key: contactBilling Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactBilling")]
        public required _domain.ContactSummary ContactBilling { get; set; }//;
        
        // Key: contactOwner Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactOwner")]
        public required _domain.ContactSummary ContactOwner { get; set; }//;
        
        // Key: contactTech Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactTech")]
        public required _domain.ContactSummary ContactTech { get; set; }//;
        
        // Key: dnssecState Type: domain.DnssecStateEnum FullType: domain.DnssecStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecState")]
        public required _domain.DnssecStateEnum DnssecState { get; set; }//;
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: expirationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public required System.DateTime ExpirationDate { get; set; }//;
        
        // Key: glueRecordIpv6Supported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordIpv6Supported")]
        public required System.Boolean GlueRecordIpv6Supported { get; set; }//;
        
        // Key: glueRecordMultiIpSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordMultiIpSupported")]
        public required System.Boolean GlueRecordMultiIpSupported { get; set; }//;
        
        // Key: hostSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostSupported")]
        public required System.Boolean HostSupported { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: nameServerType Type: domain.nameServer.NameServerTypeEnum FullType: domain.nameServer.NameServerTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServerType")]
        public required _domain_nameServer.NameServerTypeEnum NameServerType { get; set; }//;
        
        // Key: nameServers Type: domain.nameServer.NameServer[] FullType: domain.nameServer.NameServer[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public required _domain_nameServer.NameServer[] NameServers { get; set; }//;
        
        // Key: offer Type: domain.OfferEnum FullType: domain.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public required _domain.OfferEnum Offer { get; set; }//;
        
        // Key: owoSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("owoSupported")]
        public required System.Boolean OwoSupported { get; set; }//;
        
        // Key: parentService Type: domain.ParentService FullType: domain.ParentService
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentService")]
        public _domain.ParentService? ParentService { get; set; }//;
        
        // Key: renewalDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("renewalDate")]
        public required System.DateTime RenewalDate { get; set; }//;
        
        // Key: renewalState Type: domain.RenewalStateEnum FullType: domain.RenewalStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("renewalState")]
        public required _domain.RenewalStateEnum RenewalState { get; set; }//;
        
        // Key: serviceId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceId")]
        public required System.Int64 ServiceId { get; set; }//;
        
        // Key: state Type: domain.DomainStateEnum FullType: domain.DomainStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _domain.DomainStateEnum State { get; set; }//;
        
        // Key: suspensionState Type: domain.SuspensionStateEnum FullType: domain.SuspensionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspensionState")]
        public required _domain.SuspensionStateEnum SuspensionState { get; set; }//;
        
        // Key: transferLockStatus Type: domain.LockStatusEnum FullType: domain.LockStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transferLockStatus")]
        public required _domain.LockStatusEnum TransferLockStatus { get; set; }//;
        
        // Key: whoisOwner Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("whoisOwner")]
        public required System.String WhoisOwner { get; set; }//;
    }
    
    // Id: DomainService Namespace: domain
    public class DomainServiceWithIAM {
        
        // Key: contactAdmin Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactAdmin")]
        public required _domain.ContactSummary ContactAdmin { get; set; }//;
        
        // Key: contactBilling Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactBilling")]
        public required _domain.ContactSummary ContactBilling { get; set; }//;
        
        // Key: contactOwner Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactOwner")]
        public required _domain.ContactSummary ContactOwner { get; set; }//;
        
        // Key: contactTech Type: domain.ContactSummary FullType: domain.ContactSummary
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contactTech")]
        public required _domain.ContactSummary ContactTech { get; set; }//;
        
        // Key: dnssecState Type: domain.DnssecStateEnum FullType: domain.DnssecStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecState")]
        public required _domain.DnssecStateEnum DnssecState { get; set; }//;
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: expirationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public required System.DateTime ExpirationDate { get; set; }//;
        
        // Key: glueRecordIpv6Supported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordIpv6Supported")]
        public required System.Boolean GlueRecordIpv6Supported { get; set; }//;
        
        // Key: glueRecordMultiIpSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordMultiIpSupported")]
        public required System.Boolean GlueRecordMultiIpSupported { get; set; }//;
        
        // Key: hostSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostSupported")]
        public required System.Boolean HostSupported { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: nameServerType Type: domain.nameServer.NameServerTypeEnum FullType: domain.nameServer.NameServerTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServerType")]
        public required _domain_nameServer.NameServerTypeEnum NameServerType { get; set; }//;
        
        // Key: nameServers Type: domain.nameServer.NameServer[] FullType: domain.nameServer.NameServer[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public required _domain_nameServer.NameServer[] NameServers { get; set; }//;
        
        // Key: offer Type: domain.OfferEnum FullType: domain.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public required _domain.OfferEnum Offer { get; set; }//;
        
        // Key: owoSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("owoSupported")]
        public required System.Boolean OwoSupported { get; set; }//;
        
        // Key: parentService Type: domain.ParentService FullType: domain.ParentService
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentService")]
        public _domain.ParentService? ParentService { get; set; }//;
        
        // Key: renewalDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("renewalDate")]
        public required System.DateTime RenewalDate { get; set; }//;
        
        // Key: renewalState Type: domain.RenewalStateEnum FullType: domain.RenewalStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("renewalState")]
        public required _domain.RenewalStateEnum RenewalState { get; set; }//;
        
        // Key: serviceId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceId")]
        public required System.Int64 ServiceId { get; set; }//;
        
        // Key: state Type: domain.DomainStateEnum FullType: domain.DomainStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _domain.DomainStateEnum State { get; set; }//;
        
        // Key: suspensionState Type: domain.SuspensionStateEnum FullType: domain.SuspensionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspensionState")]
        public required _domain.SuspensionStateEnum SuspensionState { get; set; }//;
        
        // Key: transferLockStatus Type: domain.LockStatusEnum FullType: domain.LockStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transferLockStatus")]
        public required _domain.LockStatusEnum TransferLockStatus { get; set; }//;
        
        // Key: whoisOwner Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("whoisOwner")]
        public required System.String WhoisOwner { get; set; }//;
    }
    
    // Id: DomainStateEnum Namespace: domain
    public enum DomainStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("autorenew_in_progress")]
        autorenew_in_progress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("autorenew_registry_in_progress")]
        autorenew_registry_in_progress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleted")]
        deleted,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dispute")]
        dispute,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expired")]
        expired,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("outgoing_transfer")]
        outgoing_transfer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pending_create")]
        pending_create,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pending_delete")]
        pending_delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pending_incoming_transfer")]
        pending_incoming_transfer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pending_installation")]
        pending_installation,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("registry_suspended")]
        registry_suspended,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorable")]
        restorable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("technical_suspended")]
        technical_suspended,
    }
    
    // Id: DomainSuspensionStateEnum Namespace: domain
    public enum DomainSuspensionStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("not_suspended")]
        not_suspended,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspended")]
        suspended,
    }
    
    // Id: Domain Namespace: domain
    public class DomainWithIAM {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public required System.String Domain { get; set; }//;
        
        // Key: glueRecordIpv6Supported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordIpv6Supported")]
        public required System.Boolean GlueRecordIpv6Supported { get; set; }//;
        
        // Key: glueRecordMultiIpSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("glueRecordMultiIpSupported")]
        public required System.Boolean GlueRecordMultiIpSupported { get; set; }//;
        
        // Key: hostSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostSupported")]
        public required System.Boolean HostSupported { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: nameServerType Type: domain.DomainNsTypeEnum FullType: domain.DomainNsTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServerType")]
        public required _domain.DomainNsTypeEnum NameServerType { get; set; }//;
        
        // Key: offer Type: domain.OfferEnum FullType: domain.OfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public required _domain.OfferEnum Offer { get; set; }//;
        
        // Key: owoSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("owoSupported")]
        public required System.Boolean OwoSupported { get; set; }//;
        
        // Key: parentService Type: domain.ParentService FullType: domain.ParentService
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentService")]
        public _domain.ParentService? ParentService { get; set; }//;
        
        // Key: state Type: domain.DomainStateEnum FullType: domain.DomainStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _domain.DomainStateEnum State { get; set; }//;
        
        // Key: suspensionState Type: domain.DomainSuspensionStateEnum FullType: domain.DomainSuspensionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspensionState")]
        public required _domain.DomainSuspensionStateEnum SuspensionState { get; set; }//;
        
        // Key: transferLockStatus Type: domain.DomainLockStatusEnum FullType: domain.DomainLockStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transferLockStatus")]
        public required _domain.DomainLockStatusEnum TransferLockStatus { get; set; }//;
        
        // Key: whoisOwner Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("whoisOwner")]
        public required System.String WhoisOwner { get; set; }//;
    }
    
    // Id: IsForEnum Namespace: domain
    public enum IsForEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("campaign_website")]
        campaign_website,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("educational_website")]
        educational_website,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("emails")]
        emails,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("information_website")]
        information_website,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("other_purpose")]
        other_purpose,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redirect_page")]
        redirect_page,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transactional_website")]
        transactional_website,
    }
    
    // Id: LockStatusEnum Namespace: domain
    public enum LockStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("locked")]
        locked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("locking")]
        locking,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unavailable")]
        unavailable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unlocked")]
        unlocked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unlocking")]
        unlocking,
    }
    
    // Id: OperationStatusEnum Namespace: domain
    public enum OperationStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("problem")]
        problem,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
    
    // Id: OptinFieldsEnum Namespace: domain
    public enum OptinFieldsEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("address")]
        address,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("city")]
        city,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("country")]
        country,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        email,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fax")]
        fax,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        name,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("organisation")]
        organisation,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("phone")]
        phone,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("province")]
        province,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zip")]
        zip,
    }
    
    // Id: Option Namespace: domain
    public class Option {
        
        // Key: expirationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public required System.DateTime ExpirationDate { get; set; }//;
        
        // Key: option Type: domain.DomainOptionEnum FullType: domain.DomainOptionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("option")]
        public required _domain.DomainOptionEnum _Option { get; set; }//;
        
        // Key: state Type: domain.DomainOptionStateEnum FullType: domain.DomainOptionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _domain.DomainOptionStateEnum State { get; set; }//;
    }
    
    // Id: ParentService Namespace: domain
    public class ParentService {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: type Type: domain.ParentServiceTypeEnum FullType: domain.ParentServiceTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _domain.ParentServiceTypeEnum Type { get; set; }//;
    }
    
    // Id: ParentServiceTypeEnum Namespace: domain
    public enum ParentServiceTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("/allDom")]
        _allDom,
    }
    
    // Id: RenewalStateEnum Namespace: domain
    public enum RenewalStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("automatic_renew")]
        automatic_renew,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancellation_complete")]
        cancellation_complete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancellation_requested")]
        cancellation_requested,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manual_renew")]
        manual_renew,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unpaid")]
        unpaid,
    }
    
    // Id: ServiceOption Namespace: domain
    public class ServiceOption {
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
    }
    
    // Id: ServiceOptions Namespace: domain
    public class ServiceOptions {
        
        // Key: hosting Type: domain.ServiceOption FullType: domain.ServiceOption
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hosting")]
        public _domain.ServiceOption? Hosting { get; set; }//;
        
        // Key: offer Type: domain.ServiceOption FullType: domain.ServiceOption
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public _domain.ServiceOption? Offer { get; set; }//;
        
        // Key: zone Type: domain.ServiceOption FullType: domain.ServiceOption
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public _domain.ServiceOption? Zone { get; set; }//;
    }
    
    // Id: SuspensionStateEnum Namespace: domain
    public enum SuspensionStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("not_suspended")]
        not_suspended,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspended")]
        suspended,
    }
    
    // Id: Task Namespace: domain
    public class Task {
        
        // Key: canAccelerate Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canAccelerate")]
        public required System.Boolean CanAccelerate { get; set; }//;
        
        // Key: canCancel Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCancel")]
        public required System.Boolean CanCancel { get; set; }//;
        
        // Key: canRelaunch Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canRelaunch")]
        public required System.Boolean CanRelaunch { get; set; }//;
        
        // Key: comment Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comment")]
        public System.String? Comment { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public required System.DateTime CreationDate { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public System.String? Domain { get; set; }//;
        
        // Key: doneDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doneDate")]
        public System.DateTime? DoneDate { get; set; }//;
        
        // Key: function Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public required System.String Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: status Type: domain.OperationStatusEnum FullType: domain.OperationStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _domain.OperationStatusEnum Status { get; set; }//;
        
        // Key: todoDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todoDate")]
        public required System.DateTime TodoDate { get; set; }//;
    }
    
    // Id: TaskFunctionEnum Namespace: domain
    public enum TaskFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnsAnycastActivate")]
        DnsAnycastActivate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnsAnycastDeactivate")]
        DnsAnycastDeactivate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecDisable")]
        DnssecDisable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecEnable")]
        DnssecEnable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecResigning")]
        DnssecResigning,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecRollKsk")]
        DnssecRollKsk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecRollZsk")]
        DnssecRollZsk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneCreate")]
        ZoneCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneCut")]
        ZoneCut,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneDelete")]
        ZoneDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneImport")]
        ZoneImport,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneRestore")]
        ZoneRestore,
    }
    
    // Id: TaskStatusEnum Namespace: domain
    public enum TaskStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("problem")]
        problem,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
    
    // Id: UkRegistrar Namespace: domain
    public class UkRegistrar {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: tag Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("tag")]
        public required System.String Tag { get; set; }//;
    }
    
    // Id: Zone Namespace: domain
    public class Zone {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: hasDnsAnycast Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasDnsAnycast")]
        public required System.Boolean HasDnsAnycast { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime? LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nameServers Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public required System.String[] NameServers { get; set; }//;
    }
    
    // Id: Zone Namespace: domain
    public class ZoneWithIAM {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public required System.Boolean DnssecSupported { get; set; }//;
        
        // Key: hasDnsAnycast Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasDnsAnycast")]
        public required System.Boolean HasDnsAnycast { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime? LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nameServers Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public required System.String[] NameServers { get; set; }//;
    }
    
    // Id: DomainFilterActionEnum Namespace: domain
    public enum DomainFilterActionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accept")]
        accept,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        account,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delete")]
        delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redirect")]
        redirect,
    }
    
    // Id: DomainFilterOperandEnum Namespace: domain
    public enum DomainFilterOperandEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checkspf")]
        checkspf,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("contains")]
        contains,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noContains")]
        noContains,
    }
    
    // Id: DomainMXFilterEnum Namespace: domain
    public enum DomainMXFilterEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CUSTOM")]
        CUSTOM,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("FULL_FILTERING")]
        FULL_FILTERING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NO_FILTERING")]
        NO_FILTERING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("REDIRECT")]
        REDIRECT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SIMPLE_FILTERING")]
        SIMPLE_FILTERING,
    }
    
    // Id: DomainMlLanguageEnum Namespace: domain
    public enum DomainMlLanguageEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("de")]
        de,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("en")]
        en,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("es")]
        es,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fr")]
        fr,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("it")]
        it,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nl")]
        nl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pl")]
        pl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pt")]
        pt,
    }
    
    // Id: DomainMlLimits Namespace: domain
    public class DomainMlLimits {
        
        // Key: subscribers Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subscribers")]
        public required System.Int64 Subscribers { get; set; }//;
    }
    
    // Id: DomainMlOptionsStruct Namespace: domain
    public class DomainMlOptionsStruct {
        
        // Key: moderatorMessage Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("moderatorMessage")]
        public required System.Boolean ModeratorMessage { get; set; }//;
        
        // Key: subscribeByModerator Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subscribeByModerator")]
        public required System.Boolean SubscribeByModerator { get; set; }//;
        
        // Key: usersPostOnly Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usersPostOnly")]
        public required System.Boolean UsersPostOnly { get; set; }//;
    }
    
    // Id: DomainPopActionEnum Namespace: domain
    public enum DomainPopActionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("addAccount")]
        addAccount,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("changeAccount")]
        changeAccount,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("changePassword")]
        changePassword,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleteAccount")]
        deleteAccount,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("internalMigration")]
        internalMigration,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migration")]
        migration,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("temporaryTask")]
        temporaryTask,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
    }
    
    // Id: DomainQuota Namespace: domain
    public class DomainQuota {
        
        // Key: account Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.Int64 Account { get; set; }//;
        
        // Key: alias Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("alias")]
        public required System.Int64 Alias { get; set; }//;
        
        // Key: mailingList Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailingList")]
        public required System.Int64 MailingList { get; set; }//;
        
        // Key: redirection Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redirection")]
        public required System.Int64 Redirection { get; set; }//;
        
        // Key: responder Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("responder")]
        public required System.Int64 Responder { get; set; }//;
    }
    
    // Id: DomainSpecialAccountActionEnum Namespace: domain
    public enum DomainSpecialAccountActionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("add")]
        add,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("change")]
        change,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delete")]
        delete,
    }
    
    // Id: DomainSpecialAccountTypeEnum Namespace: domain
    public enum DomainSpecialAccountTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("25g")]
        _25g,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("alias")]
        alias,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delete")]
        delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filter")]
        filter,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("forward")]
        forward,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("responder")]
        responder,
    }
    
    // Id: DomainStatusEnum Namespace: domain
    public enum DomainStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("close")]
        close,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readOnly")]
        readOnly,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
    }
    
    // Id: DomainSummary Namespace: domain
    public class DomainSummary {
        
        // Key: account Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.Int64 Account { get; set; }//;
        
        // Key: mailingList Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailingList")]
        public required System.Int64 MailingList { get; set; }//;
        
        // Key: redirection Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redirection")]
        public required System.Int64 Redirection { get; set; }//;
        
        // Key: responder Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("responder")]
        public required System.Int64 Responder { get; set; }//;
    }
    
    // Id: DomainUsageAccountStruct Namespace: domain
    public class DomainUsageAccountStruct {
        
        // Key: date Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public System.DateTime? Date { get; set; }//;
        
        // Key: emailCount Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("emailCount")]
        public System.Int64? EmailCount { get; set; }//;
        
        // Key: quota Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public System.Int64? Quota { get; set; }//;
    }
    
    // Id: DocumentFormatsEnum Namespace: domain
    public enum DocumentFormatsEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gif")]
        gif,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("jpeg")]
        jpeg,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("jpg")]
        jpg,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pdf")]
        pdf,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("png")]
        png,
    }
    
    // Id: OperationActionEnum Namespace: domain
    public enum OperationActionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCancel")]
        canCancel,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCorrect")]
        canCorrect,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canRelaunch")]
        canRelaunch,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canReset")]
        canReset,
    }
    
    // Id: OperationFunctionEnum Namespace: domain
    public enum OperationFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ContactControl")]
        ContactControl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ContactControlAcknowledge")]
        ContactControlAcknowledge,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ContactControlCorrect")]
        ContactControlCorrect,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ContactControlNotify")]
        ContactControlNotify,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnsAnycastActivate")]
        DnsAnycastActivate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnsAnycastDeactivate")]
        DnsAnycastDeactivate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecDisable")]
        DnssecDisable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecEnable")]
        DnssecEnable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecResigning")]
        DnssecResigning,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecRollKsk")]
        DnssecRollKsk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnssecRollZsk")]
        DnssecRollZsk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainAfterMarket")]
        DomainAfterMarket,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainContactControl")]
        DomainContactControl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainContactUpdate")]
        DomainContactUpdate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainControl")]
        DomainControl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainCreate")]
        DomainCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainDelete")]
        DomainDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainDnsUpdate")]
        DomainDnsUpdate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainDsUpdate")]
        DomainDsUpdate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainEmailRedirectionsCreate")]
        DomainEmailRedirectionsCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainEmailRedirectionsDelete")]
        DomainEmailRedirectionsDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainHold")]
        DomainHold,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainHostCreate")]
        DomainHostCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainHostDelete")]
        DomainHostDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainHostUpdate")]
        DomainHostUpdate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainIncomingTransfer")]
        DomainIncomingTransfer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainLock")]
        DomainLock,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainOutgoingTransfer")]
        DomainOutgoingTransfer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainRegistryDelete")]
        DomainRegistryDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainRenew")]
        DomainRenew,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainResourceDelete")]
        DomainResourceDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainRestore")]
        DomainRestore,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainTrade")]
        DomainTrade,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainUnhold")]
        DomainUnhold,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DomainUnlock")]
        DomainUnlock,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ZoneImport")]
        ZoneImport,
    }
    
    // Id: OperationStep Namespace: domain
    public class OperationStep {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: executionDuration Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("executionDuration")]
        public required System.Int64 ExecutionDuration { get; set; }//;
        
        // Key: step Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("step")]
        public required System.String Step { get; set; }//;
    }
    
    // Id: DomainCurrentState Namespace: domain
    public class DomainCurrentState {
        
        // Key: additionalStates Type: domain.resource.currentState.AdditionalStatesEnum[] FullType: domain.resource.currentState.AdditionalStatesEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("additionalStates")]
        public required _domain_resource_currentState.AdditionalStatesEnum[] AdditionalStates { get; set; }//;
        
        // Key: dnsConfiguration Type: domain.resource.currentState.DnsConfiguration FullType: domain.resource.currentState.DnsConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnsConfiguration")]
        public required _domain_resource_currentState.DnsConfiguration DnsConfiguration { get; set; }//;
        
        // Key: extension Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extension")]
        public required System.String Extension { get; set; }//;
        
        // Key: mainState Type: domain.resource.currentState.MainStateEnum FullType: domain.resource.currentState.MainStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mainState")]
        public required _domain_resource_currentState.MainStateEnum MainState { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: protectionState Type: domain.resource.ProtectionStateEnum FullType: domain.resource.ProtectionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("protectionState")]
        public required _domain_resource.ProtectionStateEnum ProtectionState { get; set; }//;
        
        // Key: suspensionState Type: domain.resource.currentState.SuspensionStateEnum FullType: domain.resource.currentState.SuspensionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspensionState")]
        public required _domain_resource_currentState.SuspensionStateEnum SuspensionState { get; set; }//;
    }
    
    // Id: DomainTargetSpec Namespace: domain
    public class DomainTargetSpec {
        
        // Key: dnsConfiguration Type: domain.resource.targetSpec.DnsConfiguration FullType: domain.resource.targetSpec.DnsConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnsConfiguration")]
        public required _domain_resource_targetSpec.DnsConfiguration DnsConfiguration { get; set; }//;
    }
}
