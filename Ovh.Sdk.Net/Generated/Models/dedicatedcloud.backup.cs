//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _dedicatedCloud_backup {
    
    
    // Id: Backup Namespace: dedicatedCloud.backup
    public class Backup {
        
        // Key: allocatedDisk Type: double FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allocatedDisk")]
        public System.Double? AllocatedDisk { get; set; }//;
        
        // Key: backupDays Type: dedicatedCloud.backup.BackupDaysEnum[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupDays")]
        public _dedicatedCloud_backup.BackupDaysEnum[]? BackupDays { get; set; }//;
        
        // Key: backupRepositoryId Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupRepositoryId")]
        public System.Int64? BackupRepositoryId { get; set; }//;
        
        // Key: encryption Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("encryption")]
        public System.Boolean? Encryption { get; set; }//;
        
        // Key: lastCreationTime Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastCreationTime")]
        public System.DateTime? LastCreationTime { get; set; }//;
        
        // Key: lastDuration Type: complexType.UnitAndValue<long> FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastDuration")]
        public _complexType.UnitAndValue<long>? LastDuration { get; set; }//;
        
        // Key: lastResult Type: dedicatedCloud.backup.JobStateEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastResult")]
        public _dedicatedCloud_backup.JobStateEnum? LastResult { get; set; }//;
        
        // Key: lastSuccessfulCreationTime Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastSuccessfulCreationTime")]
        public System.DateTime? LastSuccessfulCreationTime { get; set; }//;
        
        // Key: lastSuccessfulDuration Type: complexType.UnitAndValue<long> FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastSuccessfulDuration")]
        public _complexType.UnitAndValue<long>? LastSuccessfulDuration { get; set; }//;
        
        // Key: offerType Type: dedicatedCloud.backup.OfferTypeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offerType")]
        public _dedicatedCloud_backup.OfferTypeEnum? OfferType { get; set; }//;
        
        // Key: restorePoints Type: dedicatedCloud.backup.RestorePoint[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorePoints")]
        public _dedicatedCloud_backup.RestorePoint[]? RestorePoints { get; set; }//;
        
        // Key: retentionTime Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionTime")]
        public System.Int64? RetentionTime { get; set; }//;
        
        // Key: state Type: dedicatedCloud.backup.StateEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _dedicatedCloud_backup.StateEnum? State { get; set; }//;
    }
    
    // Id: BackupCapabilities Namespace: dedicatedCloud.backup
    public class BackupCapabilities {
        
        // Key: backupDays Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupDays")]
        public bool BackupDays { get; set; }//;
        
        // Key: customReport Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customReport")]
        public bool CustomReport { get; set; }//;
        
        // Key: dedicatedProxy Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dedicatedProxy")]
        public bool DedicatedProxy { get; set; }//;
        
        // Key: encryption Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("encryption")]
        public bool Encryption { get; set; }//;
        
        // Key: mailAddress Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailAddress")]
        public bool MailAddress { get; set; }//;
        
        // Key: minimumFullBackups Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minimumFullBackups")]
        public long MinimumFullBackups { get; set; }//;
        
        // Key: offerName Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offerName")]
        public string OfferName { get; set; }//;
        
        // Key: proxyPerHost Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("proxyPerHost")]
        public bool ProxyPerHost { get; set; }//;
        
        // Key: replication Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replication")]
        public bool Replication { get; set; }//;
        
        // Key: retention Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retention")]
        public long Retention { get; set; }//;
        
        // Key: scheduleHour Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("scheduleHour")]
        public bool ScheduleHour { get; set; }//;
    }
    
    // Id: BackupDaysEnum Namespace: dedicatedCloud.backup
    public enum BackupDaysEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Friday")]
        Friday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Monday")]
        Monday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Saturday")]
        Saturday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Sunday")]
        Sunday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Thursday")]
        Thursday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Tuesday")]
        Tuesday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Wednesday")]
        Wednesday,
    }
    
    // Id: BackupTypeEnum Namespace: dedicatedCloud.backup
    public enum BackupTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("full")]
        full,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("incremental")]
        incremental,
    }
    
    // Id: JobStateEnum Namespace: dedicatedCloud.backup
    public enum JobStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("failed")]
        failed,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("running")]
        running,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopped")]
        stopped,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopping")]
        stopping,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("success")]
        success,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("warning")]
        warning,
    }
    
    // Id: OfferTypeEnum Namespace: dedicatedCloud.backup
    public enum OfferTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("advanced")]
        advanced,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backup")]
        backup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("classic")]
        classic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("legacy")]
        legacy,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("premium")]
        premium,
    }
    
    // Id: OptimizeMessageEnum Namespace: dedicatedCloud.backup
    public enum OptimizeMessageEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasMoreBackupJobs")]
        hasMoreBackupJobs,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasMoreProxies")]
        hasMoreProxies,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasSufficientProxies")]
        hasSufficientProxies,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noBackupJobs")]
        noBackupJobs,
    }
    
    // Id: OptimizeProxies Namespace: dedicatedCloud.backup
    public class OptimizeProxies {
        
        // Key: message Type: dedicatedCloud.backup.OptimizeMessageEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("message")]
        public _dedicatedCloud_backup.OptimizeMessageEnum Message { get; set; }//;
        
        // Key: numberOfProxiesDeployed Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("numberOfProxiesDeployed")]
        public long NumberOfProxiesDeployed { get; set; }//;
        
        // Key: numberOfProxiesImpact Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("numberOfProxiesImpact")]
        public long NumberOfProxiesImpact { get; set; }//;
        
        // Key: recommendation Type: dedicatedCloud.backup.OptimizeRecommendationEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("recommendation")]
        public _dedicatedCloud_backup.OptimizeRecommendationEnum Recommendation { get; set; }//;
    }
    
    // Id: OptimizeRecommendationEnum Namespace: dedicatedCloud.backup
    public enum OptimizeRecommendationEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("add")]
        add,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("optimized")]
        optimized,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("remove")]
        remove,
    }
    
    // Id: ReplicationSyncStatus Namespace: dedicatedCloud.backup
    public enum ReplicationSyncStatus {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("out-of-sync")]
        out_of_sync,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sync-required")]
        sync_required,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
    }
    
    // Id: RestorePoint Namespace: dedicatedCloud.backup
    public class RestorePoint {
        
        // Key: creationTime Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationTime")]
        public System.DateTime? CreationTime { get; set; }//;
        
        // Key: isCorrupted Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isCorrupted")]
        public System.Boolean? IsCorrupted { get; set; }//;
        
        // Key: restorePointId Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorePointId")]
        public long RestorePointId { get; set; }//;
        
        // Key: size Type: complexType.UnitAndValue<long> FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public _complexType.UnitAndValue<long>? Size { get; set; }//;
        
        // Key: type Type: dedicatedCloud.backup.BackupTypeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _dedicatedCloud_backup.BackupTypeEnum? Type { get; set; }//;
    }
    
    // Id: StateEnum Namespace: dedicatedCloud.backup
    public enum StateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delivered")]
        delivered,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabling")]
        disabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabling")]
        enabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating")]
        migrating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pending")]
        pending,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removed")]
        removed,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopping")]
        stopping,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toCreate")]
        toCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toDelete")]
        toDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toDisable")]
        toDisable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toEnable")]
        toEnable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toStop")]
        toStop,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
    }
}
