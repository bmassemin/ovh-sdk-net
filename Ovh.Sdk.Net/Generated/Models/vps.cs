//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _vps {
    
    
    // Id: PleskLicenseDomainNumberEnum Namespace: vps
    public enum PleskLicenseDomainNumberEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("10")]
        _10,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("100")]
        _100,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("300")]
        _300,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostingsuite")]
        hostingsuite,
    }
    
    // Id: AutomatedBackup Namespace: vps
    public class AutomatedBackup {
        
        // Key: schedule Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("schedule")]
        public System.TimeOnly? Schedule { get; set; }//;
        
        // Key: state Type: vps.BackupStateEnum FullType: vps.BackupStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps.BackupStateEnum State { get; set; }//;
    }
    
    // Id: BackupFtp Namespace: vps
    public class BackupFtp {
        
        // Key: ftpBackupName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ftpBackupName")]
        public required System.String FtpBackupName { get; set; }//;
        
        // Key: quota Type: complexType.UnitAndValue_long FullType: complexType.UnitAndValue_long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public _complexType.UnitAndValue_long? Quota { get; set; }//;
        
        // Key: readOnlyDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readOnlyDate")]
        public System.DateTime? ReadOnlyDate { get; set; }//;
        
        // Key: type Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required System.String Type { get; set; }//;
        
        // Key: usage Type: complexType.UnitAndValue_long FullType: complexType.UnitAndValue_long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usage")]
        public _complexType.UnitAndValue_long? Usage { get; set; }//;
    }
    
    // Id: BackupStateEnum Namespace: vps
    public enum BackupStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
    }
    
    // Id: Datacenter Namespace: vps
    public class Datacenter {
        
        // Key: country Type: coreTypes.CountryEnum FullType: coreTypes.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("country")]
        public required _coreTypes.CountryEnum Country { get; set; }//;
        
        // Key: longName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("longName")]
        public required System.String LongName { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: Disk Namespace: vps
    public class Disk {
        
        // Key: bandwidthLimit Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bandwidthLimit")]
        public required System.Int64 BandwidthLimit { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: lowFreeSpaceThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lowFreeSpaceThreshold")]
        public System.Int64? LowFreeSpaceThreshold { get; set; }//;
        
        // Key: monitoring Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monitoring")]
        public System.Boolean? Monitoring { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public System.String? ServiceName { get; set; }//;
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required System.Int64 Size { get; set; }//;
        
        // Key: state Type: vps.disk.StateEnum FullType: vps.disk.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps_disk.StateEnum State { get; set; }//;
        
        // Key: type Type: vps.disk.TypeEnum FullType: vps.disk.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _vps_disk.TypeEnum Type { get; set; }//;
    }
    
    // Id: DownloadSnapshotURL Namespace: vps
    public class DownloadSnapshotURL {
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required System.Int64 Size { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public required System.String Url { get; set; }//;
    }
    
    // Id: Image Namespace: vps
    public class Image {
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: Ip Namespace: vps
    public class Ip {
        
        // Key: gateway Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gateway")]
        public System.String? Gateway { get; set; }//;
        
        // Key: geolocation Type: vps.ip.GeolocationEnum FullType: vps.ip.GeolocationEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("geolocation")]
        public required _vps_ip.GeolocationEnum Geolocation { get; set; }//;
        
        // Key: ipAddress Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ipAddress")]
        public required System.String IpAddress { get; set; }//;
        
        // Key: macAddress Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("macAddress")]
        public System.String? MacAddress { get; set; }//;
        
        // Key: reverse Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reverse")]
        public System.String? Reverse { get; set; }//;
        
        // Key: type Type: vps.ip.TypeEnum FullType: vps.ip.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _vps_ip.TypeEnum Type { get; set; }//;
        
        // Key: version Type: coreTypes.IpVersionEnum FullType: coreTypes.IpVersionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required _coreTypes.IpVersionEnum Version { get; set; }//;
    }
    
    // Id: Model Namespace: vps
    public class Model {
        
        // Key: availableOptions Type: vps.VpsOptionEnum[] FullType: vps.VpsOptionEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("availableOptions")]
        public required _vps.VpsOptionEnum[] AvailableOptions { get; set; }//;
        
        // Key: datacenter Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public required System.String[] Datacenter { get; set; }//;
        
        // Key: disk Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required System.Int64 Disk { get; set; }//;
        
        // Key: maximumAdditionnalIp Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maximumAdditionnalIp")]
        public required System.Int64 MaximumAdditionnalIp { get; set; }//;
        
        // Key: memory Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memory")]
        public required System.Int64 Memory { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: offer Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public required System.String Offer { get; set; }//;
        
        // Key: vcore Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vcore")]
        public required System.Int64 Vcore { get; set; }//;
        
        // Key: version Type: vps.VpsVersionEnum FullType: vps.VpsVersionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required _vps.VpsVersionEnum Version { get; set; }//;
    }
    
    // Id: Option Namespace: vps
    public class Option {
        
        // Key: option Type: vps.VpsOptionEnum FullType: vps.VpsOptionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("option")]
        public required _vps.VpsOptionEnum _Option { get; set; }//;
        
        // Key: state Type: vps.VpsOptionStateEnum FullType: vps.VpsOptionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps.VpsOptionStateEnum State { get; set; }//;
    }
    
    // Id: RestoreStateEnum Namespace: vps
    public enum RestoreStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restored")]
        restored,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restoring")]
        restoring,
    }
    
    // Id: RestoreTypeEnum Namespace: vps
    public enum RestoreTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("file")]
        file,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("full")]
        full,
    }
    
    // Id: Snapshot Namespace: vps
    public class Snapshot {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public required System.DateTime CreationDate { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public System.String? Region { get; set; }//;
    }
    
    // Id: Software Namespace: vps
    public class Software {
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: status Type: vps.SoftwareStatusEnum FullType: vps.SoftwareStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _vps.SoftwareStatusEnum Status { get; set; }//;
        
        // Key: type Type: vps.SoftwareTypeEnum FullType: vps.SoftwareTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _vps.SoftwareTypeEnum Type { get; set; }//;
    }
    
    // Id: SoftwareStatusEnum Namespace: vps
    public enum SoftwareStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deprecated")]
        deprecated,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stable")]
        stable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("testing")]
        testing,
    }
    
    // Id: SoftwareTypeEnum Namespace: vps
    public enum SoftwareTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("database")]
        database,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("environment")]
        environment,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("webserver")]
        webserver,
    }
    
    // Id: Task Namespace: vps
    public class Task {
        
        // Key: date Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public required System.DateTime Date { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: progress Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("progress")]
        public required System.Int64 Progress { get; set; }//;
        
        // Key: state Type: vps.TaskStateEnum FullType: vps.TaskStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps.TaskStateEnum State { get; set; }//;
        
        // Key: type Type: vps.TaskTypeEnum FullType: vps.TaskTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _vps.TaskTypeEnum Type { get; set; }//;
    }
    
    // Id: TaskStateEnum Namespace: vps
    public enum TaskStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("blocked")]
        blocked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("paused")]
        paused,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingAck")]
        waitingAck,
    }
    
    // Id: TaskTypeEnum Namespace: vps
    public enum TaskTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("addVeeamBackupJob")]
        addVeeamBackupJob,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("changeRootPassword")]
        changeRootPassword,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createSnapshot")]
        createSnapshot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleteSnapshot")]
        deleteSnapshot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deliverVm")]
        deliverVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("getConsoleUrl")]
        getConsoleUrl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("internalTask")]
        internalTask,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrate")]
        migrate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("openConsoleAccess")]
        openConsoleAccess,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("provisioningAdditionalIp")]
        provisioningAdditionalIp,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reOpenVm")]
        reOpenVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rebootVm")]
        rebootVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reinstallVm")]
        reinstallVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removeVeeamBackup")]
        removeVeeamBackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rescheduleAutoBackup")]
        rescheduleAutoBackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restoreFullVeeamBackup")]
        restoreFullVeeamBackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restoreVeeamBackup")]
        restoreVeeamBackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restoreVm")]
        restoreVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("revertSnapshot")]
        revertSnapshot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("setMonitoring")]
        setMonitoring,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("setNetboot")]
        setNetboot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startVm")]
        startVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopVm")]
        stopVm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgradeVm")]
        upgradeVm,
    }
    
    // Id: Template Namespace: vps
    public class Template {
        
        // Key: availableLanguage Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("availableLanguage")]
        public required System.String[] AvailableLanguage { get; set; }//;
        
        // Key: bitFormat Type: vps.TemplateBitFormatEnum FullType: vps.TemplateBitFormatEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bitFormat")]
        public required _vps.TemplateBitFormatEnum BitFormat { get; set; }//;
        
        // Key: distribution Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("distribution")]
        public required System.String Distribution { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: locale Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("locale")]
        public required System.String Locale { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: TemplateBitFormatEnum Namespace: vps
    public enum TemplateBitFormatEnum {
        
        _32 = 32,
        
        _64 = 64,
    }
    
    // Id: VPS Namespace: vps
    public class VPS {
        
        // Key: cluster Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cluster")]
        public required System.String Cluster { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: keymap Type: vps.VpsKeymapEnum FullType: vps.VpsKeymapEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keymap")]
        public _vps.VpsKeymapEnum? Keymap { get; set; }//;
        
        // Key: memoryLimit Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryLimit")]
        public required System.Int64 MemoryLimit { get; set; }//;
        
        // Key: model Type: vps.Model FullType: vps.Model
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("model")]
        public required _vps.Model Model { get; set; }//;
        
        // Key: monitoringIpBlocks Type: ipBlock[] FullType: ipBlock[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monitoringIpBlocks")]
        public required System.String[] MonitoringIpBlocks { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: netbootMode Type: vps.VpsNetbootEnum FullType: vps.VpsNetbootEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netbootMode")]
        public required _vps.VpsNetbootEnum NetbootMode { get; set; }//;
        
        // Key: offerType Type: vps.VpsOfferEnum FullType: vps.VpsOfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offerType")]
        public required _vps.VpsOfferEnum OfferType { get; set; }//;
        
        // Key: slaMonitoring Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("slaMonitoring")]
        public System.Boolean? SlaMonitoring { get; set; }//;
        
        // Key: state Type: vps.VpsStateEnum FullType: vps.VpsStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps.VpsStateEnum State { get; set; }//;
        
        // Key: vcore Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vcore")]
        public required System.Int64 Vcore { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public required System.String Zone { get; set; }//;
    }
    
    // Id: VPS Namespace: vps
    public class VPSWithIAM {
        
        // Key: cluster Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cluster")]
        public required System.String Cluster { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: keymap Type: vps.VpsKeymapEnum FullType: vps.VpsKeymapEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keymap")]
        public _vps.VpsKeymapEnum? Keymap { get; set; }//;
        
        // Key: memoryLimit Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryLimit")]
        public required System.Int64 MemoryLimit { get; set; }//;
        
        // Key: model Type: vps.Model FullType: vps.Model
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("model")]
        public required _vps.Model Model { get; set; }//;
        
        // Key: monitoringIpBlocks Type: ipBlock[] FullType: ipBlock[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monitoringIpBlocks")]
        public required System.String[] MonitoringIpBlocks { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: netbootMode Type: vps.VpsNetbootEnum FullType: vps.VpsNetbootEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netbootMode")]
        public required _vps.VpsNetbootEnum NetbootMode { get; set; }//;
        
        // Key: offerType Type: vps.VpsOfferEnum FullType: vps.VpsOfferEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offerType")]
        public required _vps.VpsOfferEnum OfferType { get; set; }//;
        
        // Key: slaMonitoring Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("slaMonitoring")]
        public System.Boolean? SlaMonitoring { get; set; }//;
        
        // Key: state Type: vps.VpsStateEnum FullType: vps.VpsStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _vps.VpsStateEnum State { get; set; }//;
        
        // Key: vcore Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vcore")]
        public required System.Int64 Vcore { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public required System.String Zone { get; set; }//;
    }
    
    // Id: Veeam Namespace: vps
    public class Veeam {
        
        // Key: backup Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backup")]
        public required System.Boolean Backup { get; set; }//;
    }
    
    // Id: Vnc Namespace: vps
    public class Vnc {
        
        // Key: host Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("host")]
        public required System.String Host { get; set; }//;
        
        // Key: password Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("password")]
        public required System.String Password { get; set; }//;
        
        // Key: port Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("port")]
        public required System.Int64 Port { get; set; }//;
    }
    
    // Id: VncProtocolEnum Namespace: vps
    public enum VncProtocolEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VNC")]
        VNC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VNCOverWebSocket")]
        VNCOverWebSocket,
    }
    
    // Id: VpsBillingVersion Namespace: vps
    public class VpsBillingVersion {
        
        // Key: version Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.Int64 Version { get; set; }//;
    }
    
    // Id: VpsKeymapEnum Namespace: vps
    public enum VpsKeymapEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fr")]
        fr,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("us")]
        us,
    }
    
    // Id: VpsMonitoringPeriodEnum Namespace: vps
    public enum VpsMonitoringPeriodEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastday")]
        lastday,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastmonth")]
        lastmonth,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastweek")]
        lastweek,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastyear")]
        lastyear,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("today")]
        today,
    }
    
    // Id: VpsMonitoringStatistics Namespace: vps
    public class VpsMonitoringStatistics {
        
        // Key: cpu Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu")]
        public required System.Double Cpu { get; set; }//;
        
        // Key: disk Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required System.Double Disk { get; set; }//;
        
        // Key: memory Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memory")]
        public required System.Double Memory { get; set; }//;
    }
    
    // Id: VpsNetbootEnum Namespace: vps
    public enum VpsNetbootEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("local")]
        local,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rescue")]
        rescue,
    }
    
    // Id: VpsOfferEnum Namespace: vps
    public enum VpsOfferEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("beta-classic")]
        beta_classic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("classic")]
        classic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cloud")]
        cloud,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cloudram")]
        cloudram,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("game-classic")]
        game_classic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lowlat")]
        lowlat,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ssd")]
        ssd,
    }
    
    // Id: VpsOptionEnum Namespace: vps
    public enum VpsOptionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("additionalDisk")]
        additionalDisk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("automatedBackup")]
        automatedBackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpanel")]
        cpanel,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ftpbackup")]
        ftpbackup,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plesk")]
        plesk,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshot")]
        snapshot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("veeam")]
        veeam,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("windows")]
        windows,
    }
    
    // Id: VpsOptionStateEnum Namespace: vps
    public enum VpsOptionStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("released")]
        released,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subscribed")]
        subscribed,
    }
    
    // Id: VpsStateEnum Namespace: vps
    public enum VpsStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backuping")]
        backuping,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("installing")]
        installing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenance")]
        maintenance,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rebooting")]
        rebooting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rescued")]
        rescued,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("running")]
        running,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopped")]
        stopped,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stopping")]
        stopping,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgrading")]
        upgrading,
    }
    
    // Id: VpsStatisticTypeEnum Namespace: vps
    public enum VpsStatisticTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:iowait")]
        cpu_iowait,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:max")]
        cpu_max,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:nice")]
        cpu_nice,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:sys")]
        cpu_sys,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:used")]
        cpu_used,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu:user")]
        cpu_user,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mem:max")]
        mem_max,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mem:used")]
        mem_used,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("net:rx")]
        net_rx,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("net:tx")]
        net_tx,
    }
    
    // Id: VpsTimestampValue Namespace: vps
    public class VpsTimestampValue {
        
        // Key: timestamp Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("timestamp")]
        public required System.Int64 Timestamp { get; set; }//;
        
        // Key: value Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public System.Double? Value { get; set; }//;
    }
    
    // Id: VpsVersionEnum Namespace: vps
    public enum VpsVersionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2013v1")]
        _2013v1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2014v1")]
        _2014v1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2015v1")]
        _2015v1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2017v1")]
        _2017v1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2017v2")]
        _2017v2,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2017v3")]
        _2017v3,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2018v1")]
        _2018v1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2018v2")]
        _2018v2,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2019v1")]
        _2019v1,
    }
}
