//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _dedicatedCloud {
    
    
    // Id: AllowedNetwork Namespace: dedicatedCloud
    public class AllowedNetwork {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: network Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public required System.String Network { get; set; }//;
        
        // Key: networkAccessId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkAccessId")]
        public required System.Int64 NetworkAccessId { get; set; }//;
        
        // Key: state Type: dedicatedCloud.AllowedNetworkStateEnum FullType: dedicatedCloud.AllowedNetworkStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.AllowedNetworkStateEnum State { get; set; }//;
    }
    
    // Id: AllowedNetworkStateEnum Namespace: dedicatedCloud
    public enum AllowedNetworkStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowed")]
        allowed,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toDelete")]
        toDelete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toUpdate")]
        toUpdate,
    }
    
    // Id: AutoScaleConfig Namespace: dedicatedCloud
    public class AutoScaleConfig {
        
        // Key: cpuMaxThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuMaxThreshold")]
        public required System.Int64 CpuMaxThreshold { get; set; }//;
        
        // Key: cpuMinThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuMinThreshold")]
        public required System.Int64 CpuMinThreshold { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: maxNumOfHosts Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxNumOfHosts")]
        public required System.Int64 MaxNumOfHosts { get; set; }//;
        
        // Key: memMaxThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memMaxThreshold")]
        public required System.Int64 MemMaxThreshold { get; set; }//;
        
        // Key: memMinThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memMinThreshold")]
        public required System.Int64 MemMinThreshold { get; set; }//;
        
        // Key: minNumOfHosts Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minNumOfHosts")]
        public required System.Int64 MinNumOfHosts { get; set; }//;
        
        // Key: storageMaxThreshold Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("storageMaxThreshold")]
        public required System.Int64 StorageMaxThreshold { get; set; }//;
        
        // Key: timeDelayScaleIn Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("timeDelayScaleIn")]
        public required System.Int64 TimeDelayScaleIn { get; set; }//;
        
        // Key: timeDelayScaleOut Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("timeDelayScaleOut")]
        public required System.Int64 TimeDelayScaleOut { get; set; }//;
        
        // Key: timeDelayStorageScaleOut Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("timeDelayStorageScaleOut")]
        public required System.Int64 TimeDelayStorageScaleOut { get; set; }//;
    }
    
    // Id: AutoScaleVirtual Namespace: dedicatedCloud
    public class AutoScaleVirtual {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: Backup Namespace: dedicatedCloud
    public class Backup {
        
        // Key: backupDurationInReport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupDurationInReport")]
        public System.Boolean? BackupDurationInReport { get; set; }//;
        
        // Key: backupOffer Type: dedicatedCloud.backup.OfferTypeEnum FullType: dedicatedCloud.backup.OfferTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupOffer")]
        public _dedicatedCloud_backup.OfferTypeEnum? BackupOffer { get; set; }//;
        
        // Key: backupSizeInReport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupSizeInReport")]
        public System.Boolean? BackupSizeInReport { get; set; }//;
        
        // Key: diskSizeInReport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("diskSizeInReport")]
        public System.Boolean? DiskSizeInReport { get; set; }//;
        
        // Key: encryption Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("encryption")]
        public System.Boolean? Encryption { get; set; }//;
        
        // Key: fullDayInReport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fullDayInReport")]
        public System.Boolean? FullDayInReport { get; set; }//;
        
        // Key: hostname Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostname")]
        public System.String? Hostname { get; set; }//;
        
        // Key: mailAddress Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mailAddress")]
        public System.String? MailAddress { get; set; }//;
        
        // Key: replicationZone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replicationZone")]
        public System.String? ReplicationZone { get; set; }//;
        
        // Key: restorePointInReport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorePointInReport")]
        public System.Boolean? RestorePointInReport { get; set; }//;
        
        // Key: scheduleHour Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("scheduleHour")]
        public System.TimeOnly? ScheduleHour { get; set; }//;
        
        // Key: state Type: dedicatedCloud.BackupStateEnum FullType: dedicatedCloud.BackupStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.BackupStateEnum State { get; set; }//;
        
        // Key: vmwareVmId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmwareVmId")]
        public System.String? VmwareVmId { get; set; }//;
    }
    
    // Id: BackupJob Namespace: dedicatedCloud
    public class BackupJob {
        
        // Key: allocatedDisk Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allocatedDisk")]
        public System.Double? AllocatedDisk { get; set; }//;
        
        // Key: backupDays Type: dedicatedCloud.backup.BackupDaysEnum[] FullType: dedicatedCloud.backup.BackupDaysEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupDays")]
        public _dedicatedCloud_backup.BackupDaysEnum[]? BackupDays { get; set; }//;
        
        // Key: encryption Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("encryption")]
        public System.Boolean? Encryption { get; set; }//;
        
        // Key: offerType Type: dedicatedCloud.backup.OfferTypeEnum FullType: dedicatedCloud.backup.OfferTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offerType")]
        public _dedicatedCloud_backup.OfferTypeEnum? OfferType { get; set; }//;
        
        // Key: retentionTime Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionTime")]
        public System.Int64? RetentionTime { get; set; }//;
        
        // Key: state Type: dedicatedCloud.backup.StateEnum FullType: dedicatedCloud.backup.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_backup.StateEnum State { get; set; }//;
        
        // Key: vmName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmName")]
        public System.String? VmName { get; set; }//;
    }
    
    // Id: BackupRepository Namespace: dedicatedCloud
    public class BackupRepository {
        
        // Key: lastSuccessfulReplicationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastSuccessfulReplicationDate")]
        public System.DateTime? LastSuccessfulReplicationDate { get; set; }//;
        
        // Key: replication Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replication")]
        public _dedicatedCloud_option.StateEnum? Replication { get; set; }//;
        
        // Key: replicationZone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replicationZone")]
        public System.String? ReplicationZone { get; set; }//;
        
        // Key: repositoryId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("repositoryId")]
        public required System.Int64 RepositoryId { get; set; }//;
        
        // Key: repositoryName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("repositoryName")]
        public required System.String RepositoryName { get; set; }//;
        
        // Key: syncStatus Type: dedicatedCloud.backup.ReplicationSyncStatus FullType: dedicatedCloud.backup.ReplicationSyncStatus
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("syncStatus")]
        public _dedicatedCloud_backup.ReplicationSyncStatus? SyncStatus { get; set; }//;
    }
    
    // Id: BackupStateEnum Namespace: dedicatedCloud
    public enum BackupStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabling")]
        disabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabling")]
        enabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating")]
        migrating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removing")]
        removing,
    }
    
    // Id: BillingTypeEnum Namespace: dedicatedCloud
    public enum BillingTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("demo")]
        demo,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monthly")]
        monthly,
    }
    
    // Id: BlockRegisterEnum Namespace: dedicatedCloud
    public enum BlockRegisterEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("arin")]
        arin,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ripe")]
        ripe,
    }
    
    // Id: Capabilities Namespace: dedicatedCloud
    public class Capabilities {
        
        // Key: addRessourceRightStatus Type: dedicatedCloud.capabilities.FeatureStatusEnum FullType: dedicatedCloud.capabilities.FeatureStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("addRessourceRightStatus")]
        public required _dedicatedCloud_capabilities.FeatureStatusEnum AddRessourceRightStatus { get; set; }//;
        
        // Key: backupStatus Type: dedicatedCloud.capabilities.FeatureStatusEnum FullType: dedicatedCloud.capabilities.FeatureStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupStatus")]
        public required _dedicatedCloud_capabilities.FeatureStatusEnum BackupStatus { get; set; }//;
        
        // Key: canAddUser Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canAddUser")]
        public required System.Boolean CanAddUser { get; set; }//;
        
        // Key: fullAdminRoUserStatus Type: dedicatedCloud.capabilities.FeatureStatusEnum FullType: dedicatedCloud.capabilities.FeatureStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fullAdminRoUserStatus")]
        public required _dedicatedCloud_capabilities.FeatureStatusEnum FullAdminRoUserStatus { get; set; }//;
        
        // Key: nexus1000vStatus Type: dedicatedCloud.capabilities.FeatureStatusEnum FullType: dedicatedCloud.capabilities.FeatureStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nexus1000vStatus")]
        public required _dedicatedCloud_capabilities.FeatureStatusEnum Nexus1000vStatus { get; set; }//;
        
        // Key: upgradable Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgradable")]
        public required System.Boolean Upgradable { get; set; }//;
        
        // Key: userAccessPolicyStatus Type: dedicatedCloud.capabilities.FeatureStatusEnum FullType: dedicatedCloud.capabilities.FeatureStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userAccessPolicyStatus")]
        public required _dedicatedCloud_capabilities.FeatureStatusEnum UserAccessPolicyStatus { get; set; }//;
    }
    
    // Id: Cluster Namespace: dedicatedCloud
    public class Cluster {
        
        // Key: autoscale Type: dedicatedCloud.cluster.AutoScale FullType: dedicatedCloud.cluster.AutoScale
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("autoscale")]
        public _dedicatedCloud_cluster.AutoScale? Autoscale { get; set; }//;
        
        // Key: clusterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("clusterId")]
        public required System.Int64 ClusterId { get; set; }//;
        
        // Key: drsMode Type: dedicatedCloud.cluster.ClusterDrsModeEnum FullType: dedicatedCloud.cluster.ClusterDrsModeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("drsMode")]
        public required _dedicatedCloud_cluster.ClusterDrsModeEnum DrsMode { get; set; }//;
        
        // Key: drsStatus Type: dedicatedCloud.cluster.ClusterConfigsStatusEnum FullType: dedicatedCloud.cluster.ClusterConfigsStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("drsStatus")]
        public required _dedicatedCloud_cluster.ClusterConfigsStatusEnum DrsStatus { get; set; }//;
        
        // Key: evcMode Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("evcMode")]
        public required System.String EvcMode { get; set; }//;
        
        // Key: haStatus Type: dedicatedCloud.cluster.ClusterConfigsStatusEnum FullType: dedicatedCloud.cluster.ClusterConfigsStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("haStatus")]
        public required _dedicatedCloud_cluster.ClusterConfigsStatusEnum HaStatus { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: vmwareClusterId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmwareClusterId")]
        public required System.String VmwareClusterId { get; set; }//;
    }
    
    // Id: CommercialNameEnum Namespace: dedicatedCloud
    public enum CommercialNameEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI")]
        CDI,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-HDS")]
        CDI_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-HIPAA")]
        CDI_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-NSX")]
        CDI_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-NSX-T")]
        CDI_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-NSX-VROPS")]
        CDI_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-PCIDSS")]
        CDI_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-UNKNOWN")]
        CDI_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CDI-VROPS")]
        CDI_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC")]
        DC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT")]
        DC_ANCIENT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-HDS")]
        DC_ANCIENT_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-HIPAA")]
        DC_ANCIENT_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-NSX")]
        DC_ANCIENT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-NSX-T")]
        DC_ANCIENT_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-NSX-VROPS")]
        DC_ANCIENT_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-PCIDSS")]
        DC_ANCIENT_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-UNKNOWN")]
        DC_ANCIENT_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-ANCIENT-VROPS")]
        DC_ANCIENT_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-HDS")]
        DC_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-HIPAA")]
        DC_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY")]
        DC_LEGACY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-HDS")]
        DC_LEGACY_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-HIPAA")]
        DC_LEGACY_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-NSX")]
        DC_LEGACY_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-NSX-T")]
        DC_LEGACY_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-NSX-VROPS")]
        DC_LEGACY_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-PCIDSS")]
        DC_LEGACY_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-UNKNOWN")]
        DC_LEGACY_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-LEGACY-VROPS")]
        DC_LEGACY_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-NSX")]
        DC_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-NSX-T")]
        DC_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-NSX-VROPS")]
        DC_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-PCIDSS")]
        DC_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-UNKNOWN")]
        DC_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DC-VROPS")]
        DC_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS")]
        ESSENTIALS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-HDS")]
        ESSENTIALS_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-HIPAA")]
        ESSENTIALS_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-NSX")]
        ESSENTIALS_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-NSX-T")]
        ESSENTIALS_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-NSX-VROPS")]
        ESSENTIALS_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-PCIDSS")]
        ESSENTIALS_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-UNKNOWN")]
        ESSENTIALS_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ESSENTIALS-VROPS")]
        ESSENTIALS_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T")]
        NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-DEFAULT")]
        NSX_T_DEFAULT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-HDS")]
        NSX_T_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-NSX")]
        NSX_T_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-NSX-VROPS")]
        NSX_T_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-PCIDSS")]
        NSX_T_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-VROPS")]
        NSX_T_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-VROPS-WITHOUT-NSX")]
        NSX_T_VROPS_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NSX-T-WITHOUT-NSX")]
        NSX_T_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER")]
        PREMIER,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-DEFAULT")]
        PREMIER_DEFAULT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-HDS")]
        PREMIER_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-HIPAA")]
        PREMIER_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-NSX")]
        PREMIER_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-NSX-T")]
        PREMIER_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-NSX-VROPS")]
        PREMIER_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-PCIDSS")]
        PREMIER_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-UNKNOWN")]
        PREMIER_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PREMIER-VROPS")]
        PREMIER_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC")]
        SDDC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-DEFAULT")]
        SDDC_DEFAULT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-HDS")]
        SDDC_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-HIPAA")]
        SDDC_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY")]
        SDDC_LEGACY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-HDS")]
        SDDC_LEGACY_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-HIPAA")]
        SDDC_LEGACY_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-PCIDSS")]
        SDDC_LEGACY_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-UNKNOWN")]
        SDDC_LEGACY_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-VROPS")]
        SDDC_LEGACY_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-VROPS-WITHOUT-NSX")]
        SDDC_LEGACY_VROPS_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-LEGACY-WITHOUT-NSX")]
        SDDC_LEGACY_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-PCIDSS")]
        SDDC_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-UNKNOWN")]
        SDDC_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-VROPS")]
        SDDC_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-VROPS-WITHOUT-NSX")]
        SDDC_VROPS_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SDDC-WITHOUT-NSX")]
        SDDC_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN")]
        UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-HDS")]
        UNKNOWN_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-HIPAA")]
        UNKNOWN_HIPAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-NSX")]
        UNKNOWN_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-NSX-T")]
        UNKNOWN_NSX_T,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-NSX-VROPS")]
        UNKNOWN_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-PCIDSS")]
        UNKNOWN_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-UNKNOWN")]
        UNKNOWN_UNKNOWN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-VROPS")]
        UNKNOWN_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNKNOWN-VSPHERE")]
        UNKNOWN_VSPHERE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE")]
        VSPHERE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-DEFAULT")]
        VSPHERE_DEFAULT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-HDS")]
        VSPHERE_HDS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-NSX")]
        VSPHERE_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-NSX-VROPS")]
        VSPHERE_NSX_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-PCIDSS")]
        VSPHERE_PCIDSS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-VROPS")]
        VSPHERE_VROPS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-VROPS-WITHOUT-NSX")]
        VSPHERE_VROPS_WITHOUT_NSX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSPHERE-WITHOUT-NSX")]
        VSPHERE_WITHOUT_NSX,
    }
    
    // Id: CommercialRange Namespace: dedicatedCloud
    public class CommercialRange {
        
        // Key: allowedHypervisorVersions Type: dedicatedCloud.HypervisorVersionEnum[] FullType: dedicatedCloud.HypervisorVersionEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedHypervisorVersions")]
        public required _dedicatedCloud.HypervisorVersionEnum[] AllowedHypervisorVersions { get; set; }//;
        
        // Key: allowedNetworkRoles Type: dedicatedCloud.right.NetworkRoleEnum[] FullType: dedicatedCloud.right.NetworkRoleEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedNetworkRoles")]
        public required _dedicatedCloud_right.NetworkRoleEnum[] AllowedNetworkRoles { get; set; }//;
        
        // Key: commercialRangeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commercialRangeName")]
        public required System.String CommercialRangeName { get; set; }//;
        
        // Key: dedicatedCloudVersion Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dedicatedCloudVersion")]
        public required System.String DedicatedCloudVersion { get; set; }//;
        
        // Key: range Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("range")]
        public System.String? Range { get; set; }//;
    }
    
    // Id: Datacenter Namespace: dedicatedCloud
    public class Datacenter {
        
        // Key: commercialName Type: dedicatedCloud.CommercialNameEnum FullType: dedicatedCloud.CommercialNameEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commercialName")]
        public required _dedicatedCloud.CommercialNameEnum CommercialName { get; set; }//;
        
        // Key: commercialRangeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commercialRangeName")]
        public required System.String CommercialRangeName { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public required System.Int64 DatacenterId { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: horizonViewName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("horizonViewName")]
        public System.String? HorizonViewName { get; set; }//;
        
        // Key: isRemovable Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isRemovable")]
        public required System.Boolean IsRemovable { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: DvsSecurityPolicy Namespace: dedicatedCloud
    public class DvsSecurityPolicy {
        
        // Key: allowPromiscuous Type: dedicatedCloud.vmwareBoolPolicy FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowPromiscuous")]
        public required _dedicatedCloud.vmwareBoolPolicy AllowPromiscuous { get; set; }//;
        
        // Key: forgedTransmits Type: dedicatedCloud.vmwareBoolPolicy FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("forgedTransmits")]
        public required _dedicatedCloud.vmwareBoolPolicy ForgedTransmits { get; set; }//;
        
        // Key: macChanges Type: dedicatedCloud.vmwareBoolPolicy FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("macChanges")]
        public required _dedicatedCloud.vmwareBoolPolicy MacChanges { get; set; }//;
    }
    
    // Id: Federation Namespace: dedicatedCloud
    public class Federation {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: FederationAccessNetwork Namespace: dedicatedCloud
    public class FederationAccessNetwork {
        
        // Key: activeDirectoryId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryId")]
        public required System.Int64 ActiveDirectoryId { get; set; }//;
        
        // Key: baseDnForGroups Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("baseDnForGroups")]
        public required System.String BaseDnForGroups { get; set; }//;
        
        // Key: baseDnForUsers Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("baseDnForUsers")]
        public required System.String BaseDnForUsers { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: domainAlias Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domainAlias")]
        public required System.String DomainAlias { get; set; }//;
        
        // Key: domainName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domainName")]
        public required System.String DomainName { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: ldapHostname Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ldapHostname")]
        public System.String? LdapHostname { get; set; }//;
        
        // Key: ldapTcpPort Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ldapTcpPort")]
        public required System.Int64 LdapTcpPort { get; set; }//;
        
        // Key: noSsl Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noSsl")]
        public required System.Boolean NoSsl { get; set; }//;
        
        // Key: sslThumbprint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sslThumbprint")]
        public System.String? SslThumbprint { get; set; }//;
        
        // Key: state Type: dedicatedCloud.optionAccessNetwork.StateEnum FullType: dedicatedCloud.optionAccessNetwork.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_optionAccessNetwork.StateEnum State { get; set; }//;
        
        // Key: username Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("username")]
        public required System.String Username { get; set; }//;
    }
    
    // Id: Filer Namespace: dedicatedCloud
    public class Filer {
        
        // Key: activeNode Type: dedicatedCloud.filer.NodeTypeEnum FullType: dedicatedCloud.filer.NodeTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeNode")]
        public _dedicatedCloud_filer.NodeTypeEnum? ActiveNode { get; set; }//;
        
        // Key: billingType Type: dedicatedCloud.ressources.BillingTypeEnum FullType: dedicatedCloud.ressources.BillingTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("billingType")]
        public _dedicatedCloud_ressources.BillingTypeEnum? BillingType { get; set; }//;
        
        // Key: connectionState Type: dedicatedCloud.filer.ConnexionStateEnum FullType: dedicatedCloud.filer.ConnexionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connectionState")]
        public _dedicatedCloud_filer.ConnexionStateEnum? ConnectionState { get; set; }//;
        
        // Key: filerId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filerId")]
        public required System.Int64 FilerId { get; set; }//;
        
        // Key: fullProfile Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fullProfile")]
        public required System.String FullProfile { get; set; }//;
        
        // Key: isManagedByOvh Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isManagedByOvh")]
        public required System.Boolean IsManagedByOvh { get; set; }//;
        
        // Key: master Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("master")]
        public required System.String Master { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: profile Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("profile")]
        public required System.String Profile { get; set; }//;
        
        // Key: resourceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resourceName")]
        public System.String? ResourceName { get; set; }//;
        
        // Key: size Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required _complexType.UnitAndValue<long> Size { get; set; }//;
        
        // Key: slave Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("slave")]
        public System.String? Slave { get; set; }//;
        
        // Key: spaceFree Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceFree")]
        public System.Double? SpaceFree { get; set; }//;
        
        // Key: spaceProvisionned Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceProvisionned")]
        public System.Double? SpaceProvisionned { get; set; }//;
        
        // Key: spaceUsed Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceUsed")]
        public System.Double? SpaceUsed { get; set; }//;
        
        // Key: state Type: dedicatedCloud.filer.StateEnum FullType: dedicatedCloud.filer.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_filer.StateEnum State { get; set; }//;
        
        // Key: vmTotal Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmTotal")]
        public System.Int64? VmTotal { get; set; }//;
    }
    
    // Id: GenerationEnum Namespace: dedicatedCloud
    public enum GenerationEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("1.0")]
        _1_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("2.0")]
        _2_0,
    }
    
    // Id: Hcx Namespace: dedicatedCloud
    public class Hcx {
        
        // Key: build Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("build")]
        public System.String? Build { get; set; }//;
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public System.String? Version { get; set; }//;
    }
    
    // Id: Hds Namespace: dedicatedCloud
    public class Hds {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: Hipaa Namespace: dedicatedCloud
    public class Hipaa {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: Host Namespace: dedicatedCloud
    public class Host {
        
        // Key: billingType Type: dedicatedCloud.ressources.BillingTypeEnum FullType: dedicatedCloud.ressources.BillingTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("billingType")]
        public required _dedicatedCloud_ressources.BillingTypeEnum BillingType { get; set; }//;
        
        // Key: clusterName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("clusterName")]
        public System.String? ClusterName { get; set; }//;
        
        // Key: connectionState Type: dedicatedCloud.hostSystemConnectionState FullType: dedicatedCloud.hostSystemConnectionState
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connectionState")]
        public _dedicatedCloud.hostSystemConnectionState? ConnectionState { get; set; }//;
        
        // Key: cpu Type: complexType.UnitAndValue<double> FullType: complexType.UnitAndValue<double>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpu")]
        public required _complexType.UnitAndValue<double> Cpu { get; set; }//;
        
        // Key: cpuMax Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuMax")]
        public System.Int64? CpuMax { get; set; }//;
        
        // Key: cpuMaxCore Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuMaxCore")]
        public System.Int64? CpuMaxCore { get; set; }//;
        
        // Key: cpuNum Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuNum")]
        public System.Int64? CpuNum { get; set; }//;
        
        // Key: cpuUsed Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuUsed")]
        public System.Int64? CpuUsed { get; set; }//;
        
        // Key: hostId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostId")]
        public required System.Int64 HostId { get; set; }//;
        
        // Key: inMaintenance Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("inMaintenance")]
        public System.Boolean? InMaintenance { get; set; }//;
        
        // Key: memoryUsed Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryUsed")]
        public System.Double? MemoryUsed { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: parentHostId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentHostId")]
        public System.Int64? ParentHostId { get; set; }//;
        
        // Key: profile Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("profile")]
        public required System.String Profile { get; set; }//;
        
        // Key: profileCode Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("profileCode")]
        public required System.String ProfileCode { get; set; }//;
        
        // Key: rack Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rack")]
        public required System.String Rack { get; set; }//;
        
        // Key: ram Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ram")]
        public required _complexType.UnitAndValue<long> Ram { get; set; }//;
        
        // Key: resourceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resourceName")]
        public System.String? ResourceName { get; set; }//;
        
        // Key: state Type: dedicatedCloud.host.StateEnum FullType: dedicatedCloud.host.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_host.StateEnum State { get; set; }//;
        
        // Key: uptime Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uptime")]
        public System.Int64? Uptime { get; set; }//;
        
        // Key: vmTotal Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmTotal")]
        public System.Int64? VmTotal { get; set; }//;
        
        // Key: vmVcpuTotal Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmVcpuTotal")]
        public System.Int64? VmVcpuTotal { get; set; }//;
    }
    
    // Id: HostProfile Namespace: dedicatedCloud
    public class HostProfile {
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: HostResilience Namespace: dedicatedCloud
    public class HostResilience {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: HostStockHypervisor Namespace: dedicatedCloud
    public class HostStockHypervisor {
        
        // Key: value Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public required System.Int64 Value { get; set; }//;
        
        // Key: version Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: HostStockProcGen Namespace: dedicatedCloud
    public class HostStockProcGen {
        
        // Key: cpuGeneration Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuGeneration")]
        public required System.String CpuGeneration { get; set; }//;
        
        // Key: value Type: dedicatedCloud.HostStockHypervisor[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public required _dedicatedCloud.HostStockHypervisor[] Value { get; set; }//;
    }
    
    // Id: HostStockProfile Namespace: dedicatedCloud
    public class HostStockProfile {
        
        // Key: id Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: ref Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ref")]
        public required System.String @ref { get; set; }//;
        
        // Key: value Type: dedicatedCloud.HostStockProcGen[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public required _dedicatedCloud.HostStockProcGen[] Value { get; set; }//;
    }
    
    // Id: HypervisorVersionEnum Namespace: dedicatedCloud
    public enum HypervisorVersionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("4.1")]
        _4_1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("5.0")]
        _5_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("5.1")]
        _5_1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("5.5")]
        _5_5,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("6.0")]
        _6_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("6.5")]
        _6_5,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("6.7")]
        _6_7,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("7.0")]
        _7_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("8.0")]
        _8_0,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hv3.1")]
        hv3_1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hvdc3.1")]
        hvdc3_1,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nc1.0")]
        nc1_0,
    }
    
    // Id: Iam Namespace: dedicatedCloud
    public class Iam {
        
        // Key: identityProviderId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("identityProviderId")]
        public System.Int64? IdentityProviderId { get; set; }//;
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: Ip Namespace: dedicatedCloud
    public class Ip {
        
        // Key: country Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("country")]
        public required System.String Country { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: gateway Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gateway")]
        public required System.String Gateway { get; set; }//;
        
        // Key: netmask Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netmask")]
        public required System.String Netmask { get; set; }//;
        
        // Key: network Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public required System.String Network { get; set; }//;
        
        // Key: networkName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkName")]
        public required System.String NetworkName { get; set; }//;
        
        // Key: register Type: dedicatedCloud.BlockRegisterEnum FullType: dedicatedCloud.BlockRegisterEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("register")]
        public required _dedicatedCloud.BlockRegisterEnum Register { get; set; }//;
        
        // Key: vlanNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlanNumber")]
        public required System.Int64 VlanNumber { get; set; }//;
    }
    
    // Id: IpCountriesEnum Namespace: dedicatedCloud
    public enum IpCountriesEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("be")]
        be,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ca")]
        ca,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ch")]
        ch,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cz")]
        cz,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("de")]
        de,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("es")]
        es,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fi")]
        fi,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fr")]
        fr,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gb")]
        gb,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ie")]
        ie,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("it")]
        it,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lt")]
        lt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nl")]
        nl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pl")]
        pl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pt")]
        pt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("us")]
        us,
    }
    
    // Id: IpDetails Namespace: dedicatedCloud
    public class IpDetails {
        
        // Key: ip Type: ip FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: reverse Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reverse")]
        public System.String? Reverse { get; set; }//;
        
        // Key: usage Type: dedicatedCloud.ipUsageEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usage")]
        public required _dedicatedCloud.ipUsageEnum Usage { get; set; }//;
        
        // Key: usageDetails Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usageDetails")]
        public System.String? UsageDetails { get; set; }//;
    }
    
    // Id: LogSubscriptionResource Namespace: dedicatedCloud
    public class LogSubscriptionResource {
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: type Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required System.String Type { get; set; }//;
    }
    
    // Id: LogSubscriptionResponse Namespace: dedicatedCloud
    public class LogSubscriptionResponse {
        
        // Key: operationId Type: uuid FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("operationId")]
        public required System.Guid OperationId { get; set; }//;
        
        // Key: serviceName Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
    }
    
    // Id: LogsURL Namespace: dedicatedCloud
    public class LogsURL {
        
        // Key: expirationDate Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public required System.DateTime ExpirationDate { get; set; }//;
        
        // Key: url Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public required System.String Url { get; set; }//;
    }
    
    // Id: ManagementInterfaceEnum Namespace: dedicatedCloud
    public enum ManagementInterfaceEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("azure")]
        azure,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("openstack")]
        openstack,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("systemcenter")]
        systemcenter,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vcloud")]
        vcloud,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vcsa")]
        vcsa,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vsphere")]
        vsphere,
    }
    
    // Id: Nsx Namespace: dedicatedCloud
    public class Nsx {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public System.String? Url { get; set; }//;
    }
    
    // Id: Nsxt Namespace: dedicatedCloud
    public class Nsxt {
        
        // Key: datacentersState Type: dedicatedCloud.option.DatacenterOptionState[] FullType: dedicatedCloud.option.DatacenterOptionState[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacentersState")]
        public _dedicatedCloud_option.DatacenterOptionState[]? DatacentersState { get; set; }//;
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public System.String? Url { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public System.String? Version { get; set; }//;
    }
    
    // Id: NsxtEdge Namespace: dedicatedCloud
    public class NsxtEdge {
        
        // Key: diskLocation Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("diskLocation")]
        public System.String? DiskLocation { get; set; }//;
        
        // Key: ip Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: moRef Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("moRef")]
        public System.String? MoRef { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nsxtEdgeId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsxtEdgeId")]
        public required System.Int64 NsxtEdgeId { get; set; }//;
        
        // Key: size Type: dedicatedCloud.nsxt.NsxtEdgeSizeEnum FullType: dedicatedCloud.nsxt.NsxtEdgeSizeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required _dedicatedCloud_nsxt.NsxtEdgeSizeEnum Size { get; set; }//;
        
        // Key: state Type: dedicatedCloud.StateEnum FullType: dedicatedCloud.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.StateEnum State { get; set; }//;
    }
    
    // Id: NsxtEdgeResilience Namespace: dedicatedCloud
    public class NsxtEdgeResilience {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: ObjectRight Namespace: dedicatedCloud
    public class ObjectRight {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: objectRightId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("objectRightId")]
        public required System.Int64 ObjectRightId { get; set; }//;
        
        // Key: propagate Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("propagate")]
        public required System.Boolean Propagate { get; set; }//;
        
        // Key: right Type: dedicatedCloud.right.RightEnum FullType: dedicatedCloud.right.RightEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("right")]
        public required _dedicatedCloud_right.RightEnum Right { get; set; }//;
        
        // Key: type Type: dedicatedCloud.right.UserObjectRightTypeEnum FullType: dedicatedCloud.right.UserObjectRightTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _dedicatedCloud_right.UserObjectRightTypeEnum Type { get; set; }//;
        
        // Key: vmwareObjectId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmwareObjectId")]
        public required System.String VmwareObjectId { get; set; }//;
    }
    
    // Id: Os Namespace: dedicatedCloud
    public class Os {
        
        // Key: fullName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fullName")]
        public required System.String FullName { get; set; }//;
        
        // Key: lastModificationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastModificationDate")]
        public required System.DateTime LastModificationDate { get; set; }//;
        
        // Key: shortName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("shortName")]
        public required System.String ShortName { get; set; }//;
    }
    
    // Id: PccStockProfile Namespace: dedicatedCloud
    public class PccStockProfile {
        
        // Key: count Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("count")]
        public required System.Int64 Count { get; set; }//;
        
        // Key: mode Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mode")]
        public required System.String Mode { get; set; }//;
        
        // Key: realVersion Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("realVersion")]
        public required System.String RealVersion { get; set; }//;
    }
    
    // Id: PccZone Namespace: dedicatedCloud
    public class PccZone {
        
        // Key: city Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("city")]
        public required System.String City { get; set; }//;
        
        // Key: countryCode Type: nichandle.CountryEnum FullType: nichandle.CountryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("countryCode")]
        public required _nichandle.CountryEnum CountryCode { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: pccZone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pccZone")]
        public required System.String _PccZone { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public required System.String Region { get; set; }//;
        
        // Key: regionLocation Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("regionLocation")]
        public required System.String RegionLocation { get; set; }//;
    }
    
    // Id: PciDss Namespace: dedicatedCloud
    public class PciDss {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: PrivateGateway Namespace: dedicatedCloud
    public class PrivateGateway {
        
        // Key: customerIp Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIp")]
        public System.String? CustomerIp { get; set; }//;
        
        // Key: customerNetmask Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerNetmask")]
        public System.String? CustomerNetmask { get; set; }//;
        
        // Key: customerPortGroup Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerPortGroup")]
        public System.String? CustomerPortGroup { get; set; }//;
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: RestorePoint Namespace: dedicatedCloud
    public class RestorePoint {
        
        // Key: creationTime Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationTime")]
        public System.String? CreationTime { get; set; }//;
        
        // Key: isCorrupted Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isCorrupted")]
        public required System.Boolean IsCorrupted { get; set; }//;
        
        // Key: restorePointId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorePointId")]
        public required System.Int64 RestorePointId { get; set; }//;
        
        // Key: restorePointSize Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restorePointSize")]
        public required _complexType.UnitAndValue<long> RestorePointSize { get; set; }//;
        
        // Key: type Type: dedicatedCloud.backup.BackupTypeEnum FullType: dedicatedCloud.backup.BackupTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _dedicatedCloud_backup.BackupTypeEnum? Type { get; set; }//;
    }
    
    // Id: Right Namespace: dedicatedCloud
    public class Right {
        
        // Key: canAddRessource Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canAddRessource")]
        public required System.Boolean CanAddRessource { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public required System.Int64 DatacenterId { get; set; }//;
        
        // Key: networkRole Type: dedicatedCloud.right.NetworkRoleEnum FullType: dedicatedCloud.right.NetworkRoleEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkRole")]
        public required _dedicatedCloud_right.NetworkRoleEnum NetworkRole { get; set; }//;
        
        // Key: right Type: dedicatedCloud.right.RightEnum FullType: dedicatedCloud.right.RightEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("right")]
        public required _dedicatedCloud_right.RightEnum _Right { get; set; }//;
        
        // Key: rightId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rightId")]
        public required System.Int64 RightId { get; set; }//;
        
        // Key: vmNetworkRole Type: dedicatedCloud.right.VmNetworkRoleEnum FullType: dedicatedCloud.right.VmNetworkRoleEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmNetworkRole")]
        public required _dedicatedCloud_right.VmNetworkRoleEnum VmNetworkRole { get; set; }//;
    }
    
    // Id: Robot Namespace: dedicatedCloud
    public class Robot {
        
        // Key: criticity Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("criticity")]
        public required System.String Criticity { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: enabled Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        public required System.Boolean Enabled { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: type Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required System.String Type { get; set; }//;
    }
    
    // Id: SecurityOption Namespace: dedicatedCloud
    public class SecurityOption {
        
        // Key: state Type: dedicatedCloud.securityOption.StateEnum FullType: dedicatedCloud.securityOption.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_securityOption.StateEnum State { get; set; }//;
    }
    
    // Id: ServicePack Namespace: dedicatedCloud
    public class ServicePack {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: options Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("options")]
        public required System.String[] Options { get; set; }//;
    }
    
    // Id: StateEnum Namespace: dedicatedCloud
    public enum StateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delivered")]
        delivered,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabling")]
        disabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating")]
        migrating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("provisionning")]
        provisionning,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("recycling")]
        recycling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reserved")]
        reserved,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toDisable")]
        toDisable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toProvision")]
        toProvision,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toRecycle")]
        toRecycle,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toRemove")]
        toRemove,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toUnprovision")]
        toUnprovision,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unprovisionning")]
        unprovisionning,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgrading")]
        upgrading,
    }
    
    // Id: SyslogForward Namespace: dedicatedCloud
    public class SyslogForward {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: SyslogForwardAccessNetwork Namespace: dedicatedCloud
    public class SyslogForwardAccessNetwork {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: logForwardId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("logForwardId")]
        public required System.Int64 LogForwardId { get; set; }//;
        
        // Key: logLevel Type: dedicatedCloud.syslogForward.LogLevelEnum FullType: dedicatedCloud.syslogForward.LogLevelEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("logLevel")]
        public required _dedicatedCloud_syslogForward.LogLevelEnum LogLevel { get; set; }//;
        
        // Key: noSsl Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noSsl")]
        public required System.Boolean NoSsl { get; set; }//;
        
        // Key: servicePort Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("servicePort")]
        public required System.Int64 ServicePort { get; set; }//;
        
        // Key: sourceType Type: dedicatedCloud.syslogForward.SourceTypeEnum[] FullType: dedicatedCloud.syslogForward.SourceTypeEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sourceType")]
        public required _dedicatedCloud_syslogForward.SourceTypeEnum[] SourceType { get; set; }//;
        
        // Key: sslThumbprint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sslThumbprint")]
        public System.String? SslThumbprint { get; set; }//;
        
        // Key: state Type: dedicatedCloud.optionAccessNetwork.StateEnum FullType: dedicatedCloud.optionAccessNetwork.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_optionAccessNetwork.StateEnum State { get; set; }//;
    }
    
    // Id: Tag Namespace: dedicatedCloud
    public class Tag {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: state Type: dedicatedCloud.TagStateEnum FullType: dedicatedCloud.TagStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _dedicatedCloud.TagStateEnum? State { get; set; }//;
        
        // Key: value Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public System.String? Value { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public System.String? Version { get; set; }//;
    }
    
    // Id: TagStateEnum Namespace: dedicatedCloud
    public enum TagStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabling")]
        disabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabling")]
        enabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
    }
    
    // Id: Task Namespace: dedicatedCloud
    public class Task {
        
        // Key: createdBy Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdBy")]
        public System.String? CreatedBy { get; set; }//;
        
        // Key: createdFrom Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdFrom")]
        public System.String? CreatedFrom { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public System.Int64? DatacenterId { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: endDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endDate")]
        public System.DateTime? EndDate { get; set; }//;
        
        // Key: executionDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("executionDate")]
        public required System.DateTime ExecutionDate { get; set; }//;
        
        // Key: filerId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filerId")]
        public System.Int64? FilerId { get; set; }//;
        
        // Key: hostId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostId")]
        public System.Int64? HostId { get; set; }//;
        
        // Key: lastModificationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }//;
        
        // Key: maintenanceDateFrom Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceDateFrom")]
        public System.DateTime? MaintenanceDateFrom { get; set; }//;
        
        // Key: maintenanceDateTo Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceDateTo")]
        public System.DateTime? MaintenanceDateTo { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: network Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public System.String? Network { get; set; }//;
        
        // Key: networkAccessId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkAccessId")]
        public System.Int64? NetworkAccessId { get; set; }//;
        
        // Key: orderId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("orderId")]
        public System.Int64? OrderId { get; set; }//;
        
        // Key: parentTaskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parentTaskId")]
        public System.Int64? ParentTaskId { get; set; }//;
        
        // Key: progress Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("progress")]
        public required System.Int64 Progress { get; set; }//;
        
        // Key: state Type: dedicatedCloud.TaskStateEnum FullType: dedicatedCloud.TaskStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.TaskStateEnum State { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public required System.Int64 TaskId { get; set; }//;
        
        // Key: type Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required System.String Type { get; set; }//;
        
        // Key: userId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userId")]
        public System.Int64? UserId { get; set; }//;
        
        // Key: vlanId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlanId")]
        public System.Int64? VlanId { get; set; }//;
    }
    
    // Id: TaskStateEnum Namespace: dedicatedCloud
    public enum TaskStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canceled")]
        canceled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fixing")]
        fixing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toCancel")]
        toCancel,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toCreate")]
        toCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingForChilds")]
        waitingForChilds,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingTodo")]
        waitingTodo,
    }
    
    // Id: TwoFAWhitelistStateEnum Namespace: dedicatedCloud
    public enum TwoFAWhitelistStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabling")]
        enabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating")]
        migrating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removed")]
        removed,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removing")]
        removing,
    }
    
    // Id: User Namespace: dedicatedCloud
    public class User {
        
        // Key: activationState Type: dedicatedCloud.user.ActivationStateEnum FullType: dedicatedCloud.user.ActivationStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activationState")]
        public _dedicatedCloud_user.ActivationStateEnum? ActivationState { get; set; }//;
        
        // Key: activeDirectoryId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryId")]
        public System.Int64? ActiveDirectoryId { get; set; }//;
        
        // Key: activeDirectoryType Type: dedicatedCloud.user.TypeEnum FullType: dedicatedCloud.user.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryType")]
        public _dedicatedCloud_user.TypeEnum? ActiveDirectoryType { get; set; }//;
        
        // Key: canManageIpFailOvers Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canManageIpFailOvers")]
        public required System.Boolean CanManageIpFailOvers { get; set; }//;
        
        // Key: canManageNetwork Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canManageNetwork")]
        public required System.Boolean CanManageNetwork { get; set; }//;
        
        // Key: canManageRights Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canManageRights")]
        public required System.Boolean CanManageRights { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public System.String? Email { get; set; }//;
        
        // Key: encryptionRight Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("encryptionRight")]
        public required System.Boolean EncryptionRight { get; set; }//;
        
        // Key: firstName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("firstName")]
        public System.String? FirstName { get; set; }//;
        
        // Key: fullAdminRo Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fullAdminRo")]
        public required System.Boolean FullAdminRo { get; set; }//;
        
        // Key: identityProviderId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("identityProviderId")]
        public System.Int64? IdentityProviderId { get; set; }//;
        
        // Key: identityProviderType Type: dedicatedCloud.user.IdentityProviderTypeEnum FullType: dedicatedCloud.user.IdentityProviderTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("identityProviderType")]
        public _dedicatedCloud_user.IdentityProviderTypeEnum? IdentityProviderType { get; set; }//;
        
        // Key: isEnableManageable Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isEnableManageable")]
        public required System.Boolean IsEnableManageable { get; set; }//;
        
        // Key: isTokenValidator Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isTokenValidator")]
        public required System.Boolean IsTokenValidator { get; set; }//;
        
        // Key: lastName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastName")]
        public System.String? LastName { get; set; }//;
        
        // Key: login Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("login")]
        public required System.String Login { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nsxRight Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsxRight")]
        public required System.Boolean NsxRight { get; set; }//;
        
        // Key: phoneNumber Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("phoneNumber")]
        public System.String? PhoneNumber { get; set; }//;
        
        // Key: receiveAlerts Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("receiveAlerts")]
        public required System.Boolean ReceiveAlerts { get; set; }//;
        
        // Key: state Type: dedicatedCloud.user.StateEnum FullType: dedicatedCloud.user.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_user.StateEnum State { get; set; }//;
        
        // Key: type Type: dedicatedCloud.user.TypeEnum FullType: dedicatedCloud.user.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _dedicatedCloud_user.TypeEnum? Type { get; set; }//;
        
        // Key: userId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userId")]
        public required System.Int64 UserId { get; set; }//;
    }
    
    // Id: UserAccessPolicyEnum Namespace: dedicatedCloud
    public enum UserAccessPolicyEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filtered")]
        filtered,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("open")]
        open,
    }
    
    // Id: UserLogoutPolicyEnum Namespace: dedicatedCloud
    public enum UserLogoutPolicyEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("first")]
        first,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("last")]
        last,
    }
    
    // Id: VMEncryption Namespace: dedicatedCloud
    public class VMEncryption {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
    }
    
    // Id: VMEncryptionAccessNetwork Namespace: dedicatedCloud
    public class VMEncryptionAccessNetwork {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: kmsId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kmsId")]
        public required System.Int64 KmsId { get; set; }//;
        
        // Key: kmsTcpPort Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kmsTcpPort")]
        public required System.Int64 KmsTcpPort { get; set; }//;
        
        // Key: sslThumbprint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sslThumbprint")]
        public required System.String SslThumbprint { get; set; }//;
        
        // Key: state Type: dedicatedCloud.optionAccessNetwork.StateEnum FullType: dedicatedCloud.optionAccessNetwork.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_optionAccessNetwork.StateEnum State { get; set; }//;
    }
    
    // Id: Vendor Namespace: dedicatedCloud
    public class Vendor {
        
        // Key: vendorName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vendorName")]
        public required System.String VendorName { get; set; }//;
    }
    
    // Id: VendorObjectTypeEnum Namespace: dedicatedCloud
    public enum VendorObjectTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cluster")]
        cluster,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        datacenter,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filer")]
        filer,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("host")]
        host,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vm")]
        vm,
    }
    
    // Id: Version Namespace: dedicatedCloud
    public class Version {
        
        // Key: build Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("build")]
        public required System.String Build { get; set; }//;
        
        // Key: major Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("major")]
        public required System.String Major { get; set; }//;
        
        // Key: minor Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minor")]
        public required System.String Minor { get; set; }//;
    }
    
    // Id: Vlan Namespace: dedicatedCloud
    public class Vlan {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: routingRateLimit Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("routingRateLimit")]
        public required System.String RoutingRateLimit { get; set; }//;
        
        // Key: state Type: dedicatedCloud.vlan.StateEnum FullType: dedicatedCloud.vlan.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_vlan.StateEnum State { get; set; }//;
        
        // Key: type Type: dedicatedCloud.vlan.TypeEnum FullType: dedicatedCloud.vlan.TypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _dedicatedCloud_vlan.TypeEnum Type { get; set; }//;
        
        // Key: vlanId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlanId")]
        public required System.Int64 VlanId { get; set; }//;
        
        // Key: vlanNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlanNumber")]
        public required System.Int64 VlanNumber { get; set; }//;
    }
    
    // Id: Vm Namespace: dedicatedCloud
    public class Vm {
        
        // Key: backup Type: dedicatedCloud.backup.Backup FullType: dedicatedCloud.backup.Backup
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backup")]
        public _dedicatedCloud_backup.Backup? Backup { get; set; }//;
        
        // Key: cdroms Type: dedicatedCloud.virtualMachineCdrom[] FullType: dedicatedCloud.virtualMachineCdrom[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cdroms")]
        public _dedicatedCloud.virtualMachineCdrom[]? Cdroms { get; set; }//;
        
        // Key: clusterName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("clusterName")]
        public System.String? ClusterName { get; set; }//;
        
        // Key: cpuMax Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuMax")]
        public System.Double? CpuMax { get; set; }//;
        
        // Key: cpuNum Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuNum")]
        public System.Int64? CpuNum { get; set; }//;
        
        // Key: cpuReady Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuReady")]
        public System.Double? CpuReady { get; set; }//;
        
        // Key: cpuReadyPercent Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuReadyPercent")]
        public System.Double? CpuReadyPercent { get; set; }//;
        
        // Key: cpuUsed Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cpuUsed")]
        public System.Int64? CpuUsed { get; set; }//;
        
        // Key: filers Type: dedicatedCloud.vmFiler[] FullType: dedicatedCloud.vmFiler[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filers")]
        public _dedicatedCloud.vmFiler[]? Filers { get; set; }//;
        
        // Key: folderName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("folderName")]
        public System.String? FolderName { get; set; }//;
        
        // Key: guestOsFamily Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("guestOsFamily")]
        public System.String? GuestOsFamily { get; set; }//;
        
        // Key: hostName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hostName")]
        public System.String? HostName { get; set; }//;
        
        // Key: license Type: dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum FullType: dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("license")]
        public _dedicatedCloud_spla.KmsLicenseIncludingLegacyEnum? License { get; set; }//;
        
        // Key: memoryMax Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryMax")]
        public System.Int64? MemoryMax { get; set; }//;
        
        // Key: memoryTps Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryTps")]
        public System.String? MemoryTps { get; set; }//;
        
        // Key: memoryUsed Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("memoryUsed")]
        public System.Int64? MemoryUsed { get; set; }//;
        
        // Key: moRef Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("moRef")]
        public required System.String MoRef { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: netPacketRx Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netPacketRx")]
        public System.Double? NetPacketRx { get; set; }//;
        
        // Key: netPacketTx Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netPacketTx")]
        public System.Double? NetPacketTx { get; set; }//;
        
        // Key: netRx Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netRx")]
        public System.Double? NetRx { get; set; }//;
        
        // Key: netTx Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("netTx")]
        public System.Double? NetTx { get; set; }//;
        
        // Key: networks Type: dedicatedCloud.vmNetwork[] FullType: dedicatedCloud.vmNetwork[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networks")]
        public _dedicatedCloud.vmNetwork[]? Networks { get; set; }//;
        
        // Key: powerState Type: dedicatedCloud.virtualMachinePowerState FullType: dedicatedCloud.virtualMachinePowerState
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("powerState")]
        public required _dedicatedCloud.virtualMachinePowerState PowerState { get; set; }//;
        
        // Key: readLatency Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readLatency")]
        public System.Double? ReadLatency { get; set; }//;
        
        // Key: readPerSecond Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readPerSecond")]
        public System.Double? ReadPerSecond { get; set; }//;
        
        // Key: readRate Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("readRate")]
        public System.Double? ReadRate { get; set; }//;
        
        // Key: roleFt Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("roleFt")]
        public System.String? RoleFt { get; set; }//;
        
        // Key: snapshotNum Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshotNum")]
        public System.Int64? SnapshotNum { get; set; }//;
        
        // Key: stateFt Type: dedicatedCloud.virtualMachineFaultToleranceState FullType: dedicatedCloud.virtualMachineFaultToleranceState
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stateFt")]
        public _dedicatedCloud.virtualMachineFaultToleranceState? StateFt { get; set; }//;
        
        // Key: vmId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmId")]
        public required System.Int64 VmId { get; set; }//;
        
        // Key: vmwareTools Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmwareTools")]
        public System.String? VmwareTools { get; set; }//;
        
        // Key: vmwareToolsVersion Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmwareToolsVersion")]
        public System.String? VmwareToolsVersion { get; set; }//;
        
        // Key: writeLatency Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("writeLatency")]
        public System.Double? WriteLatency { get; set; }//;
        
        // Key: writePerSecond Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("writePerSecond")]
        public System.Double? WritePerSecond { get; set; }//;
        
        // Key: writeRate Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("writeRate")]
        public System.Double? WriteRate { get; set; }//;
    }
    
    // Id: Vrops Namespace: dedicatedCloud
    public class Vrops {
        
        // Key: state Type: dedicatedCloud.option.StateEnum FullType: dedicatedCloud.option.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_option.StateEnum State { get; set; }//;
        
        // Key: upgrades Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgrades")]
        public System.String[]? Upgrades { get; set; }//;
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public System.String? Url { get; set; }//;
        
        // Key: vROpsPublicIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vROpsPublicIP")]
        public System.String? VROpsPublicIP { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public System.String? Version { get; set; }//;
    }
    
    // Id: VropsOutgoingFlow Namespace: dedicatedCloud
    public class VropsOutgoingFlow {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: outgoingFlowId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("outgoingFlowId")]
        public required System.Int64 OutgoingFlowId { get; set; }//;
        
        // Key: servicePort Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("servicePort")]
        public required System.Int64 ServicePort { get; set; }//;
        
        // Key: state Type: dedicatedCloud.optionAccessNetwork.StateEnum FullType: dedicatedCloud.optionAccessNetwork.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud_optionAccessNetwork.StateEnum State { get; set; }//;
    }
    
    // Id: VsanDatastore Namespace: dedicatedCloud
    public class VsanDatastore {
        
        // Key: clusterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("clusterId")]
        public required System.Int64 ClusterId { get; set; }//;
        
        // Key: connectionState Type: dedicatedCloud.filer.ConnexionStateEnum FullType: dedicatedCloud.filer.ConnexionStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connectionState")]
        public _dedicatedCloud_filer.ConnexionStateEnum? ConnectionState { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public required System.Int64 DatacenterId { get; set; }//;
        
        // Key: datastoreId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datastoreId")]
        public required System.Int64 DatastoreId { get; set; }//;
        
        // Key: datastoreName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datastoreName")]
        public required System.String DatastoreName { get; set; }//;
        
        // Key: spaceFree Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceFree")]
        public System.Double? SpaceFree { get; set; }//;
        
        // Key: spaceProvisioned Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceProvisioned")]
        public System.Double? SpaceProvisioned { get; set; }//;
        
        // Key: spaceUsed Type: double FullType: double
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spaceUsed")]
        public System.Double? SpaceUsed { get; set; }//;
        
        // Key: vmTotal Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmTotal")]
        public System.Int64? VmTotal { get; set; }//;
    }
    
    // Id: ZpoolStockProfile Namespace: dedicatedCloud
    public class ZpoolStockProfile {
        
        // Key: minimumAvailability Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minimumAvailability")]
        public required System.String MinimumAvailability { get; set; }//;
        
        // Key: profile Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("profile")]
        public required System.String Profile { get; set; }//;
        
        // Key: realCount Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("realCount")]
        public required System.Int64 RealCount { get; set; }//;
    }
    
    // Id: compliantRanges Namespace: dedicatedCloud
    public class compliantRanges {
        
        // Key: addons Type: dedicatedCloud.requiredAddon[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("addons")]
        public _dedicatedCloud.requiredAddon[]? Addons { get; set; }//;
        
        // Key: estimateRequired Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("estimateRequired")]
        public required System.Boolean EstimateRequired { get; set; }//;
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: upgradeCode Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgradeCode")]
        public System.String? UpgradeCode { get; set; }//;
        
        // Key: upgradeRequired Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upgradeRequired")]
        public required System.Boolean UpgradeRequired { get; set; }//;
    }
    
    // Id: dedicatedCloud Namespace: dedicatedCloud
    public class dedicatedCloud {
        
        // Key: advancedSecurity Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("advancedSecurity")]
        public required System.Boolean AdvancedSecurity { get; set; }//;
        
        // Key: bandwidth Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bandwidth")]
        public required System.String Bandwidth { get; set; }//;
        
        // Key: billingType Type: dedicatedCloud.BillingTypeEnum FullType: dedicatedCloud.BillingTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("billingType")]
        public required _dedicatedCloud.BillingTypeEnum BillingType { get; set; }//;
        
        // Key: canMigrateToVCD Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canMigrateToVCD")]
        public required System.Boolean CanMigrateToVCD { get; set; }//;
        
        // Key: certifiedInterfaceUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certifiedInterfaceUrl")]
        public required System.String CertifiedInterfaceUrl { get; set; }//;
        
        // Key: commercialRange Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commercialRange")]
        public required System.String CommercialRange { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: generation Type: dedicatedCloud.GenerationEnum FullType: dedicatedCloud.GenerationEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("generation")]
        public required _dedicatedCloud.GenerationEnum Generation { get; set; }//;
        
        // Key: location Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("location")]
        public required System.String Location { get; set; }//;
        
        // Key: managementInterface Type: dedicatedCloud.ManagementInterfaceEnum FullType: dedicatedCloud.ManagementInterfaceEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managementInterface")]
        public required _dedicatedCloud.ManagementInterfaceEnum ManagementInterface { get; set; }//;
        
        // Key: productReference Type: dedicatedCloud.productReferenceEnum FullType: dedicatedCloud.productReferenceEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("productReference")]
        public required _dedicatedCloud.productReferenceEnum ProductReference { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
        
        // Key: servicePackName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("servicePackName")]
        public System.String? ServicePackName { get; set; }//;
        
        // Key: spla Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spla")]
        public required System.Boolean Spla { get; set; }//;
        
        // Key: sslV3 Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sslV3")]
        public System.Boolean? SslV3 { get; set; }//;
        
        // Key: state Type: dedicatedCloud.StateEnum FullType: dedicatedCloud.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.StateEnum State { get; set; }//;
        
        // Key: userAccessPolicy Type: dedicatedCloud.UserAccessPolicyEnum FullType: dedicatedCloud.UserAccessPolicyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userAccessPolicy")]
        public required _dedicatedCloud.UserAccessPolicyEnum UserAccessPolicy { get; set; }//;
        
        // Key: userLimitConcurrentSession Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userLimitConcurrentSession")]
        public required System.Int64 UserLimitConcurrentSession { get; set; }//;
        
        // Key: userLogoutPolicy Type: dedicatedCloud.UserLogoutPolicyEnum FullType: dedicatedCloud.UserLogoutPolicyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userLogoutPolicy")]
        public required _dedicatedCloud.UserLogoutPolicyEnum UserLogoutPolicy { get; set; }//;
        
        // Key: userSessionTimeout Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userSessionTimeout")]
        public required System.Int64 UserSessionTimeout { get; set; }//;
        
        // Key: vScopeUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vScopeUrl")]
        public required System.String VScopeUrl { get; set; }//;
        
        // Key: version Type: dedicatedCloud.Version FullType: dedicatedCloud.Version
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required _dedicatedCloud.Version Version { get; set; }//;
        
        // Key: webInterfaceUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("webInterfaceUrl")]
        public required System.String WebInterfaceUrl { get; set; }//;
    }
    
    // Id: dedicatedCloud Namespace: dedicatedCloud
    public class dedicatedCloudWithIAM {
        
        // Key: advancedSecurity Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("advancedSecurity")]
        public required System.Boolean AdvancedSecurity { get; set; }//;
        
        // Key: bandwidth Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bandwidth")]
        public required System.String Bandwidth { get; set; }//;
        
        // Key: billingType Type: dedicatedCloud.BillingTypeEnum FullType: dedicatedCloud.BillingTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("billingType")]
        public required _dedicatedCloud.BillingTypeEnum BillingType { get; set; }//;
        
        // Key: canMigrateToVCD Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canMigrateToVCD")]
        public required System.Boolean CanMigrateToVCD { get; set; }//;
        
        // Key: certifiedInterfaceUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certifiedInterfaceUrl")]
        public required System.String CertifiedInterfaceUrl { get; set; }//;
        
        // Key: commercialRange Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commercialRange")]
        public required System.String CommercialRange { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: generation Type: dedicatedCloud.GenerationEnum FullType: dedicatedCloud.GenerationEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("generation")]
        public required _dedicatedCloud.GenerationEnum Generation { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: location Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("location")]
        public required System.String Location { get; set; }//;
        
        // Key: managementInterface Type: dedicatedCloud.ManagementInterfaceEnum FullType: dedicatedCloud.ManagementInterfaceEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managementInterface")]
        public required _dedicatedCloud.ManagementInterfaceEnum ManagementInterface { get; set; }//;
        
        // Key: productReference Type: dedicatedCloud.productReferenceEnum FullType: dedicatedCloud.productReferenceEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("productReference")]
        public required _dedicatedCloud.productReferenceEnum ProductReference { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
        
        // Key: servicePackName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("servicePackName")]
        public System.String? ServicePackName { get; set; }//;
        
        // Key: spla Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("spla")]
        public required System.Boolean Spla { get; set; }//;
        
        // Key: sslV3 Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sslV3")]
        public System.Boolean? SslV3 { get; set; }//;
        
        // Key: state Type: dedicatedCloud.StateEnum FullType: dedicatedCloud.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.StateEnum State { get; set; }//;
        
        // Key: userAccessPolicy Type: dedicatedCloud.UserAccessPolicyEnum FullType: dedicatedCloud.UserAccessPolicyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userAccessPolicy")]
        public required _dedicatedCloud.UserAccessPolicyEnum UserAccessPolicy { get; set; }//;
        
        // Key: userLimitConcurrentSession Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userLimitConcurrentSession")]
        public required System.Int64 UserLimitConcurrentSession { get; set; }//;
        
        // Key: userLogoutPolicy Type: dedicatedCloud.UserLogoutPolicyEnum FullType: dedicatedCloud.UserLogoutPolicyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userLogoutPolicy")]
        public required _dedicatedCloud.UserLogoutPolicyEnum UserLogoutPolicy { get; set; }//;
        
        // Key: userSessionTimeout Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userSessionTimeout")]
        public required System.Int64 UserSessionTimeout { get; set; }//;
        
        // Key: vScopeUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vScopeUrl")]
        public required System.String VScopeUrl { get; set; }//;
        
        // Key: version Type: dedicatedCloud.Version FullType: dedicatedCloud.Version
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required _dedicatedCloud.Version Version { get; set; }//;
        
        // Key: webInterfaceUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("webInterfaceUrl")]
        public required System.String WebInterfaceUrl { get; set; }//;
    }
    
    // Id: hostSystemConnectionState Namespace: dedicatedCloud
    public enum hostSystemConnectionState {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connected")]
        connected,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disconnected")]
        disconnected,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("notResponding")]
        notResponding,
    }
    
    // Id: ipUsageEnum Namespace: dedicatedCloud
    public enum ipUsageEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsxt")]
        nsxt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reserved")]
        reserved,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vm")]
        vm,
    }
    
    // Id: ldpKind Namespace: dedicatedCloud
    public class ldpKind {
        
        // Key: additionalReturnedFields Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("additionalReturnedFields")]
        public required System.String[] AdditionalReturnedFields { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public required System.String DisplayName { get; set; }//;
        
        // Key: kindId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kindId")]
        public required System.Guid KindId { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: updatedAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedAt")]
        public required System.DateTime UpdatedAt { get; set; }//;
    }
    
    // Id: ldpSubscription Namespace: dedicatedCloud
    public class ldpSubscription {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: kind Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kind")]
        public required System.String Kind { get; set; }//;
        
        // Key: resource Type: dedicatedCloud.LogSubscriptionResource FullType: dedicatedCloud.LogSubscriptionResource
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resource")]
        public required _dedicatedCloud.LogSubscriptionResource Resource { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
        
        // Key: streamId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("streamId")]
        public required System.Guid StreamId { get; set; }//;
        
        // Key: subscriptionId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subscriptionId")]
        public required System.Guid SubscriptionId { get; set; }//;
        
        // Key: updatedAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedAt")]
        public required System.DateTime UpdatedAt { get; set; }//;
    }
    
    // Id: optionCompatibility Namespace: dedicatedCloud
    public class optionCompatibility {
        
        // Key: newCommercialVersion Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("newCommercialVersion")]
        public required System.String NewCommercialVersion { get; set; }//;
        
        // Key: oldCommercialVersion Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("oldCommercialVersion")]
        public required System.String OldCommercialVersion { get; set; }//;
    }
    
    // Id: passwordPolicy Namespace: dedicatedCloud
    public class passwordPolicy {
        
        // Key: deniedChars Type: string[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deniedChars")]
        public required System.String[] DeniedChars { get; set; }//;
        
        // Key: digitMandatory Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("digitMandatory")]
        public required System.Boolean DigitMandatory { get; set; }//;
        
        // Key: historyCheck Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("historyCheck")]
        public required System.Int64 HistoryCheck { get; set; }//;
        
        // Key: letterMandatory Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("letterMandatory")]
        public required System.Boolean LetterMandatory { get; set; }//;
        
        // Key: lowercaseLetterMandatory Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lowercaseLetterMandatory")]
        public required System.Boolean LowercaseLetterMandatory { get; set; }//;
        
        // Key: maxLength Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxLength")]
        public required System.Int64 MaxLength { get; set; }//;
        
        // Key: minLength Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minLength")]
        public required System.Int64 MinLength { get; set; }//;
        
        // Key: specialMandatory Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("specialMandatory")]
        public required System.Boolean SpecialMandatory { get; set; }//;
        
        // Key: uppercaseLetterMandatory Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uppercaseLetterMandatory")]
        public required System.Boolean UppercaseLetterMandatory { get; set; }//;
        
        // Key: validityPeriod Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validityPeriod")]
        public required System.Int64 ValidityPeriod { get; set; }//;
    }
    
    // Id: productReferenceEnum Namespace: dedicatedCloud
    public enum productReferenceEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("EPCC")]
        EPCC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MBM")]
        MBM,
    }
    
    // Id: releaseEnum Namespace: dedicatedCloud
    public enum releaseEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("major")]
        major,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minor")]
        minor,
    }
    
    // Id: requiredAddon Namespace: dedicatedCloud
    public class requiredAddon {
        
        // Key: planCode Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("planCode")]
        public required System.String PlanCode { get; set; }//;
        
        // Key: quantity Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quantity")]
        public required System.Int64 Quantity { get; set; }//;
    }
    
    // Id: resourceNewPrices Namespace: dedicatedCloud
    public class resourceNewPrices {
        
        // Key: resources Type: dedicatedCloud.resourceNewPricesEntry[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resources")]
        public _dedicatedCloud.resourceNewPricesEntry[]? Resources { get; set; }//;
    }
    
    // Id: resourceNewPricesEntry Namespace: dedicatedCloud
    public class resourceNewPricesEntry {
        
        // Key: billingType Type: dedicatedCloud.ressources.BillingTypeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("billingType")]
        public required _dedicatedCloud_ressources.BillingTypeEnum BillingType { get; set; }//;
        
        // Key: changed Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("changed")]
        public required System.Boolean Changed { get; set; }//;
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: newPrice Type: order.Price FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("newPrice")]
        public required _order.Price NewPrice { get; set; }//;
        
        // Key: oldPrice Type: order.Price FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("oldPrice")]
        public required _order.Price OldPrice { get; set; }//;
        
        // Key: resourceType Type: dedicatedCloud.ressources.ResourceTypeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resourceType")]
        public required _dedicatedCloud_ressources.ResourceTypeEnum ResourceType { get; set; }//;
    }
    
    // Id: servicePackEnum Namespace: dedicatedCloud
    public enum servicePackEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("default")]
        @default,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("default-nsxt")]
        default_nsxt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hds")]
        hds,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hds-nsxt")]
        hds_nsxt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hipaa")]
        hipaa,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("legacy")]
        legacy,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsx")]
        nsx,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsx-and-vrops")]
        nsx_and_vrops,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nsxt")]
        nsxt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pcidss")]
        pcidss,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pcidss-nsxt")]
        pcidss_nsxt,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vrops")]
        vrops,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vrops-nsxt")]
        vrops_nsxt,
    }
    
    // Id: servicePackStateEnum Namespace: dedicatedCloud
    public enum servicePackStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activating")]
        activating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingForCustomer")]
        waitingForCustomer,
    }
    
    // Id: servicePackStatus Namespace: dedicatedCloud
    public class servicePackStatus {
        
        // Key: name Type: dedicatedCloud.servicePackEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required _dedicatedCloud.servicePackEnum Name { get; set; }//;
        
        // Key: state Type: dedicatedCloud.servicePackStateEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.servicePackStateEnum State { get; set; }//;
    }
    
    // Id: twoFAWhitelist Namespace: dedicatedCloud
    public class twoFAWhitelist {
        
        // Key: cidrNetmask Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cidrNetmask")]
        public required System.Int64 CidrNetmask { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: state Type: dedicatedCloud.TwoFAWhitelistStateEnum FullType: dedicatedCloud.TwoFAWhitelistStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _dedicatedCloud.TwoFAWhitelistStateEnum State { get; set; }//;
    }
    
    // Id: vcenter Namespace: dedicatedCloud
    public class vcenter {
        
        // Key: currentVersion Type: dedicatedCloud.Version FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("currentVersion")]
        public required _dedicatedCloud.Version CurrentVersion { get; set; }//;
        
        // Key: lastMajor Type: dedicatedCloud.Version FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastMajor")]
        public required _dedicatedCloud.Version LastMajor { get; set; }//;
        
        // Key: lastMinor Type: dedicatedCloud.Version FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastMinor")]
        public required _dedicatedCloud.Version LastMinor { get; set; }//;
    }
    
    // Id: virtualDeviceConnectInfoStatus Namespace: dedicatedCloud
    public enum virtualDeviceConnectInfoStatus {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("recoverableError")]
        recoverableError,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unrecoverableError")]
        unrecoverableError,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("untried")]
        untried,
    }
    
    // Id: virtualMachineCdrom Namespace: dedicatedCloud
    public class virtualMachineCdrom {
        
        // Key: connected Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connected")]
        public System.Boolean? Connected { get; set; }//;
        
        // Key: iso Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iso")]
        public System.String? Iso { get; set; }//;
    }
    
    // Id: virtualMachineFaultToleranceState Namespace: dedicatedCloud
    public enum virtualMachineFaultToleranceState {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("needSecondary")]
        needSecondary,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("notConfigured")]
        notConfigured,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("running")]
        running,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("starting")]
        starting,
    }
    
    // Id: virtualMachineLicensingSummary Namespace: dedicatedCloud
    public class virtualMachineLicensingSummary {
        
        // Key: guestOsFamily Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("guestOsFamily")]
        public System.String? GuestOsFamily { get; set; }//;
        
        // Key: license Type: dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("license")]
        public required _dedicatedCloud_spla.KmsLicenseIncludingLegacyEnum License { get; set; }//;
        
        // Key: moRef Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("moRef")]
        public required System.String MoRef { get; set; }//;
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: vmId Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vmId")]
        public required System.Int64 VmId { get; set; }//;
    }
    
    // Id: virtualMachinePowerState Namespace: dedicatedCloud
    public enum virtualMachinePowerState {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleted")]
        deleted,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("poweredOff")]
        poweredOff,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("poweredOn")]
        poweredOn,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspended")]
        suspended,
    }
    
    // Id: vmFiler Namespace: dedicatedCloud
    public class vmFiler {
        
        // Key: committed Type: double FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("committed")]
        public required System.Double Committed { get; set; }//;
        
        // Key: disks Type: dedicatedCloud.vmFilerDisk[] FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disks")]
        public required _dedicatedCloud.vmFilerDisk[] Disks { get; set; }//;
        
        // Key: name Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: vmFilerDisk Namespace: dedicatedCloud
    public class vmFilerDisk {
        
        // Key: capacity Type: double FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capacity")]
        public required System.Double Capacity { get; set; }//;
        
        // Key: id Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.String Id { get; set; }//;
    }
    
    // Id: vmNetwork Namespace: dedicatedCloud
    public class vmNetwork {
        
        // Key: allowGuestControl Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowGuestControl")]
        public required System.Boolean AllowGuestControl { get; set; }//;
        
        // Key: backing Type: dedicatedCloud.vmNetworkBacking FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backing")]
        public required _dedicatedCloud.vmNetworkBacking Backing { get; set; }//;
        
        // Key: connected Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("connected")]
        public required System.Boolean Connected { get; set; }//;
        
        // Key: controler Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("controler")]
        public required System.String Controler { get; set; }//;
        
        // Key: label Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("label")]
        public required System.String Label { get; set; }//;
        
        // Key: macAddress Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("macAddress")]
        public required System.String MacAddress { get; set; }//;
        
        // Key: startConnected Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startConnected")]
        public required System.Boolean StartConnected { get; set; }//;
        
        // Key: status Type: dedicatedCloud.virtualDeviceConnectInfoStatus FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _dedicatedCloud.virtualDeviceConnectInfoStatus Status { get; set; }//;
    }
    
    // Id: vmNetworkBacking Namespace: dedicatedCloud
    public class vmNetworkBacking {
        
        // Key: carpState Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("carpState")]
        public System.String? CarpState { get; set; }//;
        
        // Key: deviceName Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deviceName")]
        public System.String? DeviceName { get; set; }//;
        
        // Key: portGroupKey Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portGroupKey")]
        public System.String? PortGroupKey { get; set; }//;
        
        // Key: portGroupName Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portGroupName")]
        public System.String? PortGroupName { get; set; }//;
        
        // Key: portKey Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portKey")]
        public System.String? PortKey { get; set; }//;
        
        // Key: portKeySecurityPolicy Type: dedicatedCloud.DvsSecurityPolicy FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portKeySecurityPolicy")]
        public _dedicatedCloud.DvsSecurityPolicy? PortKeySecurityPolicy { get; set; }//;
        
        // Key: switchUuid Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("switchUuid")]
        public System.String? SwitchUuid { get; set; }//;
        
        // Key: type Type: dedicatedCloud.vmNetworkBackingTypeEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _dedicatedCloud.vmNetworkBackingTypeEnum Type { get; set; }//;
        
        // Key: useAutoDetect Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("useAutoDetect")]
        public System.Boolean? UseAutoDetect { get; set; }//;
        
        // Key: valueMoref Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("valueMoref")]
        public System.String? ValueMoref { get; set; }//;
    }
    
    // Id: vmNetworkBackingTypeEnum Namespace: dedicatedCloud
    public enum vmNetworkBackingTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DVS")]
        DVS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("VSS")]
        VSS,
    }
    
    // Id: vmwareBoolPolicy Namespace: dedicatedCloud
    public class vmwareBoolPolicy {
        
        // Key: inherited Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("inherited")]
        public required System.Boolean Inherited { get; set; }//;
        
        // Key: value Type: boolean FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public required System.Boolean Value { get; set; }//;
    }
    
    // Id: AdditionalBandwidthEnum Namespace: dedicatedCloud
    public enum AdditionalBandwidthEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("1500")]
        _1500,
    }
    
    // Id: OrderableIpBlockRangeEnum Namespace: dedicatedCloud
    public enum OrderableIpBlockRangeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("24")]
        _24,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("25")]
        _25,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("26")]
        _26,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("27")]
        _27,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("28")]
        _28,
    }
}
