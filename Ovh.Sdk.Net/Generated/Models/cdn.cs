//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _cdn {
    
    
    // Id: DomainStatisticsNameEnum Namespace: cdn
    public enum DomainStatisticsNameEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hit")]
        hit,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("miss")]
        miss,
    }
    
    // Id: DomainStatisticsPeriodEnum Namespace: cdn
    public enum DomainStatisticsPeriodEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("day")]
        day,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("month")]
        month,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("week")]
        week,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("year")]
        year,
    }
    
    // Id: DomainStatisticsUnitEnum Namespace: cdn
    public enum DomainStatisticsUnitEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("req/min")]
        req_min,
    }
    
    // Id: DomainStatusEnum Namespace: cdn
    public enum DomainStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabling")]
        disabling,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("refreshing")]
        refreshing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to_delete")]
        to_delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to_disable")]
        to_disable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to_refresh")]
        to_refresh,
    }
    
    // Id: OperationFunctionEnum Namespace: cdn
    public enum OperationFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("analytics_delete")]
        analytics_delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("analytics_recompute")]
        analytics_recompute,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain_delete")]
        domain_delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain_disable")]
        domain_disable,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain_purge")]
        domain_purge,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain_refresh")]
        domain_refresh,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("service_install")]
        service_install,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ssl_delete")]
        ssl_delete,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ssl_install")]
        ssl_install,
    }
    
    // Id: OperationOfferEnum Namespace: cdn
    public enum OperationOfferEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("advanced")]
        advanced,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("basic")]
        basic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("security")]
        security,
    }
    
    // Id: OperationStatusEnum Namespace: cdn
    public enum OperationStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
    
    // Id: OptionCategoryEnum Namespace: cdn
    public enum OptionCategoryEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cache")]
        cache,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("performance")]
        performance,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("security")]
        security,
    }
    
    // Id: OptionConfigParamTypeEnum Namespace: cdn
    public enum OptionConfigParamTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bool")]
        @bool,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("int")]
        @int,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("list")]
        list,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("str")]
        str,
    }
    
    // Id: OptionPatternTypeEnum Namespace: cdn
    public enum OptionPatternTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extension")]
        extension,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("folder")]
        folder,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("regex")]
        regex,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uri")]
        uri,
    }
    
    // Id: OptionQueryParametersEnum Namespace: cdn
    public enum OptionQueryParametersEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ignored")]
        ignored,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sorted")]
        sorted,
    }
    
    // Id: OptionTypeEnum Namespace: cdn
    public enum OptionTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("brotli")]
        brotli,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cache_rule")]
        cache_rule,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cors")]
        cors,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("devmode")]
        devmode,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("geo_headers")]
        geo_headers,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hsts")]
        hsts,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("https_redirect")]
        https_redirect,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mixed_content")]
        mixed_content,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mobile_redirect")]
        mobile_redirect,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("prefetch")]
        prefetch,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("prewarm")]
        prewarm,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("querystring")]
        querystring,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waf")]
        waf,
    }
    
    // Id: OptionTypePostEnum Namespace: cdn
    public enum OptionTypePostEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cache_rule")]
        cache_rule,
    }
    
    // Id: PurgeTypeEnum Namespace: cdn
    public enum PurgeTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extension")]
        extension,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("folder")]
        folder,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("regex")]
        regex,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uri")]
        uri,
    }
    
    // Id: availableOptions Namespace: cdn
    public class availableOptions {
        
        // Key: category Type: cdn.OptionCategoryEnum FullType: cdn.OptionCategoryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public _cdn.OptionCategoryEnum? Category { get; set; }//;
        
        // Key: config Type: cdn.availableOptions.config FullType: cdn.availableOptions.config
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("config")]
        public _cdn_availableOptions.config? Config { get; set; }//;
        
        // Key: maxItems Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxItems")]
        public required System.Int64 MaxItems { get; set; }//;
        
        // Key: type Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required System.String Type { get; set; }//;
    }
    
    // Id: domain Namespace: cdn
    public class domain {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public required System.DateTime CreationDate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: needRefresh Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("needRefresh")]
        public required System.Boolean NeedRefresh { get; set; }//;
        
        // Key: status Type: cdn.DomainStatusEnum FullType: cdn.DomainStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cdn.DomainStatusEnum Status { get; set; }//;
        
        // Key: updatedDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedDate")]
        public required System.DateTime UpdatedDate { get; set; }//;
    }
    
    // Id: logs Namespace: cdn
    public class logs {
        
        // Key: url Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public required System.String Url { get; set; }//;
        
        // Key: validity Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validity")]
        public required System.DateTime Validity { get; set; }//;
    }
    
    // Id: operation Namespace: cdn
    public class operation {
        
        // Key: comment Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comment")]
        public System.String? Comment { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public required System.DateTime CreationDate { get; set; }//;
        
        // Key: function Type: cdn.OperationFunctionEnum FullType: cdn.OperationFunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public required _cdn.OperationFunctionEnum Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: parameter Type: cdn.operation.parameter FullType: cdn.operation.parameter
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("parameter")]
        public required _cdn_operation.parameter Parameter { get; set; }//;
        
        // Key: service Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("service")]
        public required System.String Service { get; set; }//;
        
        // Key: status Type: cdn.OperationStatusEnum FullType: cdn.OperationStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cdn.OperationStatusEnum Status { get; set; }//;
        
        // Key: todoDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todoDate")]
        public required System.DateTime TodoDate { get; set; }//;
        
        // Key: updatedDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedDate")]
        public required System.DateTime UpdatedDate { get; set; }//;
    }
}
