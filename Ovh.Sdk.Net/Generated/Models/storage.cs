//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _storage {
    
    
    // Id: NetAppNetwork Namespace: storage
    public class NetAppNetwork {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: status Type: storage.NetAppNetworkStatusEnum FullType: storage.NetAppNetworkStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _storage.NetAppNetworkStatusEnum? Status { get; set; }//;
        
        // Key: vRackServicesURN Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vRackServicesURN")]
        public System.String? VRackServicesURN { get; set; }//;
    }
    
    // Id: NetAppNetworkStatusEnum Namespace: storage
    public enum NetAppNetworkStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("associated")]
        associated,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("associating")]
        associating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dissociating")]
        dissociating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("to_configure")]
        to_configure,
    }
    
    // Id: NetAppService Namespace: storage
    public class NetAppService {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: performanceLevel Type: storage.NetAppServicePerformanceLevelEnum FullType: storage.NetAppServicePerformanceLevelEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("performanceLevel")]
        public required _storage.NetAppServicePerformanceLevelEnum PerformanceLevel { get; set; }//;
        
        // Key: product Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("product")]
        public required System.String Product { get; set; }//;
        
        // Key: quota Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public required System.Int64 Quota { get; set; }//;
        
        // Key: region Type: storage.RegionEnum FullType: storage.RegionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public required _storage.RegionEnum Region { get; set; }//;
        
        // Key: status Type: storage.NetAppServiceStatusEnum FullType: storage.NetAppServiceStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _storage.NetAppServiceStatusEnum Status { get; set; }//;
    }
    
    // Id: NetAppServicePerformanceLevelEnum Namespace: storage
    public enum NetAppServicePerformanceLevelEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("premium")]
        premium,
    }
    
    // Id: NetAppServiceStatusEnum Namespace: storage
    public enum NetAppServiceStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleted")]
        deleted,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reopening")]
        reopening,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("running")]
        running,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspended")]
        suspended,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("suspending")]
        suspending,
    }
    
    // Id: NetAppServiceUpdate Namespace: storage
    public class NetAppServiceUpdate {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
    }
    
    // Id: NetAppService Namespace: storage
    public class NetAppServiceWithIAM {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: performanceLevel Type: storage.NetAppServicePerformanceLevelEnum FullType: storage.NetAppServicePerformanceLevelEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("performanceLevel")]
        public required _storage.NetAppServicePerformanceLevelEnum PerformanceLevel { get; set; }//;
        
        // Key: product Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("product")]
        public required System.String Product { get; set; }//;
        
        // Key: quota Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public required System.Int64 Quota { get; set; }//;
        
        // Key: region Type: storage.RegionEnum FullType: storage.RegionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public required _storage.RegionEnum Region { get; set; }//;
        
        // Key: status Type: storage.NetAppServiceStatusEnum FullType: storage.NetAppServiceStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _storage.NetAppServiceStatusEnum Status { get; set; }//;
    }
    
    // Id: NetAppShare Namespace: storage
    public class NetAppShare {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime? CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: protocol Type: storage.ProtocolEnum FullType: storage.ProtocolEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("protocol")]
        public _storage.ProtocolEnum? Protocol { get; set; }//;
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public System.Int64? Size { get; set; }//;
        
        // Key: status Type: storage.NetAppShareStatusEnum FullType: storage.NetAppShareStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _storage.NetAppShareStatusEnum? Status { get; set; }//;
    }
    
    // Id: NetAppShareACLPermissionEnum Namespace: storage
    public enum NetAppShareACLPermissionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ro")]
        ro,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rw")]
        rw,
    }
    
    // Id: NetAppShareACLRule Namespace: storage
    public class NetAppShareACLRule {
        
        // Key: accessLevel Type: storage.NetAppShareACLPermissionEnum FullType: storage.NetAppShareACLPermissionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessLevel")]
        public _storage.NetAppShareACLPermissionEnum? AccessLevel { get; set; }//;
        
        // Key: accessTo Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessTo")]
        public System.String? AccessTo { get; set; }//;
        
        // Key: accessType Type: storage.NetAppShareACLTypeEnum FullType: storage.NetAppShareACLTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessType")]
        public _storage.NetAppShareACLTypeEnum? AccessType { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime? CreatedAt { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: status Type: storage.NetAppShareACLStatusEnum FullType: storage.NetAppShareACLStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _storage.NetAppShareACLStatusEnum? Status { get; set; }//;
    }
    
    // Id: NetAppShareACLStatusEnum Namespace: storage
    public enum NetAppShareACLStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("applying")]
        applying,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("denying")]
        denying,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("queued_to_apply")]
        queued_to_apply,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("queued_to_deny")]
        queued_to_deny,
    }
    
    // Id: NetAppShareACLTypeEnum Namespace: storage
    public enum NetAppShareACLTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        ip,
    }
    
    // Id: NetAppShareAccessPath Namespace: storage
    public class NetAppShareAccessPath {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: path Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("path")]
        public required System.String Path { get; set; }//;
        
        // Key: preferred Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("preferred")]
        public required System.Boolean Preferred { get; set; }//;
    }
    
    // Id: NetAppShareExtendOrShrink Namespace: storage
    public class NetAppShareExtendOrShrink {
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public System.Int64? Size { get; set; }//;
    }
    
    // Id: NetAppShareRevertToSnapshot Namespace: storage
    public class NetAppShareRevertToSnapshot {
        
        // Key: snapshotID Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshotID")]
        public required System.Guid SnapshotID { get; set; }//;
    }
    
    // Id: NetAppShareSnapshot Namespace: storage
    public class NetAppShareSnapshot {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime? CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: path Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("path")]
        public System.String? Path { get; set; }//;
        
        // Key: status Type: storage.NetAppSnapshotStatusEnum FullType: storage.NetAppSnapshotStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _storage.NetAppSnapshotStatusEnum? Status { get; set; }//;
        
        // Key: type Type: storage.NetAppSnapshotTypeEnum FullType: storage.NetAppSnapshotTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _storage.NetAppSnapshotTypeEnum? Type { get; set; }//;
    }
    
    // Id: NetAppShareSnapshotPolicy Namespace: storage
    public class NetAppShareSnapshotPolicy {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: status Type: storage.NetAppShareSnapshotPolicyStatusEnum FullType: storage.NetAppShareSnapshotPolicyStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _storage.NetAppShareSnapshotPolicyStatusEnum Status { get; set; }//;
    }
    
    // Id: NetAppShareSnapshotPolicyStatusEnum Namespace: storage
    public enum NetAppShareSnapshotPolicyStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
    }
    
    // Id: NetAppShareSnapshotPolicyUpdate Namespace: storage
    public class NetAppShareSnapshotPolicyUpdate {
        
        // Key: snapshotPolicyID Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshotPolicyID")]
        public required System.Guid SnapshotPolicyID { get; set; }//;
    }
    
    // Id: NetAppShareSnapshotReserve Namespace: storage
    public class NetAppShareSnapshotReserve {
        
        // Key: percent Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("percent")]
        public required System.Int64 Percent { get; set; }//;
        
        // Key: status Type: storage.NetAppShareSnapshotReserveStatusEnum FullType: storage.NetAppShareSnapshotReserveStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _storage.NetAppShareSnapshotReserveStatusEnum Status { get; set; }//;
    }
    
    // Id: NetAppShareSnapshotReserveStatusEnum Namespace: storage
    public enum NetAppShareSnapshotReserveStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
    }
    
    // Id: NetAppShareSnapshotReserveUpdate Namespace: storage
    public class NetAppShareSnapshotReserveUpdate {
        
        // Key: percent Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("percent")]
        public required System.Int64 Percent { get; set; }//;
    }
    
    // Id: NetAppShareSnapshotUpdate Namespace: storage
    public class NetAppShareSnapshotUpdate {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
    }
    
    // Id: NetAppShareStatusEnum Namespace: storage
    public enum NetAppShareStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating_from_snapshot")]
        creating_from_snapshot,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleted")]
        deleted,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error_deleting")]
        error_deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extending")]
        extending,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extending_error")]
        extending_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("inactive")]
        inactive,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manage_error")]
        manage_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manage_starting")]
        manage_starting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating")]
        migrating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("migrating_to")]
        migrating_to,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replication_change")]
        replication_change,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reverting")]
        reverting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reverting_error")]
        reverting_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("shrinking")]
        shrinking,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("shrinking_error")]
        shrinking_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("shrinking_possible_data_loss_error")]
        shrinking_possible_data_loss_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unmanage_error")]
        unmanage_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unmanage_starting")]
        unmanage_starting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unmanaged")]
        unmanaged,
    }
    
    // Id: NetAppShareUpdate Namespace: storage
    public class NetAppShareUpdate {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
    }
    
    // Id: NetAppSnapshotPolicy Namespace: storage
    public class NetAppSnapshotPolicy {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime? CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: isDefault Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isDefault")]
        public System.Boolean? IsDefault { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
        
        // Key: rules Type: storage.NetAppSnapshotPolicyRule[] FullType: storage.NetAppSnapshotPolicyRule[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rules")]
        public _storage.NetAppSnapshotPolicyRule[]? Rules { get; set; }//;
        
        // Key: status Type: storage.NetAppSnapshotPolicyStatusEnum FullType: storage.NetAppSnapshotPolicyStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _storage.NetAppSnapshotPolicyStatusEnum? Status { get; set; }//;
    }
    
    // Id: NetAppSnapshotPolicyRule Namespace: storage
    public class NetAppSnapshotPolicyRule {
        
        // Key: copies Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("copies")]
        public System.Int64? Copies { get; set; }//;
        
        // Key: prefix Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("prefix")]
        public System.String? Prefix { get; set; }//;
        
        // Key: schedule Type: storage.NetAppSnapshotPolicySchedule FullType: storage.NetAppSnapshotPolicySchedule
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("schedule")]
        public _storage.NetAppSnapshotPolicySchedule? Schedule { get; set; }//;
    }
    
    // Id: NetAppSnapshotPolicySchedule Namespace: storage
    public class NetAppSnapshotPolicySchedule {
        
        // Key: days Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("days")]
        public System.Int64[]? Days { get; set; }//;
        
        // Key: hours Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hours")]
        public System.Int64[]? Hours { get; set; }//;
        
        // Key: minutes Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minutes")]
        public required System.Int64[] Minutes { get; set; }//;
        
        // Key: months Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("months")]
        public System.Int64[]? Months { get; set; }//;
        
        // Key: weekdays Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("weekdays")]
        public System.Int64[]? Weekdays { get; set; }//;
    }
    
    // Id: NetAppSnapshotPolicyStatusEnum Namespace: storage
    public enum NetAppSnapshotPolicyStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
    }
    
    // Id: NetAppSnapshotPolicyUpdate Namespace: storage
    public class NetAppSnapshotPolicyUpdate {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public System.String? Name { get; set; }//;
    }
    
    // Id: NetAppSnapshotStatusEnum Namespace: storage
    public enum NetAppSnapshotStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error_deleting")]
        error_deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manage_error")]
        manage_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manage_starting")]
        manage_starting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restoring")]
        restoring,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unmanage_error")]
        unmanage_error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unmanage_starting")]
        unmanage_starting,
    }
    
    // Id: NetAppSnapshotTypeEnum Namespace: storage
    public enum NetAppSnapshotTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("automatic")]
        automatic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manual")]
        manual,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("system")]
        system,
    }
    
    // Id: ProtocolEnum Namespace: storage
    public enum ProtocolEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NFS")]
        NFS,
    }
    
    // Id: RegionEnum Namespace: storage
    public enum RegionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("BHS")]
        BHS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("GRA")]
        GRA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("LIM")]
        LIM,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("RBX")]
        RBX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SBG")]
        SBG,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ca-east-bhs")]
        ca_east_bhs,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("eu-west-gra")]
        eu_west_gra,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("eu-west-lim")]
        eu_west_lim,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("eu-west-rbx")]
        eu_west_rbx,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("eu-west-sbg")]
        eu_west_sbg,
    }
}
