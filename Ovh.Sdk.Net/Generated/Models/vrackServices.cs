//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _vrackServices {
    
    
    // Id: EligibleManagedService Namespace: vrackServices
    public class EligibleManagedService {
        
        // Key: managedServiceType Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managedServiceType")]
        public string ManagedServiceType { get; set; }//;
        
        // Key: managedServiceURNs Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managedServiceURNs")]
        public string[] ManagedServiceURNs { get; set; }//;
    }
    
    // Id: Endpoint Namespace: vrackServices
    public class Endpoint {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
    }
    
    // Id: ProductStatusEnum Namespace: vrackServices
    public enum ProductStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ACTIVE")]
        ACTIVE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DRAFT")]
        DRAFT,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SUSPENDED")]
        SUSPENDED,
    }
    
    // Id: Region Namespace: vrackServices
    public class Region {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
    }
    
    // Id: ResourceStatusEnum Namespace: vrackServices
    public enum ResourceStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CREATING")]
        CREATING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DELETING")]
        DELETING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ERROR")]
        ERROR,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("READY")]
        READY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UPDATING")]
        UPDATING,
    }
    
    // Id: ServiceEndpoint Namespace: vrackServices
    public class ServiceEndpoint {
        
        // Key: endpoints Type: vrackServices.Endpoint[] FullType: vrackServices.Endpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endpoints")]
        public _vrackServices.Endpoint[] Endpoints { get; set; }//;
        
        // Key: managedServiceURN Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managedServiceURN")]
        public string ManagedServiceURN { get; set; }//;
    }
    
    // Id: ServiceRange Namespace: vrackServices
    public class ServiceRange {
        
        // Key: cidr Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cidr")]
        public string Cidr { get; set; }//;
        
        // Key: remainingIps Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("remainingIps")]
        public long RemainingIps { get; set; }//;
        
        // Key: reservedIps Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reservedIps")]
        public long ReservedIps { get; set; }//;
        
        // Key: usedIps Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usedIps")]
        public long UsedIps { get; set; }//;
    }
    
    // Id: Subnet Namespace: vrackServices
    public class Subnet {
        
        // Key: cidr Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cidr")]
        public string Cidr { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: serviceEndpoints Type: vrackServices.ServiceEndpoint[] FullType: vrackServices.ServiceEndpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceEndpoints")]
        public _vrackServices.ServiceEndpoint[] ServiceEndpoints { get; set; }//;
        
        // Key: serviceRange Type: vrackServices.ServiceRange FullType: vrackServices.ServiceRange
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceRange")]
        public _vrackServices.ServiceRange ServiceRange { get; set; }//;
        
        // Key: vlan Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlan")]
        public System.Int64? Vlan { get; set; }//;
    }
    
    // Id: TargetServiceEndpoint Namespace: vrackServices
    public class TargetServiceEndpoint {
        
        // Key: managedServiceURN Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("managedServiceURN")]
        public string ManagedServiceURN { get; set; }//;
    }
    
    // Id: TargetServiceRange Namespace: vrackServices
    public class TargetServiceRange {
        
        // Key: cidr Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cidr")]
        public string Cidr { get; set; }//;
    }
    
    // Id: TargetSubnet Namespace: vrackServices
    public class TargetSubnet {
        
        // Key: cidr Type: ipv4Block FullType: ipv4Block
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cidr")]
        public string Cidr { get; set; }//;
        
        // Key: displayName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("displayName")]
        public System.String? DisplayName { get; set; }//;
        
        // Key: serviceEndpoints Type: vrackServices.TargetServiceEndpoint[] FullType: vrackServices.TargetServiceEndpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceEndpoints")]
        public _vrackServices.TargetServiceEndpoint[] ServiceEndpoints { get; set; }//;
        
        // Key: serviceRange Type: vrackServices.TargetServiceRange FullType: vrackServices.TargetServiceRange
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceRange")]
        public _vrackServices.TargetServiceRange ServiceRange { get; set; }//;
        
        // Key: vlan Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vlan")]
        public System.Int64? Vlan { get; set; }//;
    }
    
    // Id: VrackServices Namespace: vrackServices
    public class VrackServices {
        
        // Key: checksum Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checksum")]
        public string Checksum { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime CreatedAt { get; set; }//;
        
        // Key: currentState Type: vrackServices.VrackServicesCurrentState FullType: vrackServices.VrackServicesCurrentState
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("currentState")]
        public _vrackServices.VrackServicesCurrentState CurrentState { get; set; }//;
        
        // Key: currentTasks Type: common.CurrentTask[] FullType: common.CurrentTask[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("currentTasks")]
        public _common.CurrentTask[]? CurrentTasks { get; set; }//;
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public string Id { get; set; }//;
        
        // Key: resourceStatus Type: vrackServices.ResourceStatusEnum FullType: vrackServices.ResourceStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resourceStatus")]
        public _vrackServices.ResourceStatusEnum ResourceStatus { get; set; }//;
        
        // Key: targetSpec Type: vrackServices.VrackServicesTargetSpec FullType: vrackServices.VrackServicesTargetSpec
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("targetSpec")]
        public _vrackServices.VrackServicesTargetSpec TargetSpec { get; set; }//;
        
        // Key: updatedAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedAt")]
        public System.DateTime UpdatedAt { get; set; }//;
    }
    
    // Id: VrackServicesCurrentState Namespace: vrackServices
    public class VrackServicesCurrentState {
        
        // Key: productStatus Type: vrackServices.ProductStatusEnum FullType: vrackServices.ProductStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("productStatus")]
        public _vrackServices.ProductStatusEnum ProductStatus { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public string Region { get; set; }//;
        
        // Key: subnets Type: vrackServices.Subnet[] FullType: vrackServices.Subnet[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnets")]
        public _vrackServices.Subnet[] Subnets { get; set; }//;
        
        // Key: vrackId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("vrackId")]
        public System.String? VrackId { get; set; }//;
    }
    
    // Id: VrackServicesInput Namespace: vrackServices
    public class VrackServicesInput {
        
        // Key: checksum Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checksum")]
        public string Checksum { get; set; }//;
        
        // Key: targetSpec Type: vrackServices.VrackServicesTargetSpec FullType: vrackServices.VrackServicesTargetSpec
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("targetSpec")]
        public _vrackServices.VrackServicesTargetSpec TargetSpec { get; set; }//;
    }
    
    // Id: VrackServicesTargetSpec Namespace: vrackServices
    public class VrackServicesTargetSpec {
        
        // Key: subnets Type: vrackServices.TargetSubnet[] FullType: vrackServices.TargetSubnet[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnets")]
        public _vrackServices.TargetSubnet[] Subnets { get; set; }//;
    }
    
    // Id: VrackServices Namespace: vrackServices
    public class VrackServicesWithIAM {
        
        // Key: checksum Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checksum")]
        public string Checksum { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public System.DateTime CreatedAt { get; set; }//;
        
        // Key: currentState Type: vrackServices.VrackServicesCurrentState FullType: vrackServices.VrackServicesCurrentState
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("currentState")]
        public _vrackServices.VrackServicesCurrentState CurrentState { get; set; }//;
        
        // Key: currentTasks Type: common.CurrentTask[] FullType: common.CurrentTask[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("currentTasks")]
        public _common.CurrentTask[]? CurrentTasks { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: id Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public string Id { get; set; }//;
        
        // Key: resourceStatus Type: vrackServices.ResourceStatusEnum FullType: vrackServices.ResourceStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resourceStatus")]
        public _vrackServices.ResourceStatusEnum ResourceStatus { get; set; }//;
        
        // Key: targetSpec Type: vrackServices.VrackServicesTargetSpec FullType: vrackServices.VrackServicesTargetSpec
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("targetSpec")]
        public _vrackServices.VrackServicesTargetSpec TargetSpec { get; set; }//;
        
        // Key: updatedAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updatedAt")]
        public System.DateTime UpdatedAt { get; set; }//;
    }
}
