//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _cloud_project_database {
    
    
    // Id: Availability Namespace: cloud.project.database
    public class Availability {
        
        // Key: backup Type: cloud.project.database.BackupTypeEnum FullType: cloud.project.database.BackupTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backup")]
        public required _cloud_project_database.BackupTypeEnum Backup { get; set; }//;
        
        // Key: backupRetentionDays Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupRetentionDays")]
        public required System.Int64 BackupRetentionDays { get; set; }//;
        
        // Key: backups Type: cloud.project.database.availability.Backups FullType: cloud.project.database.availability.Backups
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backups")]
        public required _cloud_project_database_availability.Backups Backups { get; set; }//;
        
        // Key: category Type: cloud.project.database.engine.CategoryEnum FullType: cloud.project.database.engine.CategoryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public required _cloud_project_database_engine.CategoryEnum Category { get; set; }//;
        
        // Key: default Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("default")]
        public required System.Boolean @default { get; set; }//;
        
        // Key: endOfLife Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endOfLife")]
        public System.DateOnly? EndOfLife { get; set; }//;
        
        // Key: engine Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("engine")]
        public required System.String Engine { get; set; }//;
        
        // Key: flavor Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flavor")]
        public required System.String Flavor { get; set; }//;
        
        // Key: lifecycle Type: cloud.project.database.availability.Lifecycle FullType: cloud.project.database.availability.Lifecycle
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lifecycle")]
        public required _cloud_project_database_availability.Lifecycle Lifecycle { get; set; }//;
        
        // Key: maxDiskSize Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxDiskSize")]
        public required System.Int64 MaxDiskSize { get; set; }//;
        
        // Key: maxNodeNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxNodeNumber")]
        public required System.Int64 MaxNodeNumber { get; set; }//;
        
        // Key: minDiskSize Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minDiskSize")]
        public required System.Int64 MinDiskSize { get; set; }//;
        
        // Key: minNodeNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minNodeNumber")]
        public required System.Int64 MinNodeNumber { get; set; }//;
        
        // Key: network Type: cloud.project.database.NetworkTypeEnum FullType: cloud.project.database.NetworkTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public required _cloud_project_database.NetworkTypeEnum Network { get; set; }//;
        
        // Key: plan Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plan")]
        public required System.String Plan { get; set; }//;
        
        // Key: planCode Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("planCode")]
        public required System.String PlanCode { get; set; }//;
        
        // Key: planCodeStorage Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("planCodeStorage")]
        public required System.String PlanCodeStorage { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public required System.String Region { get; set; }//;
        
        // Key: specifications Type: cloud.project.database.availability.Specifications FullType: cloud.project.database.availability.Specifications
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("specifications")]
        public required _cloud_project_database_availability.Specifications Specifications { get; set; }//;
        
        // Key: startDate Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startDate")]
        public required System.DateOnly StartDate { get; set; }//;
        
        // Key: status Type: cloud.project.database.availability.StatusEnum FullType: cloud.project.database.availability.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database_availability.StatusEnum Status { get; set; }//;
        
        // Key: stepDiskSize Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("stepDiskSize")]
        public required System.Int64 StepDiskSize { get; set; }//;
        
        // Key: upstreamEndOfLife Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("upstreamEndOfLife")]
        public System.DateOnly? UpstreamEndOfLife { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: Backup Namespace: cloud.project.database
    public class Backup {
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public required System.String Region { get; set; }//;
        
        // Key: regions Type: cloud.project.database.backup.Region[] FullType: cloud.project.database.backup.Region[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("regions")]
        public required _cloud_project_database_backup.Region[] Regions { get; set; }//;
        
        // Key: size Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required _complexType.UnitAndValue<long> Size { get; set; }//;
        
        // Key: status Type: cloud.project.database.StatusEnum FullType: cloud.project.database.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database.StatusEnum Status { get; set; }//;
        
        // Key: type Type: cloud.project.database.BackupTypeEnum FullType: cloud.project.database.BackupTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _cloud_project_database.BackupTypeEnum Type { get; set; }//;
    }
    
    // Id: BackupTypeEnum Namespace: cloud.project.database
    public enum BackupTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("automatic")]
        automatic,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("manual")]
        manual,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("none")]
        none,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pitr")]
        pitr,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshot")]
        snapshot,
    }
    
    // Id: Capabilities Namespace: cloud.project.database
    public class Capabilities {
        
        // Key: disks Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disks")]
        public required System.String[] Disks { get; set; }//;
        
        // Key: engines Type: cloud.project.database.capabilities.Engine[] FullType: cloud.project.database.capabilities.Engine[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("engines")]
        public required _cloud_project_database_capabilities.Engine[] Engines { get; set; }//;
        
        // Key: flavors Type: cloud.project.database.capabilities.Flavor[] FullType: cloud.project.database.capabilities.Flavor[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flavors")]
        public required _cloud_project_database_capabilities.Flavor[] Flavors { get; set; }//;
        
        // Key: options Type: cloud.project.database.capabilities.Option[] FullType: cloud.project.database.capabilities.Option[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("options")]
        public required _cloud_project_database_capabilities.Option[] Options { get; set; }//;
        
        // Key: plans Type: cloud.project.database.capabilities.Plan[] FullType: cloud.project.database.capabilities.Plan[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plans")]
        public required _cloud_project_database_capabilities.Plan[] Plans { get; set; }//;
        
        // Key: regions Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("regions")]
        public required System.String[] Regions { get; set; }//;
    }
    
    // Id: EngineEnum Namespace: cloud.project.database
    public enum EngineEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cassandra")]
        cassandra,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("grafana")]
        grafana,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kafka")]
        kafka,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kafkaConnect")]
        kafkaConnect,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("kafkaMirrorMaker")]
        kafkaMirrorMaker,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("m3aggregator")]
        m3aggregator,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("m3db")]
        m3db,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mongodb")]
        mongodb,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mysql")]
        mysql,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("opensearch")]
        opensearch,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("postgresql")]
        postgresql,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redis")]
        redis,
    }
    
    // Id: IpRestriction Namespace: cloud.project.database
    public class IpRestriction {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: ip Type: ipBlock FullType: ipBlock
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
        
        // Key: status Type: cloud.project.database.StatusEnum FullType: cloud.project.database.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database.StatusEnum Status { get; set; }//;
    }
    
    // Id: IpRestrictionCreation Namespace: cloud.project.database
    public class IpRestrictionCreation {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: ip Type: ipBlock FullType: ipBlock
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public required System.String Ip { get; set; }//;
    }
    
    // Id: LogSubscriptionCreation Namespace: cloud.project.database
    public class LogSubscriptionCreation {
        
        // Key: streamId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("streamId")]
        public required System.Guid StreamId { get; set; }//;
    }
    
    // Id: NetworkTypeEnum Namespace: cloud.project.database
    public enum NetworkTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("private")]
        @private,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("public")]
        @public,
    }
    
    // Id: Service Namespace: cloud.project.database
    public class Service {
        
        // Key: backupTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupTime")]
        public required System.TimeOnly BackupTime { get; set; }//;
        
        // Key: backups Type: cloud.project.database.service.Backup FullType: cloud.project.database.service.Backup
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backups")]
        public _cloud_project_database_service.Backup? Backups { get; set; }//;
        
        // Key: capabilities Type: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions FullType: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capabilities")]
        public required Dictionary<_cloud_project_database_service.CapabilityEnum, _cloud_project_database_service.CapabilityActions> Capabilities { get; set; }//;
        
        // Key: category Type: cloud.project.database.engine.CategoryEnum FullType: cloud.project.database.engine.CategoryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public required _cloud_project_database_engine.CategoryEnum Category { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: disk Type: cloud.project.database.service.Disk FullType: cloud.project.database.service.Disk
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required _cloud_project_database_service.Disk Disk { get; set; }//;
        
        // Key: enablePrometheus Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enablePrometheus")]
        public System.Boolean? EnablePrometheus { get; set; }//;
        
        // Key: endpoints Type: cloud.project.database.service.Endpoint[] FullType: cloud.project.database.service.Endpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endpoints")]
        public required _cloud_project_database_service.Endpoint[] Endpoints { get; set; }//;
        
        // Key: engine Type: cloud.project.database.EngineEnum FullType: cloud.project.database.EngineEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("engine")]
        public required _cloud_project_database.EngineEnum Engine { get; set; }//;
        
        // Key: flavor Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flavor")]
        public required System.String Flavor { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: ipRestrictions Type: cloud.project.database.service.IpRestriction[] FullType: cloud.project.database.service.IpRestriction[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ipRestrictions")]
        public required _cloud_project_database_service.IpRestriction[] IpRestrictions { get; set; }//;
        
        // Key: maintenanceTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceTime")]
        public required System.TimeOnly MaintenanceTime { get; set; }//;
        
        // Key: networkId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkId")]
        public System.Guid? NetworkId { get; set; }//;
        
        // Key: networkType Type: cloud.project.database.NetworkTypeEnum FullType: cloud.project.database.NetworkTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkType")]
        public required _cloud_project_database.NetworkTypeEnum NetworkType { get; set; }//;
        
        // Key: nodeNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodeNumber")]
        public required System.Int64 NodeNumber { get; set; }//;
        
        // Key: nodes Type: cloud.project.database.service.Node[] FullType: cloud.project.database.service.Node[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodes")]
        public required _cloud_project_database_service.Node[] Nodes { get; set; }//;
        
        // Key: plan Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plan")]
        public required System.String Plan { get; set; }//;
        
        // Key: status Type: cloud.project.database.StatusEnum FullType: cloud.project.database.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database.StatusEnum Status { get; set; }//;
        
        // Key: storage Type: cloud.project.database.service.Storage FullType: cloud.project.database.service.Storage
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("storage")]
        public _cloud_project_database_service.Storage? Storage { get; set; }//;
        
        // Key: subnetId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnetId")]
        public System.Guid? SubnetId { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: ServiceCreation Namespace: cloud.project.database
    public class ServiceCreation {
        
        // Key: backup Type: cloud.project.database.service.creation.BackupFork FullType: cloud.project.database.service.creation.BackupFork
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backup")]
        public _cloud_project_database_service_creation.BackupFork? Backup { get; set; }//;
        
        // Key: backupTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupTime")]
        public System.TimeOnly? BackupTime { get; set; }//;
        
        // Key: backups Type: cloud.project.database.service.Backup FullType: cloud.project.database.service.Backup
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backups")]
        public _cloud_project_database_service.Backup? Backups { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: disk Type: cloud.project.database.service.Disk FullType: cloud.project.database.service.Disk
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required _cloud_project_database_service.Disk Disk { get; set; }//;
        
        // Key: forkFrom Type: cloud.project.database.service.creation.ForkFrom FullType: cloud.project.database.service.creation.ForkFrom
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("forkFrom")]
        public _cloud_project_database_service_creation.ForkFrom? ForkFrom { get; set; }//;
        
        // Key: ipRestrictions Type: cloud.project.database.service.IpRestriction[] FullType: cloud.project.database.service.IpRestriction[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ipRestrictions")]
        public required _cloud_project_database_service.IpRestriction[] IpRestrictions { get; set; }//;
        
        // Key: maintenanceTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceTime")]
        public System.TimeOnly? MaintenanceTime { get; set; }//;
        
        // Key: networkId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkId")]
        public System.Guid? NetworkId { get; set; }//;
        
        // Key: nodesList Type: cloud.project.database.service.NodeCreation[] FullType: cloud.project.database.service.NodeCreation[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodesList")]
        public _cloud_project_database_service.NodeCreation[]? NodesList { get; set; }//;
        
        // Key: nodesPattern Type: cloud.project.database.service.NodePattern FullType: cloud.project.database.service.NodePattern
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodesPattern")]
        public _cloud_project_database_service.NodePattern? NodesPattern { get; set; }//;
        
        // Key: plan Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plan")]
        public required System.String Plan { get; set; }//;
        
        // Key: subnetId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnetId")]
        public System.Guid? SubnetId { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: ServiceWithoutPrometheus Namespace: cloud.project.database
    public class ServiceWithoutPrometheus {
        
        // Key: backupTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupTime")]
        public required System.TimeOnly BackupTime { get; set; }//;
        
        // Key: backups Type: cloud.project.database.service.Backup FullType: cloud.project.database.service.Backup
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backups")]
        public _cloud_project_database_service.Backup? Backups { get; set; }//;
        
        // Key: capabilities Type: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions FullType: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capabilities")]
        public required Dictionary<_cloud_project_database_service.CapabilityEnum, _cloud_project_database_service.CapabilityActions> Capabilities { get; set; }//;
        
        // Key: category Type: cloud.project.database.engine.CategoryEnum FullType: cloud.project.database.engine.CategoryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public required _cloud_project_database_engine.CategoryEnum Category { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: disk Type: cloud.project.database.service.Disk FullType: cloud.project.database.service.Disk
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required _cloud_project_database_service.Disk Disk { get; set; }//;
        
        // Key: endpoints Type: cloud.project.database.service.Endpoint[] FullType: cloud.project.database.service.Endpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endpoints")]
        public required _cloud_project_database_service.Endpoint[] Endpoints { get; set; }//;
        
        // Key: engine Type: cloud.project.database.EngineEnum FullType: cloud.project.database.EngineEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("engine")]
        public required _cloud_project_database.EngineEnum Engine { get; set; }//;
        
        // Key: flavor Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flavor")]
        public required System.String Flavor { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: ipRestrictions Type: cloud.project.database.service.IpRestriction[] FullType: cloud.project.database.service.IpRestriction[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ipRestrictions")]
        public required _cloud_project_database_service.IpRestriction[] IpRestrictions { get; set; }//;
        
        // Key: maintenanceTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceTime")]
        public required System.TimeOnly MaintenanceTime { get; set; }//;
        
        // Key: networkId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkId")]
        public System.Guid? NetworkId { get; set; }//;
        
        // Key: networkType Type: cloud.project.database.NetworkTypeEnum FullType: cloud.project.database.NetworkTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkType")]
        public required _cloud_project_database.NetworkTypeEnum NetworkType { get; set; }//;
        
        // Key: nodeNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodeNumber")]
        public required System.Int64 NodeNumber { get; set; }//;
        
        // Key: nodes Type: cloud.project.database.service.Node[] FullType: cloud.project.database.service.Node[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodes")]
        public required _cloud_project_database_service.Node[] Nodes { get; set; }//;
        
        // Key: plan Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plan")]
        public required System.String Plan { get; set; }//;
        
        // Key: region Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("region")]
        public System.String? Region { get; set; }//;
        
        // Key: status Type: cloud.project.database.StatusEnum FullType: cloud.project.database.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database.StatusEnum Status { get; set; }//;
        
        // Key: storage Type: cloud.project.database.service.Storage FullType: cloud.project.database.service.Storage
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("storage")]
        public _cloud_project_database_service.Storage? Storage { get; set; }//;
        
        // Key: subnetId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnetId")]
        public System.Guid? SubnetId { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: StatusEnum Namespace: cloud.project.database
    public enum StatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CREATING")]
        CREATING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DELETING")]
        DELETING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ERROR")]
        ERROR,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ERROR_INCONSISTENT_SPEC")]
        ERROR_INCONSISTENT_SPEC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("LOCKED")]
        LOCKED,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("LOCKED_PENDING")]
        LOCKED_PENDING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("LOCKED_UPDATING")]
        LOCKED_UPDATING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PENDING")]
        PENDING,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("READY")]
        READY,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SHELVED")]
        SHELVED,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UPDATING")]
        UPDATING,
    }
    
    // Id: TemporaryWriteDeadline Namespace: cloud.project.database
    public class TemporaryWriteDeadline {
        
        // Key: until Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("until")]
        public required System.DateTime Until { get; set; }//;
    }
    
    // Id: TypeEnum Namespace: cloud.project.database
    public enum TypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("boolean")]
        boolean,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("double")]
        @double,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("duration")]
        duration,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("long")]
        @long,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("string")]
        @string,
    }
}
