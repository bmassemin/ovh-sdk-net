//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _ssl {
    
    
    // Id: Certificate Namespace: ssl
    public class Certificate {
        
        // Key: authority Type: ssl.CertificateAuthorityEnum FullType: ssl.CertificateAuthorityEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("authority")]
        public required _ssl.CertificateAuthorityEnum Authority { get; set; }//;
        
        // Key: certificate Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certificate")]
        public System.String? _Certificate { get; set; }//;
        
        // Key: chain Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("chain")]
        public System.String? Chain { get; set; }//;
        
        // Key: commonName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commonName")]
        public required System.String CommonName { get; set; }//;
        
        // Key: csr Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("csr")]
        public required System.String Csr { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
        
        // Key: status Type: ssl.CertificateStatusEnum FullType: ssl.CertificateStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _ssl.CertificateStatusEnum Status { get; set; }//;
        
        // Key: subjectAltName Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subjectAltName")]
        public required System.String[] SubjectAltName { get; set; }//;
        
        // Key: type Type: ssl.CertificateTypeEnum FullType: ssl.CertificateTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _ssl.CertificateTypeEnum Type { get; set; }//;
        
        // Key: validityEnd Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validityEnd")]
        public System.DateTime? ValidityEnd { get; set; }//;
        
        // Key: validityStart Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validityStart")]
        public System.DateTime? ValidityStart { get; set; }//;
    }
    
    // Id: CertificateAuthorityEnum Namespace: ssl
    public enum CertificateAuthorityEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comodo")]
        comodo,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sectigo")]
        sectigo,
    }
    
    // Id: CertificateStatusEnum Namespace: ssl
    public enum CertificateStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validating")]
        validating,
    }
    
    // Id: CertificateTypeEnum Namespace: ssl
    public enum CertificateTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DV")]
        DV,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("EV")]
        EV,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("OV")]
        OV,
    }
    
    // Id: Certificate Namespace: ssl
    public class CertificateWithIAM {
        
        // Key: authority Type: ssl.CertificateAuthorityEnum FullType: ssl.CertificateAuthorityEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("authority")]
        public required _ssl.CertificateAuthorityEnum Authority { get; set; }//;
        
        // Key: certificate Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certificate")]
        public System.String? Certificate { get; set; }//;
        
        // Key: chain Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("chain")]
        public System.String? Chain { get; set; }//;
        
        // Key: commonName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("commonName")]
        public required System.String CommonName { get; set; }//;
        
        // Key: csr Type: text FullType: text
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("csr")]
        public required System.String Csr { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public required System.String ServiceName { get; set; }//;
        
        // Key: status Type: ssl.CertificateStatusEnum FullType: ssl.CertificateStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _ssl.CertificateStatusEnum Status { get; set; }//;
        
        // Key: subjectAltName Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subjectAltName")]
        public required System.String[] SubjectAltName { get; set; }//;
        
        // Key: type Type: ssl.CertificateTypeEnum FullType: ssl.CertificateTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _ssl.CertificateTypeEnum Type { get; set; }//;
        
        // Key: validityEnd Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validityEnd")]
        public System.DateTime? ValidityEnd { get; set; }//;
        
        // Key: validityStart Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validityStart")]
        public System.DateTime? ValidityStart { get; set; }//;
    }
    
    // Id: Operation Namespace: ssl
    public class Operation {
        
        // Key: doneDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doneDate")]
        public System.DateTime? DoneDate { get; set; }//;
        
        // Key: function Type: ssl.OperationFunctionEnum FullType: ssl.OperationFunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public required _ssl.OperationFunctionEnum Function { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: startDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("startDate")]
        public required System.DateTime StartDate { get; set; }//;
        
        // Key: status Type: ssl.OperationStatusEnum FullType: ssl.OperationStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _ssl.OperationStatusEnum Status { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public required System.Int64 TaskId { get; set; }//;
    }
    
    // Id: OperationFunctionEnum Namespace: ssl
    public enum OperationFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("acme_order_certificate")]
        acme_order_certificate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sectigo_deliver_certificate")]
        sectigo_deliver_certificate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sectigo_deliver_certificate_from_api")]
        sectigo_deliver_certificate_from_api,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sectigo_order_certificate")]
        sectigo_order_certificate,
    }
    
    // Id: OperationStatusEnum Namespace: ssl
    public enum OperationStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
}
