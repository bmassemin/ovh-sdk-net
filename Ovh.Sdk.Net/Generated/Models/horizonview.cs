//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _horizonView {
    
    
    // Id: AccessPointTypeEnum Namespace: horizonView
    public enum AccessPointTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("privateAccessPoint")]
        privateAccessPoint,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("publicAccessPoint")]
        publicAccessPoint,
    }
    
    // Id: CustomerNetwork Namespace: horizonView
    public class CustomerNetwork {
        
        // Key: customerNetworkId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerNetworkId")]
        public long CustomerNetworkId { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: network Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public string Network { get; set; }//;
    }
    
    // Id: CustomerNetworkPool Namespace: horizonView
    public class CustomerNetworkPool {
        
        // Key: customerNetworkId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerNetworkId")]
        public long CustomerNetworkId { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: network Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("network")]
        public string Network { get; set; }//;
    }
    
    // Id: CustomerUser Namespace: horizonView
    public class CustomerUser {
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public System.String? Email { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: username Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("username")]
        public string Username { get; set; }//;
    }
    
    // Id: Datacenter Namespace: horizonView
    public class Datacenter {
        
        // Key: activeDirectoryIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryIP")]
        public string ActiveDirectoryIP { get; set; }//;
        
        // Key: adminDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminDomain")]
        public string AdminDomain { get; set; }//;
        
        // Key: adminNetworkNextHop Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminNetworkNextHop")]
        public string AdminNetworkNextHop { get; set; }//;
        
        // Key: adminPrivateNetwork Type: ipBlock FullType: ipBlock
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminPrivateNetwork")]
        public string AdminPrivateNetwork { get; set; }//;
        
        // Key: customerIntercoIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoIP")]
        public string CustomerIntercoIP { get; set; }//;
        
        // Key: customerIntercoMask Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoMask")]
        public string CustomerIntercoMask { get; set; }//;
        
        // Key: customerIntercoVlanId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoVlanId")]
        public long CustomerIntercoVlanId { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public long DatacenterId { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
    }
    
    // Id: Datacenter Namespace: horizonView
    public class DatacenterWithIAM {
        
        // Key: activeDirectoryIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryIP")]
        public string ActiveDirectoryIP { get; set; }//;
        
        // Key: adminDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminDomain")]
        public string AdminDomain { get; set; }//;
        
        // Key: adminNetworkNextHop Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminNetworkNextHop")]
        public string AdminNetworkNextHop { get; set; }//;
        
        // Key: adminPrivateNetwork Type: ipBlock FullType: ipBlock
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("adminPrivateNetwork")]
        public string AdminPrivateNetwork { get; set; }//;
        
        // Key: customerIntercoIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoIP")]
        public string CustomerIntercoIP { get; set; }//;
        
        // Key: customerIntercoMask Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoMask")]
        public string CustomerIntercoMask { get; set; }//;
        
        // Key: customerIntercoVlanId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customerIntercoVlanId")]
        public long CustomerIntercoVlanId { get; set; }//;
        
        // Key: datacenterId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenterId")]
        public long DatacenterId { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
    }
    
    // Id: DedicatedHorizon Namespace: horizonView
    public class DedicatedHorizon {
        
        // Key: masterZone Type: horizonView.Zone FullType: horizonView.Zone
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("masterZone")]
        public _horizonView.Zone MasterZone { get; set; }//;
        
        // Key: privateCloudName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("privateCloudName")]
        public string PrivateCloudName { get; set; }//;
        
        // Key: privateCloudZone Type: horizonView.Zone FullType: horizonView.Zone
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("privateCloudZone")]
        public _horizonView.Zone PrivateCloudZone { get; set; }//;
        
        // Key: publicUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("publicUrl")]
        public string PublicUrl { get; set; }//;
        
        // Key: state Type: horizonView.StateEnum FullType: horizonView.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _horizonView.StateEnum State { get; set; }//;
        
        // Key: storageAccelerator Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("storageAccelerator")]
        public bool StorageAccelerator { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public string Version { get; set; }//;
    }
    
    // Id: DomainTrust Namespace: horizonView
    public class DomainTrust {
        
        // Key: activeDirectoryIP Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("activeDirectoryIP")]
        public string ActiveDirectoryIP { get; set; }//;
        
        // Key: dns1 Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dns1")]
        public System.String? Dns1 { get; set; }//;
        
        // Key: dns2 Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dns2")]
        public System.String? Dns2 { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public string Domain { get; set; }//;
        
        // Key: domainTrustId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domainTrustId")]
        public long DomainTrustId { get; set; }//;
    }
    
    // Id: Pool Namespace: horizonView
    public class Pool {
        
        // Key: accessPointId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessPointId")]
        public long AccessPointId { get; set; }//;
        
        // Key: dhcpNetmask Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dhcpNetmask")]
        public string DhcpNetmask { get; set; }//;
        
        // Key: dhcpNetwork Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dhcpNetwork")]
        public string DhcpNetwork { get; set; }//;
        
        // Key: externalUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("externalUrl")]
        public string ExternalUrl { get; set; }//;
        
        // Key: intercoNextHop Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("intercoNextHop")]
        public System.String? IntercoNextHop { get; set; }//;
        
        // Key: intercoPrivateNextHop Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("intercoPrivateNextHop")]
        public System.String? IntercoPrivateNextHop { get; set; }//;
        
        // Key: portGroupId Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("portGroupId")]
        public string PortGroupId { get; set; }//;
        
        // Key: state Type: horizonView.StateEnum FullType: horizonView.StateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _horizonView.StateEnum State { get; set; }//;
        
        // Key: twoFA Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("twoFA")]
        public bool TwoFA { get; set; }//;
        
        // Key: type Type: horizonView.PoolType FullType: horizonView.PoolType
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _horizonView.PoolType Type { get; set; }//;
    }
    
    // Id: PoolType Namespace: horizonView
    public enum PoolType {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hybridPool")]
        hybridPool,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("privatePool")]
        privatePool,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("publicPool")]
        publicPool,
    }
    
    // Id: StateEnum Namespace: horizonView
    public enum StateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("available")]
        available,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("delivered")]
        delivered,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reserved")]
        reserved,
    }
    
    // Id: Task Namespace: horizonView
    public class Task {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: lastModificationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: progress Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("progress")]
        public long Progress { get; set; }//;
        
        // Key: state Type: horizonView.TaskStateEnum FullType: horizonView.TaskStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public _horizonView.TaskStateEnum State { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public long TaskId { get; set; }//;
    }
    
    // Id: TaskStateEnum Namespace: horizonView
    public enum TaskStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canceled")]
        canceled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fixing")]
        fixing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toCancel")]
        toCancel,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("toCreate")]
        toCreate,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingForChilds")]
        waitingForChilds,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("waitingTodo")]
        waitingTodo,
    }
    
    // Id: User Namespace: horizonView
    public class User {
        
        // Key: username Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("username")]
        public string Username { get; set; }//;
    }
    
    // Id: Zone Namespace: horizonView
    public enum Zone {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Beauharnois")]
        Beauharnois,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Roubaix")]
        Roubaix,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("Strasbourg")]
        Strasbourg,
    }
}
