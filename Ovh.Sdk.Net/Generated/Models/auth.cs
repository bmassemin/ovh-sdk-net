//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _auth {
    
    
    // Id: AccessRule Namespace: auth
    public class AccessRule {
        
        // Key: method Type: auth.HTTPMethodEnum FullType: auth.HTTPMethodEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("method")]
        public required _auth.HTTPMethodEnum Method { get; set; }//;
        
        // Key: path Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("path")]
        public required System.String Path { get; set; }//;
    }
    
    // Id: AccessRuleRequest Namespace: auth
    public class AccessRuleRequest {
        
        // Key: method Type: auth.HTTPMethodEnum FullType: auth.HTTPMethodEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("method")]
        public required _auth.HTTPMethodEnum Method { get; set; }//;
        
        // Key: path Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("path")]
        public required System.String Path { get; set; }//;
    }
    
    // Id: ApiApplication Namespace: auth
    public class ApiApplication {
        
        // Key: applicationId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("applicationId")]
        public required System.Int64 ApplicationId { get; set; }//;
        
        // Key: applicationKey Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("applicationKey")]
        public required System.String ApplicationKey { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: status Type: auth.ApplicationStatusEnum FullType: auth.ApplicationStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _auth.ApplicationStatusEnum Status { get; set; }//;
    }
    
    // Id: ApiCredential Namespace: auth
    public class ApiCredential {
        
        // Key: allowedIPs Type: ipBlock[] FullType: ipBlock[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedIPs")]
        public System.String[]? AllowedIPs { get; set; }//;
        
        // Key: applicationId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("applicationId")]
        public required System.Int64 ApplicationId { get; set; }//;
        
        // Key: creation Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creation")]
        public required System.DateTime Creation { get; set; }//;
        
        // Key: credentialId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("credentialId")]
        public required System.Int64 CredentialId { get; set; }//;
        
        // Key: expiration Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expiration")]
        public System.DateTime? Expiration { get; set; }//;
        
        // Key: lastUse Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUse")]
        public System.DateTime? LastUse { get; set; }//;
        
        // Key: ovhSupport Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ovhSupport")]
        public required System.Boolean OvhSupport { get; set; }//;
        
        // Key: rules Type: auth.AccessRule[] FullType: auth.AccessRule[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rules")]
        public required _auth.AccessRule[] Rules { get; set; }//;
        
        // Key: status Type: auth.CredentialStateEnum FullType: auth.CredentialStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _auth.CredentialStateEnum Status { get; set; }//;
    }
    
    // Id: ApiCredentialRequest Namespace: auth
    public class ApiCredentialRequest {
        
        // Key: consumerKey Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("consumerKey")]
        public required System.String ConsumerKey { get; set; }//;
        
        // Key: state Type: auth.CredentialStateEnum FullType: auth.CredentialStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _auth.CredentialStateEnum State { get; set; }//;
        
        // Key: validationUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validationUrl")]
        public required System.String ValidationUrl { get; set; }//;
    }
    
    // Id: ApiCredentialRequestParams Namespace: auth
    public class ApiCredentialRequestParams {
        
        // Key: accessRules Type: auth.AccessRuleRequest[] FullType: auth.AccessRuleRequest[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessRules")]
        public required _auth.AccessRuleRequest[] AccessRules { get; set; }//;
        
        // Key: allowedIPs Type: ipBlock[] FullType: ipBlock[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedIPs")]
        public System.String[]? AllowedIPs { get; set; }//;
        
        // Key: redirection Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("redirection")]
        public System.String? Redirection { get; set; }//;
    }
    
    // Id: ApplicationStatusEnum Namespace: auth
    public enum ApplicationStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("blocked")]
        blocked,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("inactive")]
        inactive,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("trusted")]
        trusted,
    }
    
    // Id: Certificate Namespace: auth
    public class Certificate {
        
        // Key: expiration Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expiration")]
        public required System.DateTime Expiration { get; set; }//;
        
        // Key: subject Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subject")]
        public required System.String Subject { get; set; }//;
    }
    
    // Id: Credential Namespace: auth
    public class Credential {
        
        // Key: consumerKey Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("consumerKey")]
        public required System.String ConsumerKey { get; set; }//;
        
        // Key: state Type: auth.CredentialStateEnum FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("state")]
        public required _auth.CredentialStateEnum State { get; set; }//;
        
        // Key: validationUrl Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validationUrl")]
        public System.String? ValidationUrl { get; set; }//;
    }
    
    // Id: CredentialStateEnum Namespace: auth
    public enum CredentialStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expired")]
        expired,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("pendingValidation")]
        pendingValidation,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("refused")]
        refused,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("validated")]
        validated,
    }
    
    // Id: Details Namespace: auth
    public class Details {
        
        // Key: account Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        public required System.String Account { get; set; }//;
        
        // Key: allowedRoutes Type: auth.AccessRule[] FullType: auth.AccessRule[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedRoutes")]
        public _auth.AccessRule[]? AllowedRoutes { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: identities Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("identities")]
        public required System.String[] Identities { get; set; }//;
        
        // Key: method Type: auth.MethodEnum FullType: auth.MethodEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("method")]
        public required _auth.MethodEnum Method { get; set; }//;
        
        // Key: roles Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("roles")]
        public System.String[]? Roles { get; set; }//;
        
        // Key: user Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("user")]
        public System.String? User { get; set; }//;
    }
    
    // Id: Group Namespace: auth
    public class Group {
        
        // Key: creation Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creation")]
        public required System.DateTime Creation { get; set; }//;
        
        // Key: defaultGroup Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("defaultGroup")]
        public required System.Boolean DefaultGroup { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: role Type: auth.RoleEnum FullType: auth.RoleEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("role")]
        public required _auth.RoleEnum Role { get; set; }//;
        
        // Key: urn Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("urn")]
        public required System.String Urn { get; set; }//;
    }
    
    // Id: GroupRequest Namespace: auth
    public class GroupRequest {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public System.String? Description { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: role Type: auth.RoleEnum FullType: auth.RoleEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("role")]
        public required _auth.RoleEnum Role { get; set; }//;
    }
    
    // Id: HTTPMethodEnum Namespace: auth
    public enum HTTPMethodEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DELETE")]
        DELETE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("GET")]
        GET,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("POST")]
        POST,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PUT")]
        PUT,
    }
    
    // Id: MethodEnum Namespace: auth
    public enum MethodEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("account")]
        account,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("oauth2_client_credentials")]
        oauth2_client_credentials,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("provider")]
        provider,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("user")]
        user,
    }
    
    // Id: Provider Namespace: auth
    public class Provider {
        
        // Key: creation Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creation")]
        public required System.DateTime Creation { get; set; }//;
        
        // Key: disableUsers Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disableUsers")]
        public System.Boolean? DisableUsers { get; set; }//;
        
        // Key: extensions Type: auth.ProviderExtensions FullType: auth.ProviderExtensions
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extensions")]
        public required _auth.ProviderExtensions Extensions { get; set; }//;
        
        // Key: groupAttributeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("groupAttributeName")]
        public required System.String GroupAttributeName { get; set; }//;
        
        // Key: idpSigningCertificates Type: auth.Certificate[] FullType: auth.Certificate[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("idpSigningCertificates")]
        public required _auth.Certificate[] IdpSigningCertificates { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: signRequests Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("signRequests")]
        public System.Boolean? SignRequests { get; set; }//;
        
        // Key: ssoServiceUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ssoServiceUrl")]
        public required System.String SsoServiceUrl { get; set; }//;
        
        // Key: userAttributeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userAttributeName")]
        public required System.String UserAttributeName { get; set; }//;
    }
    
    // Id: ProviderExtensions Namespace: auth
    public class ProviderExtensions {
        
        // Key: requestedAttributes Type: auth.ProviderRequestedAttributes[] FullType: auth.ProviderRequestedAttributes[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("requestedAttributes")]
        public _auth.ProviderRequestedAttributes[]? RequestedAttributes { get; set; }//;
    }
    
    // Id: ProviderRequest Namespace: auth
    public class ProviderRequest {
        
        // Key: disableUsers Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disableUsers")]
        public System.Boolean? DisableUsers { get; set; }//;
        
        // Key: extensions Type: auth.ProviderExtensions FullType: auth.ProviderExtensions
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extensions")]
        public required _auth.ProviderExtensions Extensions { get; set; }//;
        
        // Key: groupAttributeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("groupAttributeName")]
        public System.String? GroupAttributeName { get; set; }//;
        
        // Key: metadata Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("metadata")]
        public required System.String Metadata { get; set; }//;
        
        // Key: signRequests Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("signRequests")]
        public System.Boolean? SignRequests { get; set; }//;
        
        // Key: userAttributeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("userAttributeName")]
        public System.String? UserAttributeName { get; set; }//;
    }
    
    // Id: ProviderRequestedAttributes Namespace: auth
    public class ProviderRequestedAttributes {
        
        // Key: isRequired Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isRequired")]
        public required System.Boolean IsRequired { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: nameFormat Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameFormat")]
        public System.String? NameFormat { get; set; }//;
        
        // Key: values Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("values")]
        public System.String[]? Values { get; set; }//;
    }
    
    // Id: RoleEnum Namespace: auth
    public enum RoleEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ADMIN")]
        ADMIN,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NONE")]
        NONE,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("REGULAR")]
        REGULAR,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("UNPRIVILEGED")]
        UNPRIVILEGED,
    }
    
    // Id: Token Namespace: auth
    public class Token {
        
        // Key: token Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("token")]
        public required System.String _Token { get; set; }//;
    }
    
    // Id: User Namespace: auth
    public class User {
        
        // Key: creation Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creation")]
        public required System.DateTime Creation { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: group Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("group")]
        public required System.String Group { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public required System.DateTime LastUpdate { get; set; }//;
        
        // Key: login Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("login")]
        public required System.String Login { get; set; }//;
        
        // Key: passwordLastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("passwordLastUpdate")]
        public required System.DateTime PasswordLastUpdate { get; set; }//;
        
        // Key: status Type: auth.UserStatusEnum FullType: auth.UserStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _auth.UserStatusEnum Status { get; set; }//;
        
        // Key: urn Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("urn")]
        public required System.String Urn { get; set; }//;
    }
    
    // Id: UserRequest Namespace: auth
    public class UserRequest {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public required System.String Email { get; set; }//;
        
        // Key: group Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("group")]
        public required System.String Group { get; set; }//;
        
        // Key: login Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("login")]
        public required System.String Login { get; set; }//;
        
        // Key: password Type: password FullType: password
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("password")]
        public required System.String Password { get; set; }//;
    }
    
    // Id: UserStatusEnum Namespace: auth
    public enum UserStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DISABLED")]
        DISABLED,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("OK")]
        OK,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PASSWORD_CHANGE_REQUIRED")]
        PASSWORD_CHANGE_REQUIRED,
    }
}
