//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _dedicated_installationTemplate {
    
    
    // Id: Templates Namespace: dedicated.installationTemplate
    public class Templates {
        
        // Key: bitFormat Type: dedicated.server.BitFormatEnum FullType: dedicated.server.BitFormatEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bitFormat")]
        public required _dedicated_server.BitFormatEnum BitFormat { get; set; }//;
        
        // Key: category Type: dedicated.TemplateOsUsageEnum FullType: dedicated.TemplateOsUsageEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public required _dedicated.TemplateOsUsageEnum Category { get; set; }//;
        
        // Key: customization Type: dedicated.TemplateOsProperties FullType: dedicated.TemplateOsProperties
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customization")]
        public _dedicated.TemplateOsProperties? Customization { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: distribution Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("distribution")]
        public required System.String Distribution { get; set; }//;
        
        // Key: endOfInstall Type: date FullType: date
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endOfInstall")]
        public required System.DateOnly EndOfInstall { get; set; }//;
        
        // Key: family Type: dedicated.TemplateOsTypeEnum FullType: dedicated.TemplateOsTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("family")]
        public required _dedicated.TemplateOsTypeEnum Family { get; set; }//;
        
        // Key: filesystems Type: dedicated.server.FileSystemEnum[] FullType: dedicated.server.FileSystemEnum[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filesystems")]
        public required _dedicated_server.FileSystemEnum[] Filesystems { get; set; }//;
        
        // Key: inputs Type: dedicated.TemplateOsInput[] FullType: dedicated.TemplateOsInput[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("inputs")]
        public _dedicated.TemplateOsInput[]? Inputs { get; set; }//;
        
        // Key: license Type: dedicated.TemplateOsInfoLicense FullType: dedicated.TemplateOsInfoLicense
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("license")]
        public _dedicated.TemplateOsInfoLicense? License { get; set; }//;
        
        // Key: lvmReady Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lvmReady")]
        public System.Boolean? LvmReady { get; set; }//;
        
        // Key: noPartitioning Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noPartitioning")]
        public required System.Boolean NoPartitioning { get; set; }//;
        
        // Key: project Type: dedicated.TemplateOsInfoProject FullType: dedicated.TemplateOsInfoProject
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("project")]
        public _dedicated.TemplateOsInfoProject? Project { get; set; }//;
        
        // Key: rootMountpoint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rootMountpoint")]
        public System.String? RootMountpoint { get; set; }//;
        
        // Key: softRaidOnlyMirroring Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("softRaidOnlyMirroring")]
        public required System.Boolean SoftRaidOnlyMirroring { get; set; }//;
        
        // Key: subfamily Type: dedicated.TemplateOsSubfamilyEnum FullType: dedicated.TemplateOsSubfamilyEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subfamily")]
        public required _dedicated.TemplateOsSubfamilyEnum Subfamily { get; set; }//;
        
        // Key: templateName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("templateName")]
        public required System.String TemplateName { get; set; }//;
    }
    
    // Id: hardwareRaid Namespace: dedicated.installationTemplate
    public class hardwareRaid {
        
        // Key: disks Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disks")]
        public required System.String[] Disks { get; set; }//;
        
        // Key: mode Type: dedicated.TemplateOsHardwareRaidEnum FullType: dedicated.TemplateOsHardwareRaidEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mode")]
        public required _dedicated.TemplateOsHardwareRaidEnum Mode { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: step Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("step")]
        public required System.Int64 Step { get; set; }//;
    }
    
    // Id: templatePartitioningSchemes Namespace: dedicated.installationTemplate
    public class templatePartitioningSchemes {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: priority Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("priority")]
        public required System.Int64 Priority { get; set; }//;
    }
    
    // Id: templatePartitions Namespace: dedicated.installationTemplate
    public class templatePartitions {
        
        // Key: filesystem Type: dedicated.server.FileSystemEnum FullType: dedicated.server.FileSystemEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("filesystem")]
        public required _dedicated_server.FileSystemEnum Filesystem { get; set; }//;
        
        // Key: mountpoint Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("mountpoint")]
        public required System.String Mountpoint { get; set; }//;
        
        // Key: order Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("order")]
        public required System.Int64 Order { get; set; }//;
        
        // Key: raid Type: dedicated.server.PartitionRaidEnum FullType: dedicated.server.PartitionRaidEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("raid")]
        public _dedicated_server.PartitionRaidEnum? Raid { get; set; }//;
        
        // Key: size Type: complexType.UnitAndValue<long> FullType: complexType.UnitAndValue<long>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public required _complexType.UnitAndValue<long> Size { get; set; }//;
        
        // Key: type Type: dedicated.TemplatePartitionTypeEnum FullType: dedicated.TemplatePartitionTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public required _dedicated.TemplatePartitionTypeEnum Type { get; set; }//;
        
        // Key: volumeName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("volumeName")]
        public System.String? VolumeName { get; set; }//;
    }
}
