//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _cloud_project_database_kafka {
    
    
    // Id: Permissions Namespace: cloud.project.database.kafka
    public class Permissions {
        
        // Key: names Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("names")]
        public required System.String[] Names { get; set; }//;
        
        // Key: schemaRegistry Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("schemaRegistry")]
        public required System.String[] SchemaRegistry { get; set; }//;
        
        // Key: topic Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("topic")]
        public required System.String[] Topic { get; set; }//;
    }
    
    // Id: SchemaRegistryAcl Namespace: cloud.project.database.kafka
    public class SchemaRegistryAcl {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: permission Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("permission")]
        public required System.String Permission { get; set; }//;
        
        // Key: resource Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("resource")]
        public required System.String Resource { get; set; }//;
        
        // Key: username Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("username")]
        public required System.String Username { get; set; }//;
    }
    
    // Id: Service Namespace: cloud.project.database.kafka
    public class Service {
        
        // Key: backupTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backupTime")]
        public required System.TimeOnly BackupTime { get; set; }//;
        
        // Key: backups Type: cloud.project.database.service.Backup FullType: cloud.project.database.service.Backup
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backups")]
        public _cloud_project_database_service.Backup? Backups { get; set; }//;
        
        // Key: capabilities Type: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions FullType: map[cloud.project.database.service.CapabilityEnum]cloud.project.database.service.CapabilityActions
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("capabilities")]
        public required Dictionary<_cloud_project_database_service.CapabilityEnum, _cloud_project_database_service.CapabilityActions> Capabilities { get; set; }//;
        
        // Key: category Type: cloud.project.database.engine.CategoryEnum FullType: cloud.project.database.engine.CategoryEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("category")]
        public required _cloud_project_database_engine.CategoryEnum Category { get; set; }//;
        
        // Key: createdAt Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("createdAt")]
        public required System.DateTime CreatedAt { get; set; }//;
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public required System.String Description { get; set; }//;
        
        // Key: disk Type: cloud.project.database.service.Disk FullType: cloud.project.database.service.Disk
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disk")]
        public required _cloud_project_database_service.Disk Disk { get; set; }//;
        
        // Key: enablePrometheus Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enablePrometheus")]
        public System.Boolean? EnablePrometheus { get; set; }//;
        
        // Key: endpoints Type: cloud.project.database.service.Endpoint[] FullType: cloud.project.database.service.Endpoint[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("endpoints")]
        public required _cloud_project_database_service.Endpoint[] Endpoints { get; set; }//;
        
        // Key: engine Type: cloud.project.database.EngineEnum FullType: cloud.project.database.EngineEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("engine")]
        public required _cloud_project_database.EngineEnum Engine { get; set; }//;
        
        // Key: flavor Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flavor")]
        public required System.String Flavor { get; set; }//;
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: ipRestrictions Type: cloud.project.database.service.IpRestriction[] FullType: cloud.project.database.service.IpRestriction[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ipRestrictions")]
        public required _cloud_project_database_service.IpRestriction[] IpRestrictions { get; set; }//;
        
        // Key: maintenanceTime Type: time FullType: time
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maintenanceTime")]
        public required System.TimeOnly MaintenanceTime { get; set; }//;
        
        // Key: networkId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkId")]
        public System.Guid? NetworkId { get; set; }//;
        
        // Key: networkType Type: cloud.project.database.NetworkTypeEnum FullType: cloud.project.database.NetworkTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("networkType")]
        public required _cloud_project_database.NetworkTypeEnum NetworkType { get; set; }//;
        
        // Key: nodeNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodeNumber")]
        public required System.Int64 NodeNumber { get; set; }//;
        
        // Key: nodes Type: cloud.project.database.service.Node[] FullType: cloud.project.database.service.Node[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nodes")]
        public required _cloud_project_database_service.Node[] Nodes { get; set; }//;
        
        // Key: plan Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plan")]
        public required System.String Plan { get; set; }//;
        
        // Key: restApi Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restApi")]
        public required System.Boolean RestApi { get; set; }//;
        
        // Key: schemaRegistry Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("schemaRegistry")]
        public required System.Boolean SchemaRegistry { get; set; }//;
        
        // Key: status Type: cloud.project.database.StatusEnum FullType: cloud.project.database.StatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _cloud_project_database.StatusEnum Status { get; set; }//;
        
        // Key: storage Type: cloud.project.database.service.Storage FullType: cloud.project.database.service.Storage
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("storage")]
        public _cloud_project_database_service.Storage? Storage { get; set; }//;
        
        // Key: subnetId Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subnetId")]
        public System.Guid? SubnetId { get; set; }//;
        
        // Key: version Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("version")]
        public required System.String Version { get; set; }//;
    }
    
    // Id: Topic Namespace: cloud.project.database.kafka
    public class Topic {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: minInsyncReplicas Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minInsyncReplicas")]
        public required System.Int64 MinInsyncReplicas { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: partitions Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("partitions")]
        public required System.Int64 Partitions { get; set; }//;
        
        // Key: replication Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replication")]
        public required System.Int64 Replication { get; set; }//;
        
        // Key: retentionBytes Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionBytes")]
        public required System.Int64 RetentionBytes { get; set; }//;
        
        // Key: retentionHours Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionHours")]
        public required System.Int64 RetentionHours { get; set; }//;
    }
    
    // Id: TopicAcl Namespace: cloud.project.database.kafka
    public class TopicAcl {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: permission Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("permission")]
        public required System.String Permission { get; set; }//;
        
        // Key: topic Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("topic")]
        public required System.String Topic { get; set; }//;
        
        // Key: username Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("username")]
        public required System.String Username { get; set; }//;
    }
    
    // Id: TopicCreation Namespace: cloud.project.database.kafka
    public class TopicCreation {
        
        // Key: id Type: uuid FullType: uuid
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Guid Id { get; set; }//;
        
        // Key: minInsyncReplicas Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minInsyncReplicas")]
        public required System.Int64 MinInsyncReplicas { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public required System.String Name { get; set; }//;
        
        // Key: partitions Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("partitions")]
        public required System.Int64 Partitions { get; set; }//;
        
        // Key: replication Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("replication")]
        public required System.Int64 Replication { get; set; }//;
        
        // Key: retentionBytes Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionBytes")]
        public required System.Int64 RetentionBytes { get; set; }//;
        
        // Key: retentionHours Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retentionHours")]
        public required System.Int64 RetentionHours { get; set; }//;
    }
}
