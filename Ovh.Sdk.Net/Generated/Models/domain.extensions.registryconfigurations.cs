//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _domain_extensions_registryConfigurations {
    
    
    // Id: CreateLifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class CreateLifecycleRegistryConfiguration {
        
        // Key: allowedPeriodsInMonths Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedPeriodsInMonths")]
        public System.Int64[]? AllowedPeriodsInMonths { get; set; }//;
    }
    
    // Id: DNSRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class DNSRegistryConfiguration {
        
        // Key: isDNSSECSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isDNSSECSupported")]
        public bool IsDNSSECSupported { get; set; }//;
        
        // Key: maxNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxNumber")]
        public System.Int64? MaxNumber { get; set; }//;
        
        // Key: minNumber Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minNumber")]
        public System.Int64? MinNumber { get; set; }//;
    }
    
    // Id: DomainRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class DomainRegistryConfiguration {
        
        // Key: isPremiumSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isPremiumSupported")]
        public bool IsPremiumSupported { get; set; }//;
        
        // Key: label Type: domain.extensions.registryConfigurations.LabelDomainRegistryConfiguration FullType: domain.extensions.registryConfigurations.LabelDomainRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("label")]
        public _domain_extensions_registryConfigurations.LabelDomainRegistryConfiguration Label { get; set; }//;
    }
    
    // Id: LabelDomainRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class LabelDomainRegistryConfiguration {
        
        // Key: isIDNSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isIDNSupported")]
        public bool IsIDNSupported { get; set; }//;
        
        // Key: maxLength Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxLength")]
        public System.Int64? MaxLength { get; set; }//;
        
        // Key: minLength Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minLength")]
        public System.Int64? MinLength { get; set; }//;
    }
    
    // Id: LifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class LifecycleRegistryConfiguration {
        
        // Key: create Type: domain.extensions.registryConfigurations.CreateLifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.CreateLifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("create")]
        public _domain_extensions_registryConfigurations.CreateLifecycleRegistryConfiguration Create { get; set; }//;
        
        // Key: order Type: domain.extensions.registryConfigurations.OrderLifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.OrderLifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("order")]
        public _domain_extensions_registryConfigurations.OrderLifecycleRegistryConfiguration Order { get; set; }//;
        
        // Key: renew Type: domain.extensions.registryConfigurations.RenewLifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.RenewLifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("renew")]
        public _domain_extensions_registryConfigurations.RenewLifecycleRegistryConfiguration Renew { get; set; }//;
        
        // Key: restore Type: domain.extensions.registryConfigurations.RestoreLifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.RestoreLifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("restore")]
        public _domain_extensions_registryConfigurations.RestoreLifecycleRegistryConfiguration Restore { get; set; }//;
        
        // Key: transfer Type: domain.extensions.registryConfigurations.TransferLifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.TransferLifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("transfer")]
        public _domain_extensions_registryConfigurations.TransferLifecycleRegistryConfiguration Transfer { get; set; }//;
    }
    
    // Id: OrderLifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class OrderLifecycleRegistryConfiguration {
        
        // Key: active Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        public bool Active { get; set; }//;
        
        // Key: maxMonths Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("maxMonths")]
        public System.Int64? MaxMonths { get; set; }//;
        
        // Key: minMonths Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minMonths")]
        public System.Int64? MinMonths { get; set; }//;
    }
    
    // Id: RegistryConfigurations Namespace: domain.extensions.registryConfigurations
    public class RegistryConfigurations {
        
        // Key: dns Type: domain.extensions.registryConfigurations.DNSRegistryConfiguration FullType: domain.extensions.registryConfigurations.DNSRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dns")]
        public _domain_extensions_registryConfigurations.DNSRegistryConfiguration Dns { get; set; }//;
        
        // Key: domain Type: domain.extensions.registryConfigurations.DomainRegistryConfiguration FullType: domain.extensions.registryConfigurations.DomainRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public _domain_extensions_registryConfigurations.DomainRegistryConfiguration Domain { get; set; }//;
        
        // Key: lifecycle Type: domain.extensions.registryConfigurations.LifecycleRegistryConfiguration FullType: domain.extensions.registryConfigurations.LifecycleRegistryConfiguration
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lifecycle")]
        public _domain_extensions_registryConfigurations.LifecycleRegistryConfiguration Lifecycle { get; set; }//;
    }
    
    // Id: RenewLifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class RenewLifecycleRegistryConfiguration {
        
        // Key: allowedPeriodsInMonths Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedPeriodsInMonths")]
        public System.Int64[]? AllowedPeriodsInMonths { get; set; }//;
        
        // Key: gracePeriodInDays Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gracePeriodInDays")]
        public System.Int64? GracePeriodInDays { get; set; }//;
    }
    
    // Id: RestoreLifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class RestoreLifecycleRegistryConfiguration {
        
        // Key: gracePeriodInDays Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("gracePeriodInDays")]
        public System.Int64? GracePeriodInDays { get; set; }//;
    }
    
    // Id: TransferLifecycleRegistryConfiguration Namespace: domain.extensions.registryConfigurations
    public class TransferLifecycleRegistryConfiguration {
        
        // Key: allowedPeriodsInMonths Type: long[] FullType: long[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("allowedPeriodsInMonths")]
        public System.Int64[]? AllowedPeriodsInMonths { get; set; }//;
    }
}
