//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace _dnssec {
    
    
    // Id: DnssecStatusEnum Namespace: dnssec
    public enum DnssecStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disableInProgress")]
        disableInProgress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("disabled")]
        disabled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enableInProgress")]
        enableInProgress,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("enabled")]
        enabled,
    }
    
    // Id: Key Namespace: dnssec
    public class Key {
        
        // Key: algorithm Type: dnssec.KeyAlgorithmEnum FullType: dnssec.KeyAlgorithmEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("algorithm")]
        public required _dnssec.KeyAlgorithmEnum Algorithm { get; set; }//;
        
        // Key: flags Type: dnssec.KeyFlagEnum FullType: dnssec.KeyFlagEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flags")]
        public required _dnssec.KeyFlagEnum Flags { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public required System.Int64 Id { get; set; }//;
        
        // Key: publicKey Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("publicKey")]
        public required System.String PublicKey { get; set; }//;
        
        // Key: status Type: dnssec.KeyStatusEnum FullType: dnssec.KeyStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public required _dnssec.KeyStatusEnum Status { get; set; }//;
        
        // Key: tag Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("tag")]
        public required System.Int64 Tag { get; set; }//;
    }
    
    // Id: KeyAlgorithmEnum Namespace: dnssec
    public enum KeyAlgorithmEnum {
        
        _5 = 5,
        
        _7 = 7,
        
        _8 = 8,
        
        _10 = 10,
        
        _13 = 13,
        
        _14 = 14,
        
        _15 = 15,
    }
    
    // Id: KeyFlagEnum Namespace: dnssec
    public enum KeyFlagEnum {
        
        _256 = 256,
        
        _257 = 257,
    }
    
    // Id: KeyStatusEnum Namespace: dnssec
    public enum KeyStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("active")]
        active,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("generated")]
        generated,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("published")]
        published,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removed")]
        removed,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("retired")]
        retired,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("revoked")]
        revoked,
    }
    
    // Id: UpdatePayload Namespace: dnssec
    public class UpdatePayload {
        
        // Key: keys Type: dnssec.Key[] FullType: dnssec.Key[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keys")]
        public required _dnssec.Key[] Keys { get; set; }//;
    }
}
